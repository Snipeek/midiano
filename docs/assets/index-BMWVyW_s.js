(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();class Fe{constructor(e=!1){this.eventMap={},this.eventsSuspended=e==!0}addListener(e,t,n={}){if(typeof e=="string"&&e.length<1||e instanceof String&&e.length<1||typeof e!="string"&&!(e instanceof String)&&e!==Fe.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(typeof t!="function")throw new TypeError("The callback must be a function.");const s=new Ys(e,this,t,n);return this.eventMap[e]||(this.eventMap[e]=[]),n.prepend?this.eventMap[e].unshift(s):this.eventMap[e].push(s),s}addOneTimeListener(e,t,n={}){n.remaining=1,this.addListener(e,t,n)}static get ANY_EVENT(){return Symbol.for("Any event")}hasListener(e,t){return e===void 0?this.eventMap[Fe.ANY_EVENT]&&this.eventMap[Fe.ANY_EVENT].length>0?!0:Object.entries(this.eventMap).some(([,n])=>n.length>0):this.eventMap[e]&&this.eventMap[e].length>0?t instanceof Ys?this.eventMap[e].filter(s=>s===t).length>0:typeof t=="function"?this.eventMap[e].filter(s=>s.callback===t).length>0:t==null:!1}get eventNames(){return Object.keys(this.eventMap)}getListeners(e){return this.eventMap[e]||[]}suspendEvent(e){this.getListeners(e).forEach(t=>{t.suspended=!0})}unsuspendEvent(e){this.getListeners(e).forEach(t=>{t.suspended=!1})}getListenerCount(e){return this.getListeners(e).length}emit(e,...t){if(typeof e!="string"&&!(e instanceof String))throw new TypeError("The 'event' parameter must be a string.");if(this.eventsSuspended)return;let n=[],s=this.eventMap[Fe.ANY_EVENT]||[];return this.eventMap[e]&&(s=s.concat(this.eventMap[e])),s.forEach(i=>{if(i.suspended)return;let o=[...t];Array.isArray(i.arguments)&&(o=o.concat(i.arguments)),i.remaining>0&&(n.push(i.callback.apply(i.context,o)),i.count++),--i.remaining<1&&i.remove()}),n}removeListener(e,t,n={}){if(e===void 0){this.eventMap={};return}else if(!this.eventMap[e])return;let s=this.eventMap[e].filter(i=>t&&i.callback!==t||n.remaining&&n.remaining!==i.remaining||n.context&&n.context!==i.context);s.length?this.eventMap[e]=s:delete this.eventMap[e]}async waitFor(e,t={}){return t.duration=parseInt(t.duration),(isNaN(t.duration)||t.duration<=0)&&(t.duration=1/0),new Promise((n,s)=>{let i,o=this.addListener(e,()=>{clearTimeout(i),n()},{remaining:1});t.duration!==1/0&&(i=setTimeout(()=>{o.remove(),s("The duration expired before the event was emitted.")},t.duration))})}get eventCount(){return Object.keys(this.eventMap).length}}class Ys{constructor(e,t,n,s={}){if(typeof e!="string"&&!(e instanceof String)&&e!==Fe.ANY_EVENT)throw new TypeError("The 'event' parameter must be a string or EventEmitter.ANY_EVENT.");if(!t)throw new ReferenceError("The 'target' parameter is mandatory.");if(typeof n!="function")throw new TypeError("The 'callback' must be a function.");s.arguments!==void 0&&!Array.isArray(s.arguments)&&(s.arguments=[s.arguments]),s=Object.assign({context:t,remaining:1/0,arguments:void 0,duration:1/0},s),s.duration!==1/0&&setTimeout(()=>this.remove(),s.duration),this.arguments=s.arguments,this.callback=n,this.context=s.context,this.count=0,this.event=e,this.remaining=parseInt(s.remaining)>=1?parseInt(s.remaining):1/0,this.suspended=!1,this.target=t}remove(){this.target.removeListener(this.event,this.callback,{context:this.context,remaining:this.remaining})}}/**
 * The `Enumerations` class contains enumerations and arrays of elements used throughout the
 * library. All its properties are static and should be referenced using the class name. For
 * example: `Enumerations.CHANNEL_MESSAGES`.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class T{static get MIDI_CHANNEL_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MESSAGES enum instead."),T.CHANNEL_MESSAGES}static get CHANNEL_MESSAGES(){return{noteoff:8,noteon:9,keyaftertouch:10,controlchange:11,programchange:12,channelaftertouch:13,pitchbend:14}}static get CHANNEL_NUMBERS(){return[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get MIDI_CHANNEL_NUMBERS(){return this.validation&&console.warn("The MIDI_CHANNEL_NUMBERS array has been deprecated. Use the Enumerations.CHANNEL_NUMBERS array instead."),[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}static get CHANNEL_MODE_MESSAGES(){return{allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MODE_MESSAGES enum has been deprecated. Use the Enumerations.CHANNEL_MODE_MESSAGES enum instead."),T.CHANNEL_MODE_MESSAGES}static get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn("The MIDI_CONTROL_CHANGE_MESSAGES enum has been deprecated. Use the Enumerations.CONTROL_CHANGE_MESSAGES array instead."),{bankselectcoarse:0,modulationwheelcoarse:1,breathcontrollercoarse:2,controller3:3,footcontrollercoarse:4,portamentotimecoarse:5,dataentrycoarse:6,volumecoarse:7,balancecoarse:8,controller9:9,pancoarse:10,expressioncoarse:11,effectcontrol1coarse:12,effectcontrol2coarse:13,controller14:14,controller15:15,generalpurposeslider1:16,generalpurposeslider2:17,generalpurposeslider3:18,generalpurposeslider4:19,controller20:20,controller21:21,controller22:22,controller23:23,controller24:24,controller25:25,controller26:26,controller27:27,controller28:28,controller29:29,controller30:30,controller31:31,bankselectfine:32,modulationwheelfine:33,breathcontrollerfine:34,controller35:35,footcontrollerfine:36,portamentotimefine:37,dataentryfine:38,volumefine:39,balancefine:40,controller41:41,panfine:42,expressionfine:43,effectcontrol1fine:44,effectcontrol2fine:45,controller46:46,controller47:47,controller48:48,controller49:49,controller50:50,controller51:51,controller52:52,controller53:53,controller54:54,controller55:55,controller56:56,controller57:57,controller58:58,controller59:59,controller60:60,controller61:61,controller62:62,controller63:63,holdpedal:64,portamento:65,sustenutopedal:66,softpedal:67,legatopedal:68,hold2pedal:69,soundvariation:70,resonance:71,soundreleasetime:72,soundattacktime:73,brightness:74,soundcontrol6:75,soundcontrol7:76,soundcontrol8:77,soundcontrol9:78,soundcontrol10:79,generalpurposebutton1:80,generalpurposebutton2:81,generalpurposebutton3:82,generalpurposebutton4:83,controller84:84,controller85:85,controller86:86,controller87:87,controller88:88,controller89:89,controller90:90,reverblevel:91,tremololevel:92,choruslevel:93,celestelevel:94,phaserlevel:95,databuttonincrement:96,databuttondecrement:97,nonregisteredparametercoarse:98,nonregisteredparameterfine:99,registeredparametercoarse:100,registeredparameterfine:101,controller102:102,controller103:103,controller104:104,controller105:105,controller106:106,controller107:107,controller108:108,controller109:109,controller110:110,controller111:111,controller112:112,controller113:113,controller114:114,controller115:115,controller116:116,controller117:117,controller118:118,controller119:119,allsoundoff:120,resetallcontrollers:121,localcontrol:122,allnotesoff:123,omnimodeoff:124,omnimodeon:125,monomodeon:126,polymodeon:127}}static get CONTROL_CHANGE_MESSAGES(){return[{number:0,name:"bankselectcoarse",description:"Bank Select (Coarse)",position:"msb"},{number:1,name:"modulationwheelcoarse",description:"Modulation Wheel (Coarse)",position:"msb"},{number:2,name:"breathcontrollercoarse",description:"Breath Controller (Coarse)",position:"msb"},{number:3,name:"controller3",description:"Undefined",position:"msb"},{number:4,name:"footcontrollercoarse",description:"Foot Controller (Coarse)",position:"msb"},{number:5,name:"portamentotimecoarse",description:"Portamento Time (Coarse)",position:"msb"},{number:6,name:"dataentrycoarse",description:"Data Entry (Coarse)",position:"msb"},{number:7,name:"volumecoarse",description:"Channel Volume (Coarse)",position:"msb"},{number:8,name:"balancecoarse",description:"Balance (Coarse)",position:"msb"},{number:9,name:"controller9",description:"Controller 9 (Coarse)",position:"msb"},{number:10,name:"pancoarse",description:"Pan (Coarse)",position:"msb"},{number:11,name:"expressioncoarse",description:"Expression Controller (Coarse)",position:"msb"},{number:12,name:"effectcontrol1coarse",description:"Effect Control 1 (Coarse)",position:"msb"},{number:13,name:"effectcontrol2coarse",description:"Effect Control 2 (Coarse)",position:"msb"},{number:14,name:"controller14",description:"Undefined",position:"msb"},{number:15,name:"controller15",description:"Undefined",position:"msb"},{number:16,name:"generalpurposecontroller1",description:"General Purpose Controller 1 (Coarse)",position:"msb"},{number:17,name:"generalpurposecontroller2",description:"General Purpose Controller 2 (Coarse)",position:"msb"},{number:18,name:"generalpurposecontroller3",description:"General Purpose Controller 3 (Coarse)",position:"msb"},{number:19,name:"generalpurposecontroller4",description:"General Purpose Controller 4 (Coarse)",position:"msb"},{number:20,name:"controller20",description:"Undefined",position:"msb"},{number:21,name:"controller21",description:"Undefined",position:"msb"},{number:22,name:"controller22",description:"Undefined",position:"msb"},{number:23,name:"controller23",description:"Undefined",position:"msb"},{number:24,name:"controller24",description:"Undefined",position:"msb"},{number:25,name:"controller25",description:"Undefined",position:"msb"},{number:26,name:"controller26",description:"Undefined",position:"msb"},{number:27,name:"controller27",description:"Undefined",position:"msb"},{number:28,name:"controller28",description:"Undefined",position:"msb"},{number:29,name:"controller29",description:"Undefined",position:"msb"},{number:30,name:"controller30",description:"Undefined",position:"msb"},{number:31,name:"controller31",description:"Undefined",position:"msb"},{number:32,name:"bankselectfine",description:"Bank Select (Fine)",position:"lsb"},{number:33,name:"modulationwheelfine",description:"Modulation Wheel (Fine)",position:"lsb"},{number:34,name:"breathcontrollerfine",description:"Breath Controller (Fine)",position:"lsb"},{number:35,name:"controller35",description:"Undefined",position:"lsb"},{number:36,name:"footcontrollerfine",description:"Foot Controller (Fine)",position:"lsb"},{number:37,name:"portamentotimefine",description:"Portamento Time (Fine)",position:"lsb"},{number:38,name:"dataentryfine",description:"Data Entry (Fine)",position:"lsb"},{number:39,name:"channelvolumefine",description:"Channel Volume (Fine)",position:"lsb"},{number:40,name:"balancefine",description:"Balance (Fine)",position:"lsb"},{number:41,name:"controller41",description:"Undefined",position:"lsb"},{number:42,name:"panfine",description:"Pan (Fine)",position:"lsb"},{number:43,name:"expressionfine",description:"Expression Controller (Fine)",position:"lsb"},{number:44,name:"effectcontrol1fine",description:"Effect control 1 (Fine)",position:"lsb"},{number:45,name:"effectcontrol2fine",description:"Effect control 2 (Fine)",position:"lsb"},{number:46,name:"controller46",description:"Undefined",position:"lsb"},{number:47,name:"controller47",description:"Undefined",position:"lsb"},{number:48,name:"controller48",description:"General Purpose Controller 1 (Fine)",position:"lsb"},{number:49,name:"controller49",description:"General Purpose Controller 2 (Fine)",position:"lsb"},{number:50,name:"controller50",description:"General Purpose Controller 3 (Fine)",position:"lsb"},{number:51,name:"controller51",description:"General Purpose Controller 4 (Fine)",position:"lsb"},{number:52,name:"controller52",description:"Undefined",position:"lsb"},{number:53,name:"controller53",description:"Undefined",position:"lsb"},{number:54,name:"controller54",description:"Undefined",position:"lsb"},{number:55,name:"controller55",description:"Undefined",position:"lsb"},{number:56,name:"controller56",description:"Undefined",position:"lsb"},{number:57,name:"controller57",description:"Undefined",position:"lsb"},{number:58,name:"controller58",description:"Undefined",position:"lsb"},{number:59,name:"controller59",description:"Undefined",position:"lsb"},{number:60,name:"controller60",description:"Undefined",position:"lsb"},{number:61,name:"controller61",description:"Undefined",position:"lsb"},{number:62,name:"controller62",description:"Undefined",position:"lsb"},{number:63,name:"controller63",description:"Undefined",position:"lsb"},{number:64,name:"damperpedal",description:"Damper Pedal On/Off"},{number:65,name:"portamento",description:"Portamento On/Off"},{number:66,name:"sostenuto",description:"Sostenuto On/Off"},{number:67,name:"softpedal",description:"Soft Pedal On/Off"},{number:68,name:"legatopedal",description:"Legato Pedal On/Off"},{number:69,name:"hold2",description:"Hold 2 On/Off"},{number:70,name:"soundvariation",description:"Sound Variation",position:"lsb"},{number:71,name:"resonance",description:"Resonance",position:"lsb"},{number:72,name:"releasetime",description:"Release Time",position:"lsb"},{number:73,name:"attacktime",description:"Attack Time",position:"lsb"},{number:74,name:"brightness",description:"Brightness",position:"lsb"},{number:75,name:"decaytime",description:"Decay Time",position:"lsb"},{number:76,name:"vibratorate",description:"Vibrato Rate",position:"lsb"},{number:77,name:"vibratodepth",description:"Vibrato Depth",position:"lsb"},{number:78,name:"vibratodelay",description:"Vibrato Delay",position:"lsb"},{number:79,name:"controller79",description:"Undefined",position:"lsb"},{number:80,name:"generalpurposecontroller5",description:"General Purpose Controller 5",position:"lsb"},{number:81,name:"generalpurposecontroller6",description:"General Purpose Controller 6",position:"lsb"},{number:82,name:"generalpurposecontroller7",description:"General Purpose Controller 7",position:"lsb"},{number:83,name:"generalpurposecontroller8",description:"General Purpose Controller 8",position:"lsb"},{number:84,name:"portamentocontrol",description:"Portamento Control",position:"lsb"},{number:85,name:"controller85",description:"Undefined"},{number:86,name:"controller86",description:"Undefined"},{number:87,name:"controller87",description:"Undefined"},{number:88,name:"highresolutionvelocityprefix",description:"High Resolution Velocity Prefix",position:"lsb"},{number:89,name:"controller89",description:"Undefined"},{number:90,name:"controller90",description:"Undefined"},{number:91,name:"effect1depth",description:"Effects 1 Depth (Reverb Send Level)"},{number:92,name:"effect2depth",description:"Effects 2 Depth"},{number:93,name:"effect3depth",description:"Effects 3 Depth (Chorus Send Level)"},{number:94,name:"effect4depth",description:"Effects 4 Depth"},{number:95,name:"effect5depth",description:"Effects 5 Depth"},{number:96,name:"dataincrement",description:"Data Increment"},{number:97,name:"datadecrement",description:"Data Decrement"},{number:98,name:"nonregisteredparameterfine",description:"Non-Registered Parameter Number (Fine)",position:"lsb"},{number:99,name:"nonregisteredparametercoarse",description:"Non-Registered Parameter Number (Coarse)",position:"msb"},{number:100,name:"registeredparameterfine",description:"Registered Parameter Number (Fine)",position:"lsb"},{number:101,name:"registeredparametercoarse",description:"Registered Parameter Number (Coarse)",position:"msb"},{number:102,name:"controller102",description:"Undefined"},{number:103,name:"controller103",description:"Undefined"},{number:104,name:"controller104",description:"Undefined"},{number:105,name:"controller105",description:"Undefined"},{number:106,name:"controller106",description:"Undefined"},{number:107,name:"controller107",description:"Undefined"},{number:108,name:"controller108",description:"Undefined"},{number:109,name:"controller109",description:"Undefined"},{number:110,name:"controller110",description:"Undefined"},{number:111,name:"controller111",description:"Undefined"},{number:112,name:"controller112",description:"Undefined"},{number:113,name:"controller113",description:"Undefined"},{number:114,name:"controller114",description:"Undefined"},{number:115,name:"controller115",description:"Undefined"},{number:116,name:"controller116",description:"Undefined"},{number:117,name:"controller117",description:"Undefined"},{number:118,name:"controller118",description:"Undefined"},{number:119,name:"controller119",description:"Undefined"},{number:120,name:"allsoundoff",description:"All Sound Off"},{number:121,name:"resetallcontrollers",description:"Reset All Controllers"},{number:122,name:"localcontrol",description:"Local Control On/Off"},{number:123,name:"allnotesoff",description:"All Notes Off"},{number:124,name:"omnimodeoff",description:"Omni Mode Off"},{number:125,name:"omnimodeon",description:"Omni Mode On"},{number:126,name:"monomodeon",description:"Mono Mode On"},{number:127,name:"polymodeon",description:"Poly Mode On"}]}static get REGISTERED_PARAMETERS(){return{pitchbendrange:[0,0],channelfinetuning:[0,1],channelcoarsetuning:[0,2],tuningprogram:[0,3],tuningbank:[0,4],modulationrange:[0,5],azimuthangle:[61,0],elevationangle:[61,1],gain:[61,2],distanceratio:[61,3],maximumdistance:[61,4],maximumdistancegain:[61,5],referencedistanceratio:[61,6],panspreadangle:[61,7],rollangle:[61,8]}}static get MIDI_REGISTERED_PARAMETERS(){return this.validation&&console.warn("The MIDI_REGISTERED_PARAMETERS enum has been deprecated. Use the Enumerations.REGISTERED_PARAMETERS enum instead."),T.MIDI_REGISTERED_PARAMETERS}static get SYSTEM_MESSAGES(){return{sysex:240,timecode:241,songposition:242,songselect:243,tunerequest:246,tuningrequest:246,sysexend:247,clock:248,start:250,continue:251,stop:252,activesensing:254,reset:255,midimessage:0,unknownsystemmessage:-1}}static get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn("The MIDI_SYSTEM_MESSAGES enum has been deprecated. Use the Enumerations.SYSTEM_MESSAGES enum instead."),T.SYSTEM_MESSAGES}static get CHANNEL_EVENTS(){return["noteoff","controlchange","noteon","keyaftertouch","programchange","channelaftertouch","pitchbend","allnotesoff","allsoundoff","localcontrol","monomode","omnimode","resetallcontrollers","nrpn","nrpn-dataentrycoarse","nrpn-dataentryfine","nrpn-dataincrement","nrpn-datadecrement","rpn","rpn-dataentrycoarse","rpn-dataentryfine","rpn-dataincrement","rpn-datadecrement","nrpn-databuttonincrement","nrpn-databuttondecrement","rpn-databuttonincrement","rpn-databuttondecrement"]}}/**
 * The `Note` class represents a single musical note such as `"D3"`, `"G#4"`, `"F-1"`, `"Gb7"`, etc.
 *
 * `Note` objects can be played back on a single channel by calling
 * [`OutputChannel.playNote()`]{@link OutputChannel#playNote} or, on multiple channels of the same
 * output, by calling [`Output.playNote()`]{@link Output#playNote}.
 *
 * The note has [`attack`](#attack) and [`release`](#release) velocities set at `0.5` by default.
 * These can be changed by passing in the appropriate option. It is also possible to set a
 * system-wide default for attack and release velocities by using the
 * [`WebMidi.defaults`](WebMidi#defaults) property.
 *
 * If you prefer to work with raw MIDI values (`0` to `127`), you can use [`rawAttack`](#rawAttack) and
 * [`rawRelease`](#rawRelease) to both get and set the values.
 *
 * The note may have a [`duration`](#duration). If it does, playback will be automatically stopped
 * when the duration has elapsed by sending a `"noteoff"` event. By default, the duration is set to
 * `Infinity`. In this case, it will never stop playing unless explicitly stopped by calling a
 * method such as [`OutputChannel.stopNote()`]{@link OutputChannel#stopNote},
 * [`Output.stopNote()`]{@link Output#stopNote} or similar.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class Ct{constructor(e,t={}){this.duration=O.defaults.note.duration,this.attack=O.defaults.note.attack,this.release=O.defaults.note.release,t.duration!=null&&(this.duration=t.duration),t.attack!=null&&(this.attack=t.attack),t.rawAttack!=null&&(this.attack=x.from7bitToFloat(t.rawAttack)),t.release!=null&&(this.release=t.release),t.rawRelease!=null&&(this.release=x.from7bitToFloat(t.rawRelease)),Number.isInteger(e)?this.identifier=x.toNoteIdentifier(e):this.identifier=e}get identifier(){return this._name+(this._accidental||"")+this._octave}set identifier(e){const t=x.getNoteDetails(e);if(O.validation&&!e)throw new Error("Invalid note identifier");this._name=t.name,this._accidental=t.accidental,this._octave=t.octave}get name(){return this._name}set name(e){if(O.validation&&(e=e.toUpperCase(),!["C","D","E","F","G","A","B"].includes(e)))throw new Error("Invalid name value");this._name=e}get accidental(){return this._accidental}set accidental(e){if(O.validation&&(e=e.toLowerCase(),!["#","##","b","bb"].includes(e)))throw new Error("Invalid accidental value");this._accidental=e}get octave(){return this._octave}set octave(e){if(O.validation&&(e=parseInt(e),isNaN(e)))throw new Error("Invalid octave value");this._octave=e}get duration(){return this._duration}set duration(e){if(O.validation&&(e=parseFloat(e),isNaN(e)||e===null||e<0))throw new RangeError("Invalid duration value.");this._duration=e}get attack(){return this._attack}set attack(e){if(O.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError("Invalid attack value.");this._attack=e}get release(){return this._release}set release(e){if(O.validation&&(e=parseFloat(e),isNaN(e)||!(e>=0&&e<=1)))throw new RangeError("Invalid release value.");this._release=e}get rawAttack(){return x.fromFloatTo7Bit(this._attack)}set rawAttack(e){this._attack=x.from7bitToFloat(e)}get rawRelease(){return x.fromFloatTo7Bit(this._release)}set rawRelease(e){this._release=x.from7bitToFloat(e)}get number(){return x.toNoteNumber(this.identifier)}getOffsetNumber(e=0,t=0){return O.validation&&(e=parseInt(e)||0,t=parseInt(t)||0),Math.min(Math.max(this.number+e*12+t,0),127)}}/**
 * The `Utilities` class contains general-purpose utility methods. All methods are static and
 * should be called using the class name. For example: `Utilities.getNoteDetails("C4")`.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class x{static toNoteNumber(e,t=0){if(t=t==null?0:parseInt(t),isNaN(t))throw new RangeError("Invalid 'octaveOffset' value");typeof e!="string"&&(e="");const n=this.getNoteDetails(e);if(!n)throw new TypeError("Invalid note identifier");const s={C:0,D:2,E:4,F:5,G:7,A:9,B:11};let i=(n.octave+1+t)*12;if(i+=s[n.name],n.accidental&&(n.accidental.startsWith("b")?i-=n.accidental.length:i+=n.accidental.length),i<0||i>127)throw new RangeError("Invalid octaveOffset value");return i}static getNoteDetails(e){Number.isInteger(e)&&(e=this.toNoteIdentifier(e));const t=e.match(/^([CDEFGAB])(#{0,2}|b{0,2})(-?\d+)$/i);if(!t)throw new TypeError("Invalid note identifier");const n=t[1].toUpperCase(),s=parseInt(t[3]);let i=t[2].toLowerCase();return i=i===""?void 0:i,{accidental:i,identifier:n+(i||"")+s,name:n,octave:s}}static sanitizeChannels(e){let t;if(O.validation){if(e==="all")t=["all"];else if(e==="none")return[]}return Array.isArray(e)?t=e:t=[e],t.indexOf("all")>-1&&(t=T.MIDI_CHANNEL_NUMBERS),t.map(function(n){return parseInt(n)}).filter(function(n){return n>=1&&n<=16})}static toTimestamp(e){let t=!1;const n=parseFloat(e);return isNaN(n)?!1:(typeof e=="string"&&e.substring(0,1)==="+"?n>=0&&(t=O.time+n):n>=0&&(t=n),t)}static guessNoteNumber(e,t){t=parseInt(t)||0;let n=!1;if(Number.isInteger(e)&&e>=0&&e<=127)n=parseInt(e);else if(parseInt(e)>=0&&parseInt(e)<=127)n=parseInt(e);else if(typeof e=="string"||e instanceof String)try{n=this.toNoteNumber(e.trim(),t)}catch{return!1}return n}static toNoteIdentifier(e,t){if(e=parseInt(e),isNaN(e)||e<0||e>127)throw new RangeError("Invalid note number");if(t=t==null?0:parseInt(t),isNaN(t))throw new RangeError("Invalid octaveOffset value");const n=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],s=Math.floor(e/12-1)+t;return n[e%12]+s.toString()}static buildNote(e,t={}){if(t.octaveOffset=parseInt(t.octaveOffset)||0,e instanceof Ct)return e;let n=this.guessNoteNumber(e,t.octaveOffset);if(n===!1)throw new TypeError(`The input could not be parsed as a note (${e})`);return t.octaveOffset=void 0,new Ct(n,t)}static buildNoteArray(e,t={}){let n=[];return Array.isArray(e)||(e=[e]),e.forEach(s=>{n.push(this.buildNote(s,t))}),n}static from7bitToFloat(e){return e===1/0&&(e=127),e=parseInt(e)||0,Math.min(Math.max(e/127,0),1)}static fromFloatTo7Bit(e){return e===1/0&&(e=1),e=parseFloat(e)||0,Math.min(Math.max(Math.round(e*127),0),127)}static fromMsbLsbToFloat(e,t=0){O.validation&&(e=Math.min(Math.max(parseInt(e)||0,0),127),t=Math.min(Math.max(parseInt(t)||0,0),127));const n=((e<<7)+t)/16383;return Math.min(Math.max(n,0),1)}static fromFloatToMsbLsb(e){O.validation&&(e=Math.min(Math.max(parseFloat(e)||0,0),1));const t=Math.round(e*16383);return{msb:t>>7,lsb:t&127}}static offsetNumber(e,t=0,n=0){if(O.validation){if(e=parseInt(e),isNaN(e))throw new Error("Invalid note number");t=parseInt(t)||0,n=parseInt(n)||0}return Math.min(Math.max(e+t*12+n,0),127)}static getPropertyByValue(e,t){return Object.keys(e).find(n=>e[n]===t)}static getCcNameByNumber(e){if(!(O.validation&&(e=parseInt(e),!(e>=0&&e<=127))))return T.CONTROL_CHANGE_MESSAGES[e].name}static getCcNumberByName(e){let t=T.CONTROL_CHANGE_MESSAGES.find(n=>n.name===e);return t?t.number:T.MIDI_CONTROL_CHANGE_MESSAGES[e]}static getChannelModeByNumber(e){if(!(e>=120&&e<=127))return!1;for(let t in T.CHANNEL_MODE_MESSAGES)if(T.CHANNEL_MODE_MESSAGES.hasOwnProperty(t)&&e===T.CHANNEL_MODE_MESSAGES[t])return t;return!1}static get isNode(){return typeof process<"u"&&process.versions!=null&&process.versions.node!=null}static get isBrowser(){return typeof window<"u"&&typeof window.document<"u"}}/**
 * The `OutputChannel` class represents a single output MIDI channel. `OutputChannel` objects are
 * provided by an [`Output`](Output) port which, itself, is made available by a device. The
 * `OutputChannel` object is derived from the host's MIDI subsystem and should not be instantiated
 * directly.
 *
 * All 16 `OutputChannel` objects can be found inside the parent output's
 * [`channels`]{@link Output#channels} property.
 *
 * @param {Output} output The [`Output`](Output) this channel belongs to.
 * @param {number} number The MIDI channel number (`1` - `16`).
 *
 * @extends EventEmitter
 * @license Apache-2.0
 * @since 3.0.0
 */class Mi extends Fe{constructor(e,t){super(),this._output=e,this._number=t,this._octaveOffset=0}destroy(){this._output=null,this._number=null,this._octaveOffset=0,this.removeListener()}send(e,t={time:0}){return this.output.send(e,t),this}sendKeyAftertouch(e,t,n={}){if(O.validation){if(n.useRawValue&&(n.rawValue=n.useRawValue),isNaN(parseFloat(t)))throw new RangeError("Invalid key aftertouch value.");if(n.rawValue){if(!(t>=0&&t<=127&&Number.isInteger(t)))throw new RangeError("Key aftertouch raw value must be an integer between 0 and 127.")}else if(!(t>=0&&t<=1))throw new RangeError("Key aftertouch value must be a float between 0 and 1.")}n.rawValue||(t=x.fromFloatTo7Bit(t));const s=O.octaveOffset+this.output.octaveOffset+this.octaveOffset;return Array.isArray(e)||(e=[e]),x.buildNoteArray(e).forEach(i=>{this.send([(T.CHANNEL_MESSAGES.keyaftertouch<<4)+(this.number-1),i.getOffsetNumber(s),t],{time:x.toTimestamp(n.time)})}),this}sendControlChange(e,t,n={}){if(typeof e=="string"&&(e=x.getCcNumberByName(e)),Array.isArray(t)||(t=[t]),O.validation){if(e===void 0)throw new TypeError("Control change must be identified with a valid name or an integer between 0 and 127.");if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new TypeError("Control change number must be an integer between 0 and 127.");if(t=t.map(s=>{const i=Math.min(Math.max(parseInt(s),0),127);if(isNaN(i))throw new TypeError("Values must be integers between 0 and 127");return i}),t.length===2&&e>=32)throw new TypeError("To use a value array, the controller must be between 0 and 31")}return t.forEach((s,i)=>{this.send([(T.CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e+i*32,t[i]],{time:x.toTimestamp(n.time)})}),this}_selectNonRegisteredParameter(e,t={}){return this.sendControlChange(99,e[0],t),this.sendControlChange(98,e[1],t),this}_deselectRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_deselectNonRegisteredParameter(e={}){return this.sendControlChange(101,127,e),this.sendControlChange(100,127,e),this}_selectRegisteredParameter(e,t={}){return this.sendControlChange(101,e[0],t),this.sendControlChange(100,e[1],t),this}_setCurrentParameter(e,t={}){return e=[].concat(e),this.sendControlChange(6,e[0],t),e.length<2?this:(this.sendControlChange(38,e[1],t),this)}sendRpnDecrement(e,t={}){if(Array.isArray(e)||(e=T.REGISTERED_PARAMETERS[e]),O.validation){if(e===void 0)throw new TypeError("The specified registered parameter is invalid.");let n=!1;if(Object.getOwnPropertyNames(T.REGISTERED_PARAMETERS).forEach(s=>{T.REGISTERED_PARAMETERS[s][0]===e[0]&&T.REGISTERED_PARAMETERS[s][1]===e[1]&&(n=!0)}),!n)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(97,0,t),this._deselectRegisteredParameter(t),this}sendRpnIncrement(e,t={}){if(Array.isArray(e)||(e=T.REGISTERED_PARAMETERS[e]),O.validation){if(e===void 0)throw new TypeError("The specified registered parameter is invalid.");let n=!1;if(Object.getOwnPropertyNames(T.REGISTERED_PARAMETERS).forEach(s=>{T.REGISTERED_PARAMETERS[s][0]===e[0]&&T.REGISTERED_PARAMETERS[s][1]===e[1]&&(n=!0)}),!n)throw new TypeError("The specified registered parameter is invalid.")}return this._selectRegisteredParameter(e,t),this.sendControlChange(96,0,t),this._deselectRegisteredParameter(t),this}playNote(e,t={}){this.sendNoteOn(e,t);const n=Array.isArray(e)?e:[e];for(let s of n)if(parseInt(s.duration)>0){const i={time:(x.toTimestamp(t.time)||O.time)+parseInt(s.duration),release:s.release,rawRelease:s.rawRelease};this.sendNoteOff(s,i)}else if(parseInt(t.duration)>0){const i={time:(x.toTimestamp(t.time)||O.time)+parseInt(t.duration),release:t.release,rawRelease:t.rawRelease};this.sendNoteOff(s,i)}return this}sendNoteOff(e,t={}){if(O.validation){if(t.rawRelease!=null&&!(t.rawRelease>=0&&t.rawRelease<=127))throw new RangeError("The 'rawRelease' option must be an integer between 0 and 127");if(t.release!=null&&!(t.release>=0&&t.release<=1))throw new RangeError("The 'release' option must be an number between 0 and 1");t.rawVelocity&&(t.rawRelease=t.velocity,console.warn("The 'rawVelocity' option is deprecated. Use 'rawRelease' instead.")),t.velocity&&(t.release=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;t.rawRelease!=null?n=t.rawRelease:isNaN(t.release)||(n=Math.round(t.release*127));const s=O.octaveOffset+this.output.octaveOffset+this.octaveOffset;return x.buildNoteArray(e,{rawRelease:parseInt(n)}).forEach(i=>{this.send([(T.CHANNEL_MESSAGES.noteoff<<4)+(this.number-1),i.getOffsetNumber(s),i.rawRelease],{time:x.toTimestamp(t.time)})}),this}stopNote(e,t={}){return this.sendNoteOff(e,t)}sendNoteOn(e,t={}){if(O.validation){if(t.rawAttack!=null&&!(t.rawAttack>=0&&t.rawAttack<=127))throw new RangeError("The 'rawAttack' option must be an integer between 0 and 127");if(t.attack!=null&&!(t.attack>=0&&t.attack<=1))throw new RangeError("The 'attack' option must be an number between 0 and 1");t.rawVelocity&&(t.rawAttack=t.velocity,t.rawRelease=t.release,console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' or 'rawRelease'.")),t.velocity&&(t.attack=t.velocity,console.warn("The 'velocity' option is deprecated. Use 'attack' instead."))}let n=64;t.rawAttack!=null?n=t.rawAttack:isNaN(t.attack)||(n=Math.round(t.attack*127));const s=O.octaveOffset+this.output.octaveOffset+this.octaveOffset;return x.buildNoteArray(e,{rawAttack:n}).forEach(i=>{this.send([(T.CHANNEL_MESSAGES.noteon<<4)+(this.number-1),i.getOffsetNumber(s),i.rawAttack],{time:x.toTimestamp(t.time)})}),this}sendChannelMode(e,t=0,n={}){if(typeof e=="string"&&(e=T.CHANNEL_MODE_MESSAGES[e]),O.validation){if(e===void 0)throw new TypeError("Invalid channel mode message name or number.");if(isNaN(e)||!(e>=120&&e<=127))throw new TypeError("Invalid channel mode message number.");if(isNaN(parseInt(t))||t<0||t>127)throw new RangeError("Value must be an integer between 0 and 127.")}return this.send([(T.CHANNEL_MESSAGES.controlchange<<4)+(this.number-1),e,t],{time:x.toTimestamp(n.time)}),this}sendOmniMode(e,t={}){return e===void 0||e?this.sendChannelMode("omnimodeon",0,t):this.sendChannelMode("omnimodeoff",0,t),this}sendChannelAftertouch(e,t={}){if(O.validation){if(isNaN(parseFloat(e)))throw new RangeError("Invalid channel aftertouch value.");if(t.rawValue){if(!(e>=0&&e<=127&&Number.isInteger(e)))throw new RangeError("Channel aftertouch raw value must be an integer between 0 and 127.")}else if(!(e>=0&&e<=1))throw new RangeError("Channel aftertouch value must be a float between 0 and 1.")}return t.rawValue||(e=x.fromFloatTo7Bit(e)),this.send([(T.CHANNEL_MESSAGES.channelaftertouch<<4)+(this.number-1),Math.round(e)],{time:x.toTimestamp(t.time)}),this}sendMasterTuning(e,t={}){if(e=parseFloat(e)||0,O.validation&&!(e>-65&&e<64))throw new RangeError("The value must be a decimal number larger than -65 and smaller than 64.");let n=Math.floor(e)+64,s=e-Math.floor(e);s=Math.round((s+1)/2*16383);let i=s>>7&127,o=s&127;return this.sendRpnValue("channelcoarsetuning",n,t),this.sendRpnValue("channelfinetuning",[i,o],t),this}sendModulationRange(e,t,n={}){if(O.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(t!=null&&(!Number.isInteger(t)||!(t>=0&&t<=127)))throw new RangeError("If specified, the cents value must be an integer between 0 and 127.")}return t>=0&&t<=127||(t=0),this.sendRpnValue("modulationrange",[e,t],n),this}sendNrpnValue(e,t,n={}){if(t=[].concat(t),O.validation){if(!Array.isArray(e)||!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the NRPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the NRPN must be between 0 and 127.");t.forEach(s=>{if(!(s>=0&&s<=127))throw new RangeError("The data bytes of the NRPN must be between 0 and 127.")})}return this._selectNonRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectNonRegisteredParameter(n),this}sendPitchBend(e,t={}){if(O.validation)if(t.rawValue&&Array.isArray(e)){if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The pitch bend LSB must be an integer between 0 and 127.")}else if(t.rawValue&&!Array.isArray(e)){if(!(e>=0&&e<=127))throw new RangeError("The pitch bend MSB must be an integer between 0 and 127.")}else{if(isNaN(e)||e===null)throw new RangeError("Invalid pitch bend value.");if(!(e>=-1&&e<=1))throw new RangeError("The pitch bend value must be a float between -1 and 1.")}let n=0,s=0;if(t.rawValue&&Array.isArray(e))n=e[0],s=e[1];else if(t.rawValue&&!Array.isArray(e))n=e;else{const i=x.fromFloatToMsbLsb((e+1)/2);n=i.msb,s=i.lsb}return this.send([(T.CHANNEL_MESSAGES.pitchbend<<4)+(this.number-1),s,n],{time:x.toTimestamp(t.time)}),this}sendPitchBendRange(e,t,n={}){if(O.validation){if(!Number.isInteger(e)||!(e>=0&&e<=127))throw new RangeError("The semitones value must be an integer between 0 and 127.");if(!Number.isInteger(t)||!(t>=0&&t<=127))throw new RangeError("The cents value must be an integer between 0 and 127.")}return this.sendRpnValue("pitchbendrange",[e,t],n),this}sendProgramChange(e,t={}){if(e=parseInt(e)||0,O.validation&&!(e>=0&&e<=127))throw new RangeError("The program number must be between 0 and 127.");return this.send([(T.CHANNEL_MESSAGES.programchange<<4)+(this.number-1),e],{time:x.toTimestamp(t.time)}),this}sendRpnValue(e,t,n={}){if(Array.isArray(e)||(e=T.REGISTERED_PARAMETERS[e]),O.validation){if(!Number.isInteger(e[0])||!Number.isInteger(e[1]))throw new TypeError("The specified NRPN is invalid.");if(!(e[0]>=0&&e[0]<=127))throw new RangeError("The first byte of the RPN must be between 0 and 127.");if(!(e[1]>=0&&e[1]<=127))throw new RangeError("The second byte of the RPN must be between 0 and 127.");[].concat(t).forEach(s=>{if(!(s>=0&&s<=127))throw new RangeError("The data bytes of the RPN must be between 0 and 127.")})}return this._selectRegisteredParameter(e,n),this._setCurrentParameter(t,n),this._deselectRegisteredParameter(n),this}sendTuningBank(e,t={}){if(O.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError("The tuning bank number must be between 0 and 127.");return this.sendRpnValue("tuningbank",e,t),this}sendTuningProgram(e,t={}){if(O.validation&&(!Number.isInteger(e)||!(e>=0&&e<=127)))throw new RangeError("The tuning program number must be between 0 and 127.");return this.sendRpnValue("tuningprogram",e,t),this}sendLocalControl(e,t={}){return e?this.sendChannelMode("localcontrol",127,t):this.sendChannelMode("localcontrol",0,t)}sendAllNotesOff(e={}){return this.sendChannelMode("allnotesoff",0,e)}sendAllSoundOff(e={}){return this.sendChannelMode("allsoundoff",0,e)}sendResetAllControllers(e={}){return this.sendChannelMode("resetallcontrollers",0,e)}sendPolyphonicMode(e,t={}){return e==="mono"?this.sendChannelMode("monomodeon",0,t):this.sendChannelMode("polymodeon",0,t)}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get output(){return this._output}get number(){return this._number}}/**
 * The `Output` class represents a single MIDI output port (not to be confused with a MIDI channel).
 * A port is made available by a MIDI device. A MIDI device can advertise several input and output
 * ports. Each port has 16 MIDI channels which can be accessed via the [`channels`](#channels)
 * property.
 *
 * The `Output` object is automatically instantiated by the library according to the host's MIDI
 * subsystem and should not be directly instantiated.
 *
 * You can access all available `Output` objects by referring to the
 * [`WebMidi.outputs`](WebMidi#outputs) array or by using methods such as
 * [`WebMidi.getOutputByName()`](WebMidi#getOutputByName) or
 * [`WebMidi.getOutputById()`](WebMidi#getOutputById).
 *
 * @fires Output#opened
 * @fires Output#disconnected
 * @fires Output#closed
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class Qn extends Fe{constructor(e){super(),this._midiOutput=e,this._octaveOffset=0,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new Mi(this,t);this._midiOutput.onstatechange=this._onStateChange.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._midiOutput&&(this._midiOutput.onstatechange=null),await this.close(),this._midiOutput=null}_onStateChange(e){let t={timestamp:O.time};e.port.connection==="open"?(t.type="opened",t.target=this,t.port=t.target,this.emit("opened",t)):e.port.connection==="closed"&&e.port.state==="connected"?(t.type="closed",t.target=this,t.port=t.target,this.emit("closed",t)):e.port.connection==="closed"&&e.port.state==="disconnected"?(t.type="disconnected",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):e.port.connection==="pending"&&e.port.state==="disconnected"||console.warn("This statechange event was not caught:",e.port.connection,e.port.state)}async open(){try{return await this._midiOutput.open(),Promise.resolve(this)}catch(e){return Promise.reject(e)}}async close(){this._midiOutput?await this._midiOutput.close():await Promise.resolve()}send(e,t={time:0},n=0){if(e instanceof _r&&(e=x.isNode?e.data:e.rawData),e instanceof Uint8Array&&x.isNode&&(e=Array.from(e)),O.validation){if(!Array.isArray(e)&&!(e instanceof Uint8Array)&&(e=[e],Array.isArray(t)&&(e=e.concat(t)),t=isNaN(n)?{time:0}:{time:n}),!(parseInt(e[0])>=128&&parseInt(e[0])<=255))throw new RangeError("The first byte (status) must be an integer between 128 and 255.");e.slice(1).forEach(s=>{if(s=parseInt(s),!(s>=0&&s<=255))throw new RangeError("Data bytes must be integers between 0 and 255.")}),t||(t={time:0})}return this._midiOutput.send(e,x.toTimestamp(t.time)),this}sendSysex(e,t=[],n={}){if(e=[].concat(e),t instanceof Uint8Array){const s=new Uint8Array(1+e.length+t.length+1);s[0]=T.SYSTEM_MESSAGES.sysex,s.set(Uint8Array.from(e),1),s.set(t,1+e.length),s[s.length-1]=T.SYSTEM_MESSAGES.sysexend,this.send(s,{time:n.time})}else{const s=e.concat(t,T.SYSTEM_MESSAGES.sysexend);this.send([T.SYSTEM_MESSAGES.sysex].concat(s),{time:n.time})}return this}clear(){return this._midiOutput.clear?this._midiOutput.clear():O.validation&&console.warn("The 'clear()' method has not yet been implemented in your environment."),this}sendTimecodeQuarterFrame(e,t={}){if(O.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The value must be an integer between 0 and 127.");return this.send([T.SYSTEM_MESSAGES.timecode,e],{time:t.time}),this}sendSongPosition(e=0,t={}){e=Math.floor(e)||0;var n=e>>7&127,s=e&127;return this.send([T.SYSTEM_MESSAGES.songposition,n,s],{time:t.time}),this}sendSongSelect(e=0,t={}){if(O.validation&&(e=parseInt(e),isNaN(e)||!(e>=0&&e<=127)))throw new RangeError("The program value must be between 0 and 127");return this.send([T.SYSTEM_MESSAGES.songselect,e],{time:t.time}),this}sendTuneRequest(e={}){return this.send([T.SYSTEM_MESSAGES.tunerequest],{time:e.time}),this}sendClock(e={}){return this.send([T.SYSTEM_MESSAGES.clock],{time:e.time}),this}sendStart(e={}){return this.send([T.SYSTEM_MESSAGES.start],{time:e.time}),this}sendContinue(e={}){return this.send([T.SYSTEM_MESSAGES.continue],{time:e.time}),this}sendStop(e={}){return this.send([T.SYSTEM_MESSAGES.stop],{time:e.time}),this}sendActiveSensing(e={}){return this.send([T.SYSTEM_MESSAGES.activesensing],{time:e.time}),this}sendReset(e={}){return this.send([T.SYSTEM_MESSAGES.reset],{time:e.time}),this}sendTuningRequest(e={}){return O.validation&&console.warn("The sendTuningRequest() method has been deprecated. Use sendTuningRequest() instead."),this.sendTuneRequest(e)}sendKeyAftertouch(e,t,n={}){return n.channels==null&&(n.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendKeyAftertouch(e,t,n)}),this}sendControlChange(e,t,n={},s={}){if(O.validation&&(Array.isArray(n)||Number.isInteger(n)||n==="all")){const i=n;n=s,n.channels=i,n.channels==="all"&&(n.channels=T.MIDI_CHANNEL_NUMBERS)}return n.channels==null&&(n.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(n.channels).forEach(i=>{this.channels[i].sendControlChange(e,t,n)}),this}sendPitchBendRange(e=0,t=0,n={}){return n.channels==null&&(n.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendPitchBendRange(e,t,n)}),this}setPitchBendRange(e=0,t=0,n="all",s={}){return O.validation&&(console.warn("The setPitchBendRange() method is deprecated. Use sendPitchBendRange() instead."),s.channels=n,s.channels==="all"&&(s.channels=T.MIDI_CHANNEL_NUMBERS)),this.sendPitchBendRange(e,t,s)}sendRpnValue(e,t,n={}){return n.channels==null&&(n.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendRpnValue(e,t,n)}),this}setRegisteredParameter(e,t=[],n="all",s={}){return O.validation&&(console.warn("The setRegisteredParameter() method is deprecated. Use sendRpnValue() instead."),s.channels=n,s.channels==="all"&&(s.channels=T.MIDI_CHANNEL_NUMBERS)),this.sendRpnValue(e,t,s)}sendChannelAftertouch(e,t={},n={}){if(O.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=n,t.channels=s,t.channels==="all"&&(t.channels=T.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendChannelAftertouch(e,t)}),this}sendPitchBend(e,t={},n={}){if(O.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=n,t.channels=s,t.channels==="all"&&(t.channels=T.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendPitchBend(e,t)}),this}sendProgramChange(e=0,t={},n={}){if(O.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=n,t.channels=s,t.channels==="all"&&(t.channels=T.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendProgramChange(e,t)}),this}sendModulationRange(e,t,n={}){return n.channels==null&&(n.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendModulationRange(e,t,n)}),this}setModulationRange(e=0,t=0,n="all",s={}){return O.validation&&(console.warn("The setModulationRange() method is deprecated. Use sendModulationRange() instead."),s.channels=n,s.channels==="all"&&(s.channels=T.MIDI_CHANNEL_NUMBERS)),this.sendModulationRange(e,t,s)}sendMasterTuning(e,t={}){return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendMasterTuning(e,t)}),this}setMasterTuning(e,t={},n={}){return O.validation&&(console.warn("The setMasterTuning() method is deprecated. Use sendMasterTuning() instead."),n.channels=t,n.channels==="all"&&(n.channels=T.MIDI_CHANNEL_NUMBERS)),this.sendMasterTuning(e,n)}sendTuningProgram(e,t={}){return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendTuningProgram(e,t)}),this}setTuningProgram(e,t="all",n={}){return O.validation&&(console.warn("The setTuningProgram() method is deprecated. Use sendTuningProgram() instead."),n.channels=t,n.channels==="all"&&(n.channels=T.MIDI_CHANNEL_NUMBERS)),this.sendTuningProgram(e,n)}sendTuningBank(e=0,t={}){return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendTuningBank(e,t)}),this}setTuningBank(e,t="all",n={}){return O.validation&&(console.warn("The setTuningBank() method is deprecated. Use sendTuningBank() instead."),n.channels=t,n.channels==="all"&&(n.channels=T.MIDI_CHANNEL_NUMBERS)),this.sendTuningBank(e,n)}sendChannelMode(e,t=0,n={},s={}){if(O.validation&&(Array.isArray(n)||Number.isInteger(n)||n==="all")){const i=n;n=s,n.channels=i,n.channels==="all"&&(n.channels=T.MIDI_CHANNEL_NUMBERS)}return n.channels==null&&(n.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(n.channels).forEach(i=>{this.channels[i].sendChannelMode(e,t,n)}),this}sendAllSoundOff(e={}){return e.channels==null&&(e.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllSoundOff(e)}),this}sendAllNotesOff(e={}){return e.channels==null&&(e.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(e.channels).forEach(t=>{this.channels[t].sendAllNotesOff(e)}),this}sendResetAllControllers(e={},t={}){if(O.validation&&(Array.isArray(e)||Number.isInteger(e)||e==="all")){const n=e;e=t,e.channels=n,e.channels==="all"&&(e.channels=T.MIDI_CHANNEL_NUMBERS)}return e.channels==null&&(e.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(e.channels).forEach(n=>{this.channels[n].sendResetAllControllers(e)}),this}sendPolyphonicMode(e,t={},n={}){if(O.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=n,t.channels=s,t.channels==="all"&&(t.channels=T.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendPolyphonicMode(e,t)}),this}sendLocalControl(e,t={},n={}){if(O.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=n,t.channels=s,t.channels==="all"&&(t.channels=T.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendLocalControl(e,t)}),this}sendOmniMode(e,t={},n={}){if(O.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=n,t.channels=s,t.channels==="all"&&(t.channels=T.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendOmniMode(e,t)}),this}sendNrpnValue(e,t,n={}){return n.channels==null&&(n.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].sendNrpnValue(e,t,n)}),this}setNonRegisteredParameter(e,t=[],n="all",s={}){return O.validation&&(console.warn("The setNonRegisteredParameter() method is deprecated. Use sendNrpnValue() instead."),s.channels=n,s.channels==="all"&&(s.channels=T.MIDI_CHANNEL_NUMBERS)),this.sendNrpnValue(e,t,s)}sendRpnIncrement(e,t={}){return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendRpnIncrement(e,t)}),this}incrementRegisteredParameter(e,t="all",n={}){return O.validation&&(console.warn("The incrementRegisteredParameter() method is deprecated. Use sendRpnIncrement() instead."),n.channels=t,n.channels==="all"&&(n.channels=T.MIDI_CHANNEL_NUMBERS)),this.sendRpnIncrement(e,n)}sendRpnDecrement(e,t={}){return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(n=>{this.channels[n].sendRpnDecrement(e,t)}),this}decrementRegisteredParameter(e,t="all",n={}){return O.validation&&(console.warn("The decrementRegisteredParameter() method is deprecated. Use sendRpnDecrement() instead."),n.channels=t,n.channels==="all"&&(n.channels=T.MIDI_CHANNEL_NUMBERS)),this.sendRpnDecrement(e,n)}sendNoteOff(e,t={},n={}){if(O.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=n,t.channels=s,t.channels==="all"&&(t.channels=T.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendNoteOff(e,t)}),this}stopNote(e,t){return this.sendNoteOff(e,t)}playNote(e,t={},n={}){if(O.validation&&(t.rawVelocity&&console.warn("The 'rawVelocity' option is deprecated. Use 'rawAttack' instead."),t.velocity&&console.warn("The 'velocity' option is deprecated. Use 'velocity' instead."),Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=n,t.channels=s,t.channels==="all"&&(t.channels=T.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].playNote(e,t)}),this}sendNoteOn(e,t={},n={}){if(O.validation&&(Array.isArray(t)||Number.isInteger(t)||t==="all")){const s=t;t=n,t.channels=s,t.channels==="all"&&(t.channels=T.MIDI_CHANNEL_NUMBERS)}return t.channels==null&&(t.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(t.channels).forEach(s=>{this.channels[s].sendNoteOn(e,t)}),this}get name(){return this._midiOutput.name}get id(){return this._midiOutput.id}get connection(){return this._midiOutput.connection}get manufacturer(){return this._midiOutput.manufacturer}get state(){return this._midiOutput.state}get type(){return this._midiOutput.type}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}}/**
 * The `Forwarder` class allows the forwarding of MIDI messages to predetermined outputs. When you
 * call its [`forward()`](#forward) method, it will send the specified [`Message`](Message) object
 * to all the outputs listed in its [`destinations`](#destinations) property.
 *
 * If specific channels or message types have been defined in the [`channels`](#channels) or
 * [`types`](#types) properties, only messages matching the channels/types will be forwarded.
 *
 * While it can be manually instantiated, you are more likely to come across a `Forwarder` object as
 * the return value of the [`Input.addForwarder()`](Input#addForwarder) method.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class $s{constructor(e=[],t={}){this.destinations=[],this.types=[...Object.keys(T.SYSTEM_MESSAGES),...Object.keys(T.CHANNEL_MESSAGES)],this.channels=T.MIDI_CHANNEL_NUMBERS,this.suspended=!1,Array.isArray(e)||(e=[e]),t.types&&!Array.isArray(t.types)&&(t.types=[t.types]),t.channels&&!Array.isArray(t.channels)&&(t.channels=[t.channels]),O.validation&&(e.forEach(n=>{if(!(n instanceof Qn))throw new TypeError("Destinations must be of type 'Output'.")}),t.types!==void 0&&t.types.forEach(n=>{if(!T.SYSTEM_MESSAGES.hasOwnProperty(n)&&!T.CHANNEL_MESSAGES.hasOwnProperty(n))throw new TypeError("Type must be a valid message type.")}),t.channels!==void 0&&t.channels.forEach(n=>{if(!T.MIDI_CHANNEL_NUMBERS.includes(n))throw new TypeError("MIDI channel must be between 1 and 16.")})),this.destinations=e,t.types&&(this.types=t.types),t.channels&&(this.channels=t.channels)}forward(e){this.suspended||this.types.includes(e.type)&&(e.channel&&!this.channels.includes(e.channel)||this.destinations.forEach(t=>{O.validation&&!(t instanceof Qn)||t.send(e)}))}}/**
 * The `InputChannel` class represents a single MIDI input channel (1-16) from a single input
 * device. This object is derived from the host's MIDI subsystem and should not be instantiated
 * directly.
 *
 * All 16 `InputChannel` objects can be found inside the input's [`channels`](Input#channels)
 * property.
 *
 * @fires InputChannel#midimessage
 * @fires InputChannel#unknownmessage
 *
 * @fires InputChannel#noteoff
 * @fires InputChannel#noteon
 * @fires InputChannel#keyaftertouch
 * @fires InputChannel#programchange
 * @fires InputChannel#channelaftertouch
 * @fires InputChannel#pitchbend
 *
 * @fires InputChannel#allnotesoff
 * @fires InputChannel#allsoundoff
 * @fires InputChannel#localcontrol
 * @fires InputChannel#monomode
 * @fires InputChannel#omnimode
 * @fires InputChannel#resetallcontrollers
 *
 * @fires InputChannel#event:nrpn
 * @fires InputChannel#event:nrpn-dataentrycoarse
 * @fires InputChannel#event:nrpn-dataentryfine
 * @fires InputChannel#event:nrpn-dataincrement
 * @fires InputChannel#event:nrpn-datadecrement
 * @fires InputChannel#event:rpn
 * @fires InputChannel#event:rpn-dataentrycoarse
 * @fires InputChannel#event:rpn-dataentryfine
 * @fires InputChannel#event:rpn-dataincrement
 * @fires InputChannel#event:rpn-datadecrement
 *
 * @fires InputChannel#controlchange
 * @fires InputChannel#event:controlchange-controllerxxx
 * @fires InputChannel#event:controlchange-bankselectcoarse
 * @fires InputChannel#event:controlchange-modulationwheelcoarse
 * @fires InputChannel#event:controlchange-breathcontrollercoarse
 * @fires InputChannel#event:controlchange-footcontrollercoarse
 * @fires InputChannel#event:controlchange-portamentotimecoarse
 * @fires InputChannel#event:controlchange-dataentrycoarse
 * @fires InputChannel#event:controlchange-volumecoarse
 * @fires InputChannel#event:controlchange-balancecoarse
 * @fires InputChannel#event:controlchange-pancoarse
 * @fires InputChannel#event:controlchange-expressioncoarse
 * @fires InputChannel#event:controlchange-effectcontrol1coarse
 * @fires InputChannel#event:controlchange-effectcontrol2coarse
 * @fires InputChannel#event:controlchange-generalpurposecontroller1
 * @fires InputChannel#event:controlchange-generalpurposecontroller2
 * @fires InputChannel#event:controlchange-generalpurposecontroller3
 * @fires InputChannel#event:controlchange-generalpurposecontroller4
 * @fires InputChannel#event:controlchange-bankselectfine
 * @fires InputChannel#event:controlchange-modulationwheelfine
 * @fires InputChannel#event:controlchange-breathcontrollerfine
 * @fires InputChannel#event:controlchange-footcontrollerfine
 * @fires InputChannel#event:controlchange-portamentotimefine
 * @fires InputChannel#event:controlchange-dataentryfine
 * @fires InputChannel#event:controlchange-channelvolumefine
 * @fires InputChannel#event:controlchange-balancefine
 * @fires InputChannel#event:controlchange-panfine
 * @fires InputChannel#event:controlchange-expressionfine
 * @fires InputChannel#event:controlchange-effectcontrol1fine
 * @fires InputChannel#event:controlchange-effectcontrol2fine
 * @fires InputChannel#event:controlchange-damperpedal
 * @fires InputChannel#event:controlchange-portamento
 * @fires InputChannel#event:controlchange-sostenuto
 * @fires InputChannel#event:controlchange-softpedal
 * @fires InputChannel#event:controlchange-legatopedal
 * @fires InputChannel#event:controlchange-hold2
 * @fires InputChannel#event:controlchange-soundvariation
 * @fires InputChannel#event:controlchange-resonance
 * @fires InputChannel#event:controlchange-releasetime
 * @fires InputChannel#event:controlchange-attacktime
 * @fires InputChannel#event:controlchange-brightness
 * @fires InputChannel#event:controlchange-decaytime
 * @fires InputChannel#event:controlchange-vibratorate
 * @fires InputChannel#event:controlchange-vibratodepth
 * @fires InputChannel#event:controlchange-vibratodelay
 * @fires InputChannel#event:controlchange-generalpurposecontroller5
 * @fires InputChannel#event:controlchange-generalpurposecontroller6
 * @fires InputChannel#event:controlchange-generalpurposecontroller7
 * @fires InputChannel#event:controlchange-generalpurposecontroller8
 * @fires InputChannel#event:controlchange-portamentocontrol
 * @fires InputChannel#event:controlchange-highresolutionvelocityprefix
 * @fires InputChannel#event:controlchange-effect1depth
 * @fires InputChannel#event:controlchange-effect2depth
 * @fires InputChannel#event:controlchange-effect3depth
 * @fires InputChannel#event:controlchange-effect4depth
 * @fires InputChannel#event:controlchange-effect5depth
 * @fires InputChannel#event:controlchange-dataincrement
 * @fires InputChannel#event:controlchange-datadecrement
 * @fires InputChannel#event:controlchange-nonregisteredparameterfine
 * @fires InputChannel#event:controlchange-nonregisteredparametercoarse
 * @fires InputChannel#event:controlchange-registeredparameterfine
 * @fires InputChannel#event:controlchange-registeredparametercoarse
 * @fires InputChannel#event:controlchange-allsoundoff
 * @fires InputChannel#event:controlchange-resetallcontrollers
 * @fires InputChannel#event:controlchange-localcontrol
 * @fires InputChannel#event:controlchange-allnotesoff
 * @fires InputChannel#event:controlchange-omnimodeoff
 * @fires InputChannel#event:controlchange-omnimodeon
 * @fires InputChannel#event:controlchange-monomodeon
 * @fires InputChannel#event:controlchange-polymodeon
 * @fires InputChannel#event:
 *
 * @extends EventEmitter
 * @license Apache-2.0
 * @since 3.0.0
 */class Ii extends Fe{constructor(e,t){super(),this._input=e,this._number=t,this._octaveOffset=0,this._nrpnBuffer=[],this._rpnBuffer=[],this.parameterNumberEventsEnabled=!0,this.notesState=new Array(128).fill(!1)}destroy(){this._input=null,this._number=null,this._octaveOffset=0,this._nrpnBuffer=[],this.notesState=new Array(128).fill(!1),this.parameterNumberEventsEnabled=!1,this.removeListener()}_processMidiMessageEvent(e){const t=Object.assign({},e);t.port=this.input,t.target=this,t.type="midimessage",this.emit(t.type,t),this._parseEventForStandardMessages(t)}_parseEventForStandardMessages(e){const t=Object.assign({},e);t.type=t.message.type||"unknownmessage";const n=e.message.dataBytes[0],s=e.message.dataBytes[1];if(t.type==="noteoff"||t.type==="noteon"&&s===0)this.notesState[n]=!1,t.type="noteoff",t.note=new Ct(x.offsetNumber(n,this.octaveOffset+this.input.octaveOffset+O.octaveOffset),{rawAttack:0,rawRelease:s}),t.value=x.from7bitToFloat(s),t.rawValue=s,t.velocity=t.note.release,t.rawVelocity=t.note.rawRelease;else if(t.type==="noteon")this.notesState[n]=!0,t.note=new Ct(x.offsetNumber(n,this.octaveOffset+this.input.octaveOffset+O.octaveOffset),{rawAttack:s}),t.value=x.from7bitToFloat(s),t.rawValue=s,t.velocity=t.note.attack,t.rawVelocity=t.note.rawAttack;else if(t.type==="keyaftertouch")t.note=new Ct(x.offsetNumber(n,this.octaveOffset+this.input.octaveOffset+O.octaveOffset)),t.value=x.from7bitToFloat(s),t.rawValue=s,t.identifier=t.note.identifier,t.key=t.note.number,t.rawKey=n;else if(t.type==="controlchange"){t.controller={number:n,name:T.CONTROL_CHANGE_MESSAGES[n].name,description:T.CONTROL_CHANGE_MESSAGES[n].description,position:T.CONTROL_CHANGE_MESSAGES[n].position},t.subtype=t.controller.name||"controller"+n,t.value=x.from7bitToFloat(s),t.rawValue=s;const i=Object.assign({},t);i.type=`${t.type}-controller${n}`,delete i.subtype,this.emit(i.type,i);const o=Object.assign({},t);o.type=`${t.type}-`+T.CONTROL_CHANGE_MESSAGES[n].name,delete o.subtype,o.type.indexOf("controller")!==0&&this.emit(o.type,o),t.message.dataBytes[0]>=120&&this._parseChannelModeMessage(t),this.parameterNumberEventsEnabled&&this._isRpnOrNrpnController(t.message.dataBytes[0])&&this._parseEventForParameterNumber(t)}else t.type==="programchange"?(t.value=n,t.rawValue=t.value):t.type==="channelaftertouch"?(t.value=x.from7bitToFloat(n),t.rawValue=n):t.type==="pitchbend"?(t.value=((s<<7)+n-8192)/8192,t.rawValue=(s<<7)+n):t.type="unknownmessage";this.emit(t.type,t)}_parseChannelModeMessage(e){const t=Object.assign({},e);t.type=t.controller.name,t.type==="localcontrol"&&(t.value=t.message.data[2]===127,t.rawValue=t.message.data[2]),t.type==="omnimodeon"?(t.type="omnimode",t.value=!0,t.rawValue=t.message.data[2]):t.type==="omnimodeoff"&&(t.type="omnimode",t.value=!1,t.rawValue=t.message.data[2]),t.type==="monomodeon"?(t.type="monomode",t.value=!0,t.rawValue=t.message.data[2]):t.type==="polymodeon"&&(t.type="monomode",t.value=!1,t.rawValue=t.message.data[2]),this.emit(t.type,t)}_parseEventForParameterNumber(e){const t=e.message.dataBytes[0],n=e.message.dataBytes[1];t===99||t===101?(this._nrpnBuffer=[],this._rpnBuffer=[],t===99?this._nrpnBuffer=[e.message]:n!==127&&(this._rpnBuffer=[e.message])):t===98||t===100?t===98?(this._rpnBuffer=[],this._nrpnBuffer.length===1?this._nrpnBuffer.push(e.message):this._nrpnBuffer=[]):(this._nrpnBuffer=[],this._rpnBuffer.length===1&&n!==127?this._rpnBuffer.push(e.message):this._rpnBuffer=[]):(t===6||t===38||t===96||t===97)&&(this._rpnBuffer.length===2?this._dispatchParameterNumberEvent("rpn",this._rpnBuffer[0].dataBytes[1],this._rpnBuffer[1].dataBytes[1],e):this._nrpnBuffer.length===2?this._dispatchParameterNumberEvent("nrpn",this._nrpnBuffer[0].dataBytes[1],this._nrpnBuffer[1].dataBytes[1],e):(this._nrpnBuffer=[],this._rpnBuffer=[]))}_isRpnOrNrpnController(e){return e===6||e===38||e===96||e===97||e===98||e===99||e===100||e===101}_dispatchParameterNumberEvent(e,t,n,s){e=e==="nrpn"?"nrpn":"rpn";const i={target:s.target,timestamp:s.timestamp,message:s.message,parameterMsb:t,parameterLsb:n,value:x.from7bitToFloat(s.message.dataBytes[1]),rawValue:s.message.dataBytes[1]};e==="rpn"?i.parameter=Object.keys(T.REGISTERED_PARAMETERS).find(c=>T.REGISTERED_PARAMETERS[c][0]===t&&T.REGISTERED_PARAMETERS[c][1]===n):i.parameter=(t<<7)+n;const o=T.CONTROL_CHANGE_MESSAGES[s.message.dataBytes[0]].name;i.type=`${e}-${o}`,this.emit(i.type,i);const a=Object.assign({},i);a.type==="nrpn-dataincrement"?a.type="nrpn-databuttonincrement":a.type==="nrpn-datadecrement"?a.type="nrpn-databuttondecrement":a.type==="rpn-dataincrement"?a.type="rpn-databuttonincrement":a.type==="rpn-datadecrement"&&(a.type="rpn-databuttondecrement"),this.emit(a.type,a),i.type=e,i.subtype=o,this.emit(i.type,i)}getChannelModeByNumber(e){return O.validation&&(console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class."),e=Math.floor(e)),x.getChannelModeByNumber(e)}getCcNameByNumber(e){if(O.validation&&(console.warn("The 'getCcNameByNumber()' method has been moved to the 'Utilities' class."),e=parseInt(e),!(e>=0&&e<=127)))throw new RangeError("Invalid control change number.");return x.getCcNameByNumber(e)}getNoteState(e){e instanceof Ct&&(e=e.identifier);const t=x.guessNoteNumber(e,O.octaveOffset+this.input.octaveOffset+this.octaveOffset);return this.notesState[t]}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get input(){return this._input}get number(){return this._number}get nrpnEventsEnabled(){return this.parameterNumberEventsEnabled}set nrpnEventsEnabled(e){this.validation&&(e=!!e),this.parameterNumberEventsEnabled=e}}/**
 * The `Message` class represents a single MIDI message. It has several properties that make it
 * easy to make sense of the binary data it contains.
 *
 * @license Apache-2.0
 * @since 3.0.0
 */class _r{constructor(e){this.rawData=e,this.data=Array.from(this.rawData),this.statusByte=this.rawData[0],this.rawDataBytes=this.rawData.slice(1),this.dataBytes=this.data.slice(1),this.isChannelMessage=!1,this.isSystemMessage=!1,this.command=void 0,this.channel=void 0,this.manufacturerId=void 0,this.type=void 0,this.statusByte<240?(this.isChannelMessage=!0,this.command=this.statusByte>>4,this.channel=(this.statusByte&15)+1):(this.isSystemMessage=!0,this.command=this.statusByte),this.isChannelMessage?this.type=x.getPropertyByValue(T.CHANNEL_MESSAGES,this.command):this.isSystemMessage&&(this.type=x.getPropertyByValue(T.SYSTEM_MESSAGES,this.command)),this.statusByte===T.SYSTEM_MESSAGES.sysex&&(this.dataBytes[0]===0?(this.manufacturerId=this.dataBytes.slice(0,3),this.dataBytes=this.dataBytes.slice(3,this.rawDataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(3,this.rawDataBytes.length-1)):(this.manufacturerId=[this.dataBytes[0]],this.dataBytes=this.dataBytes.slice(1,this.dataBytes.length-1),this.rawDataBytes=this.rawDataBytes.slice(1,this.rawDataBytes.length-1)))}}/**
 * The `Input` class represents a single MIDI input port. This object is automatically instantiated
 * by the library according to the host's MIDI subsystem and does not need to be directly
 * instantiated. Instead, you can access all `Input` objects by referring to the
 * [`WebMidi.inputs`](WebMidi#inputs) array. You can also retrieve inputs by using methods such as
 * [`WebMidi.getInputByName()`](WebMidi#getInputByName) and
 * [`WebMidi.getInputById()`](WebMidi#getInputById).
 *
 * Note that a single MIDI device may expose several inputs and/or outputs.
 *
 * **Important**: the `Input` class does not directly fire channel-specific MIDI messages
 * (such as [`noteon`](InputChannel#event:noteon) or
 * [`controlchange`](InputChannel#event:controlchange), etc.). The [`InputChannel`](InputChannel)
 * object does that. However, you can still use the
 * [`Input.addListener()`](#addListener) method to listen to channel-specific events on multiple
 * [`InputChannel`](InputChannel) objects at once.
 *
 * @fires Input#opened
 * @fires Input#disconnected
 * @fires Input#closed
 * @fires Input#midimessage
 *
 * @fires Input#sysex
 * @fires Input#timecode
 * @fires Input#songposition
 * @fires Input#songselect
 * @fires Input#tunerequest
 * @fires Input#clock
 * @fires Input#start
 * @fires Input#continue
 * @fires Input#stop
 * @fires Input#activesensing
 * @fires Input#reset
 *
 * @fires Input#unknownmidimessage
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class xi extends Fe{constructor(e){super(),this._midiInput=e,this._octaveOffset=0,this.channels=[];for(let t=1;t<=16;t++)this.channels[t]=new Ii(this,t);this._forwarders=[],this._midiInput.onstatechange=this._onStateChange.bind(this),this._midiInput.onmidimessage=this._onMidiMessage.bind(this)}async destroy(){this.removeListener(),this.channels.forEach(e=>e.destroy()),this.channels=[],this._forwarders=[],this._midiInput&&(this._midiInput.onstatechange=null,this._midiInput.onmidimessage=null),await this.close(),this._midiInput=null}_onStateChange(e){let t={timestamp:O.time,target:this,port:this};e.port.connection==="open"?(t.type="opened",this.emit("opened",t)):e.port.connection==="closed"&&e.port.state==="connected"?(t.type="closed",this.emit("closed",t)):e.port.connection==="closed"&&e.port.state==="disconnected"?(t.type="disconnected",t.port={connection:e.port.connection,id:e.port.id,manufacturer:e.port.manufacturer,name:e.port.name,state:e.port.state,type:e.port.type},this.emit("disconnected",t)):e.port.connection==="pending"&&e.port.state==="disconnected"||console.warn("This statechange event was not caught: ",e.port.connection,e.port.state)}_onMidiMessage(e){const t=new _r(e.data),n={port:this,target:this,message:t,timestamp:e.timeStamp,type:"midimessage",data:t.data,rawData:t.data,statusByte:t.data[0],dataBytes:t.dataBytes};this.emit("midimessage",n),t.isSystemMessage?this._parseEvent(n):t.isChannelMessage&&this.channels[t.channel]._processMidiMessageEvent(n),this._forwarders.forEach(s=>s.forward(t))}_parseEvent(e){const t=Object.assign({},e);t.type=t.message.type||"unknownmidimessage",t.type==="songselect"&&(t.song=e.data[1]+1,t.value=e.data[1],t.rawValue=t.value),this.emit(t.type,t)}async open(){try{await this._midiInput.open()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}async close(){if(!this._midiInput)return Promise.resolve(this);try{await this._midiInput.close()}catch(e){return Promise.reject(e)}return Promise.resolve(this)}getChannelModeByNumber(){O.validation&&console.warn("The 'getChannelModeByNumber()' method has been moved to the 'Utilities' class.")}addListener(e,t,n={}){if(O.validation&&typeof n=="function"){let s=t!=null?[].concat(t):void 0;t=n,n={channels:s}}if(T.CHANNEL_EVENTS.includes(e)){n.channels===void 0&&(n.channels=T.MIDI_CHANNEL_NUMBERS);let s=[];return x.sanitizeChannels(n.channels).forEach(i=>{s.push(this.channels[i].addListener(e,t,n))}),s}else return super.addListener(e,t,n)}addOneTimeListener(e,t,n={}){return n.remaining=1,this.addListener(e,t,n)}on(e,t,n,s){return this.addListener(e,t,n,s)}hasListener(e,t,n={}){if(O.validation&&typeof n=="function"){let s=[].concat(t);t=n,n={channels:s}}return T.CHANNEL_EVENTS.includes(e)?(n.channels===void 0&&(n.channels=T.MIDI_CHANNEL_NUMBERS),x.sanitizeChannels(n.channels).every(s=>this.channels[s].hasListener(e,t))):super.hasListener(e,t)}removeListener(e,t,n={}){if(O.validation&&typeof n=="function"){let s=[].concat(t);t=n,n={channels:s}}if(n.channels===void 0&&(n.channels=T.MIDI_CHANNEL_NUMBERS),e==null)return x.sanitizeChannels(n.channels).forEach(s=>{this.channels[s]&&this.channels[s].removeListener()}),super.removeListener();T.CHANNEL_EVENTS.includes(e)?x.sanitizeChannels(n.channels).forEach(s=>{this.channels[s].removeListener(e,t,n)}):super.removeListener(e,t,n)}addForwarder(e,t={}){let n;return e instanceof $s?n=e:n=new $s(e,t),this._forwarders.push(n),n}removeForwarder(e){this._forwarders=this._forwarders.filter(t=>t!==e)}hasForwarder(e){return this._forwarders.includes(e)}get name(){return this._midiInput.name}get id(){return this._midiInput.id}get connection(){return this._midiInput.connection}get manufacturer(){return this._midiInput.manufacturer}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get state(){return this._midiInput.state}get type(){return this._midiInput.type}get nrpnEventsEnabled(){return O.validation&&console.warn("The 'nrpnEventsEnabled' property has been moved to the 'InputChannel' class."),!1}}/**
 * The `WebMidi` object makes it easier to work with the low-level Web MIDI API. Basically, it
 * simplifies sending outgoing MIDI messages and reacting to incoming MIDI messages.
 *
 * When using the WebMidi.js library, you should know that the `WebMidi` class has already been
 * instantiated. You cannot instantiate it yourself. If you use the **IIFE** version, you should
 * simply use the global object called `WebMidi`. If you use the **CJS** (CommonJS) or **ESM** (ES6
 * module) version, you get an already-instantiated object when you import the module.
 *
 * @fires WebMidi#connected
 * @fires WebMidi#disabled
 * @fires WebMidi#disconnected
 * @fires WebMidi#enabled
 * @fires WebMidi#error
 * @fires WebMidi#midiaccessgranted
 * @fires WebMidi#portschanged
 *
 * @extends EventEmitter
 * @license Apache-2.0
 */class Oi extends Fe{constructor(){super(),this.defaults={note:{attack:x.from7bitToFloat(64),release:x.from7bitToFloat(64),duration:1/0}},this.interface=null,this.validation=!0,this._inputs=[],this._disconnectedInputs=[],this._outputs=[],this._disconnectedOutputs=[],this._stateChangeQueue=[],this._octaveOffset=0}async enable(e={},t=!1){if(x.isNode){try{window.navigator}catch{let a=await Object.getPrototypeOf(async function(){}).constructor(`
        let jzz = await import("jzz");
        return jzz.default;
        `)();global.navigator||(global.navigator={}),Object.assign(global.navigator,a)}try{}catch{global.performance=await Object.getPrototypeOf(async function(){}).constructor(`
        let perf_hooks = await import("perf_hooks");
        return perf_hooks.performance;
        `)()}}if(this.validation=e.validation!==!1,this.validation&&(typeof e=="function"&&(e={callback:e,sysex:t}),t&&(e.sysex=!0)),this.enabled)return typeof e.callback=="function"&&e.callback(),Promise.resolve();const n={timestamp:this.time,target:this,type:"error",error:void 0},s={timestamp:this.time,target:this,type:"midiaccessgranted"},i={timestamp:this.time,target:this,type:"enabled"};try{typeof e.requestMIDIAccessFunction=="function"?this.interface=await e.requestMIDIAccessFunction({sysex:e.sysex,software:e.software}):this.interface=await navigator.requestMIDIAccess({sysex:e.sysex,software:e.software})}catch(o){return n.error=o,this.emit("error",n),typeof e.callback=="function"&&e.callback(o),Promise.reject(o)}this.emit("midiaccessgranted",s),this.interface.onstatechange=this._onInterfaceStateChange.bind(this);try{await this._updateInputsAndOutputs()}catch(o){return n.error=o,this.emit("error",n),typeof e.callback=="function"&&e.callback(o),Promise.reject(o)}return this.emit("enabled",i),typeof e.callback=="function"&&e.callback(),Promise.resolve(this)}async disable(){return this.interface&&(this.interface.onstatechange=void 0),this._destroyInputsAndOutputs().then(()=>{navigator&&typeof navigator.close=="function"&&navigator.close(),this.interface=null;let e={timestamp:this.time,target:this,type:"disabled"};this.emit("disabled",e),this.removeListener()})}getInputById(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return}if(t.disconnected){for(let n=0;n<this._disconnectedInputs.length;n++)if(this._disconnectedInputs[n].id===e.toString())return this._disconnectedInputs[n]}else for(let n=0;n<this.inputs.length;n++)if(this.inputs[n].id===e.toString())return this.inputs[n]}getInputByName(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return;e=e.toString()}if(t.disconnected){for(let n=0;n<this._disconnectedInputs.length;n++)if(~this._disconnectedInputs[n].name.indexOf(e))return this._disconnectedInputs[n]}else for(let n=0;n<this.inputs.length;n++)if(~this.inputs[n].name.indexOf(e))return this.inputs[n]}getOutputByName(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return;e=e.toString()}if(t.disconnected){for(let n=0;n<this._disconnectedOutputs.length;n++)if(~this._disconnectedOutputs[n].name.indexOf(e))return this._disconnectedOutputs[n]}else for(let n=0;n<this.outputs.length;n++)if(~this.outputs[n].name.indexOf(e))return this.outputs[n]}getOutputById(e,t={disconnected:!1}){if(this.validation){if(!this.enabled)throw new Error("WebMidi is not enabled.");if(!e)return}if(t.disconnected){for(let n=0;n<this._disconnectedOutputs.length;n++)if(this._disconnectedOutputs[n].id===e.toString())return this._disconnectedOutputs[n]}else for(let n=0;n<this.outputs.length;n++)if(this.outputs[n].id===e.toString())return this.outputs[n]}noteNameToNumber(e){return this.validation&&console.warn("The noteNameToNumber() method is deprecated. Use Utilities.toNoteNumber() instead."),x.toNoteNumber(e,this.octaveOffset)}getOctave(e){return this.validation&&(console.warn("The getOctave()is deprecated. Use Utilities.getNoteDetails() instead"),e=parseInt(e)),!isNaN(e)&&e>=0&&e<=127?x.getNoteDetails(x.offsetNumber(e,this.octaveOffset)).octave:!1}sanitizeChannels(e){return this.validation&&console.warn("The sanitizeChannels() method has been moved to the utilities class."),x.sanitizeChannels(e)}toMIDIChannels(e){return this.validation&&console.warn("The toMIDIChannels() method has been deprecated. Use Utilities.sanitizeChannels() instead."),x.sanitizeChannels(e)}guessNoteNumber(e){return this.validation&&console.warn("The guessNoteNumber() method has been deprecated. Use Utilities.guessNoteNumber() instead."),x.guessNoteNumber(e,this.octaveOffset)}getValidNoteArray(e,t={}){return this.validation&&console.warn("The getValidNoteArray() method has been moved to the Utilities.buildNoteArray()"),x.buildNoteArray(e,t)}convertToTimestamp(e){return this.validation&&console.warn("The convertToTimestamp() method has been moved to Utilities.toTimestamp()."),x.toTimestamp(e)}async _destroyInputsAndOutputs(){let e=[];return this.inputs.forEach(t=>e.push(t.destroy())),this.outputs.forEach(t=>e.push(t.destroy())),Promise.all(e).then(()=>{this._inputs=[],this._outputs=[]})}_onInterfaceStateChange(e){this._updateInputsAndOutputs();let t={timestamp:e.timeStamp,type:e.port.state,target:this};if(e.port.state==="connected"&&e.port.connection==="open"){e.port.type==="output"?t.port=this.getOutputById(e.port.id):e.port.type==="input"&&(t.port=this.getInputById(e.port.id)),this.emit(e.port.state,t);const n=Object.assign({},t);n.type="portschanged",this.emit(n.type,n)}else if(e.port.state==="disconnected"&&e.port.connection==="pending"){e.port.type==="input"?t.port=this.getInputById(e.port.id,{disconnected:!0}):e.port.type==="output"&&(t.port=this.getOutputById(e.port.id,{disconnected:!0})),this.emit(e.port.state,t);const n=Object.assign({},t);n.type="portschanged",this.emit(n.type,n)}}async _updateInputsAndOutputs(){return Promise.all([this._updateInputs(),this._updateOutputs()])}async _updateInputs(){if(!this.interface)return;for(let t=this._inputs.length-1;t>=0;t--){const n=this._inputs[t];Array.from(this.interface.inputs.values()).find(i=>i===n._midiInput)||(this._disconnectedInputs.push(n),this._inputs.splice(t,1))}let e=[];return this.interface.inputs.forEach(t=>{if(!this._inputs.find(n=>n._midiInput===t)){let n=this._disconnectedInputs.find(s=>s._midiInput===t);n||(n=new xi(t)),this._inputs.push(n),e.push(n.open())}}),Promise.all(e)}async _updateOutputs(){if(!this.interface)return;for(let t=this._outputs.length-1;t>=0;t--){const n=this._outputs[t];Array.from(this.interface.outputs.values()).find(i=>i===n._midiOutput)||(this._disconnectedOutputs.push(n),this._outputs.splice(t,1))}let e=[];return this.interface.outputs.forEach(t=>{if(!this._outputs.find(n=>n._midiOutput===t)){let n=this._disconnectedOutputs.find(s=>s._midiOutput===t);n||(n=new Qn(t)),this._outputs.push(n),e.push(n.open())}}),Promise.all(e)}get enabled(){return this.interface!==null}get inputs(){return this._inputs}get isNode(){return this.validation&&console.warn("WebMidi.isNode has been deprecated. Use Utilities.isNode instead."),x.isNode}get isBrowser(){return this.validation&&console.warn("WebMidi.isBrowser has been deprecated. Use Utilities.isBrowser instead."),x.isBrowser}get octaveOffset(){return this._octaveOffset}set octaveOffset(e){if(this.validation&&(e=parseInt(e),isNaN(e)))throw new TypeError("The 'octaveOffset' property must be an integer.");this._octaveOffset=e}get outputs(){return this._outputs}get supported(){return typeof navigator<"u"&&!!navigator.requestMIDIAccess}get sysexEnabled(){return!!(this.interface&&this.interface.sysexEnabled)}get time(){return performance.now()}get version(){return"3.1.12"}get flavour(){return"esm"}get CHANNEL_EVENTS(){return this.validation&&console.warn("The CHANNEL_EVENTS enum has been moved to Enumerations.CHANNEL_EVENTS."),T.CHANNEL_EVENTS}get MIDI_SYSTEM_MESSAGES(){return this.validation&&console.warn("The MIDI_SYSTEM_MESSAGES enum has been moved to Enumerations.SYSTEM_MESSAGES."),T.SYSTEM_MESSAGES}get MIDI_CHANNEL_MODE_MESSAGES(){return this.validation&&console.warn("The MIDI_CHANNEL_MODE_MESSAGES enum has been moved to Enumerations.CHANNEL_MODE_MESSAGES."),T.CHANNEL_MODE_MESSAGES}get MIDI_CONTROL_CHANGE_MESSAGES(){return this.validation&&console.warn("The MIDI_CONTROL_CHANGE_MESSAGES enum has been replaced by the Enumerations.CONTROL_CHANGE_MESSAGES array."),T.MIDI_CONTROL_CHANGE_MESSAGES}get MIDI_REGISTERED_PARAMETER(){return this.validation&&console.warn("The MIDI_REGISTERED_PARAMETER enum has been moved to Enumerations.REGISTERED_PARAMETERS."),T.REGISTERED_PARAMETERS}get NOTES(){return this.validation&&console.warn("The NOTES enum has been deprecated."),["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]}}const O=new Oi;O.constructor=null;const gr="15.1.22",Zs=(r,e,t)=>({endTime:e,insertTime:t,type:"exponentialRampToValue",value:r}),Xs=(r,e,t)=>({endTime:e,insertTime:t,type:"linearRampToValue",value:r}),Jn=(r,e)=>({startTime:e,type:"setValue",value:r}),yr=(r,e,t)=>({duration:t,startTime:e,type:"setValueCurve",values:r}),vr=(r,e,{startTime:t,target:n,timeConstant:s})=>n+(e-n)*Math.exp((t-r)/s),At=r=>r.type==="exponentialRampToValue",yn=r=>r.type==="linearRampToValue",nt=r=>At(r)||yn(r),us=r=>r.type==="setValue",$e=r=>r.type==="setValueCurve",vn=(r,e,t,n)=>{const s=r[e];return s===void 0?n:nt(s)||us(s)?s.value:$e(s)?s.values[s.values.length-1]:vr(t,vn(r,e-1,s.startTime,n),s)},Qs=(r,e,t,n,s)=>t===void 0?[n.insertTime,s]:nt(t)?[t.endTime,t.value]:us(t)?[t.startTime,t.value]:$e(t)?[t.startTime+t.duration,t.values[t.values.length-1]]:[t.startTime,vn(r,e-1,t.startTime,s)],Kn=r=>r.type==="cancelAndHold",es=r=>r.type==="cancelScheduledValues",tt=r=>Kn(r)||es(r)?r.cancelTime:At(r)||yn(r)?r.endTime:r.startTime,Js=(r,e,t,{endTime:n,value:s})=>t===s?s:0<t&&0<s||t<0&&s<0?t*(s/t)**((r-e)/(n-e)):0,Ks=(r,e,t,{endTime:n,value:s})=>t+(r-e)/(n-e)*(s-t),ki=(r,e)=>{const t=Math.floor(e),n=Math.ceil(e);return t===n?r[t]:(1-(e-t))*r[t]+(1-(n-e))*r[n]},Ri=(r,{duration:e,startTime:t,values:n})=>{const s=(r-t)/e*(n.length-1);return ki(n,s)},hn=r=>r.type==="setTarget";class Di{constructor(e){this._automationEvents=[],this._currenTime=0,this._defaultValue=e}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(e){const t=tt(e);if(Kn(e)||es(e)){const n=this._automationEvents.findIndex(i=>es(e)&&$e(i)?i.startTime+i.duration>=t:tt(i)>=t),s=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),Kn(e)){const i=this._automationEvents[this._automationEvents.length-1];if(s!==void 0&&nt(s)){if(i!==void 0&&hn(i))throw new Error("The internal list is malformed.");const o=i===void 0?s.insertTime:$e(i)?i.startTime+i.duration:tt(i),a=i===void 0?this._defaultValue:$e(i)?i.values[i.values.length-1]:i.value,c=At(s)?Js(t,o,a,s):Ks(t,o,a,s),l=At(s)?Zs(c,t,this._currenTime):Xs(c,t,this._currenTime);this._automationEvents.push(l)}if(i!==void 0&&hn(i)&&this._automationEvents.push(Jn(this.getValue(t),t)),i!==void 0&&$e(i)&&i.startTime+i.duration>t){const o=t-i.startTime,a=(i.values.length-1)/i.duration,c=Math.max(2,1+Math.ceil(o*a)),l=o/(c-1)*a,u=i.values.slice(0,c);if(l<1)for(let h=1;h<c;h+=1){const f=l*h%1;u[h]=i.values[h-1]*(1-f)+i.values[h]*f}this._automationEvents[this._automationEvents.length-1]=yr(u,i.startTime,o)}}}else{const n=this._automationEvents.findIndex(o=>tt(o)>t),s=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(s!==void 0&&$e(s)&&tt(s)+s.duration>t)return!1;const i=At(e)?Zs(e.value,e.endTime,this._currenTime):yn(e)?Xs(e.value,t,this._currenTime):e;if(n===-1)this._automationEvents.push(i);else{if($e(e)&&t+e.duration>tt(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,i)}}return!0}flush(e){const t=this._automationEvents.findIndex(n=>tt(n)>e);if(t>1){const n=this._automationEvents.slice(t-1),s=n[0];hn(s)&&n.unshift(Jn(vn(this._automationEvents,t-2,s.startTime,this._defaultValue),s.startTime)),this._automationEvents=n}}getValue(e){if(this._automationEvents.length===0)return this._defaultValue;const t=this._automationEvents.findIndex(o=>tt(o)>e),n=this._automationEvents[t],s=(t===-1?this._automationEvents.length:t)-1,i=this._automationEvents[s];if(i!==void 0&&hn(i)&&(n===void 0||!nt(n)||n.insertTime>e))return vr(e,vn(this._automationEvents,s-1,i.startTime,this._defaultValue),i);if(i!==void 0&&us(i)&&(n===void 0||!nt(n)))return i.value;if(i!==void 0&&$e(i)&&(n===void 0||!nt(n)||i.startTime+i.duration>e))return e<i.startTime+i.duration?Ri(e,i):i.values[i.values.length-1];if(i!==void 0&&nt(i)&&(n===void 0||!nt(n)))return i.value;if(n!==void 0&&At(n)){const[o,a]=Qs(this._automationEvents,s,i,n,this._defaultValue);return Js(e,o,a,n)}if(n!==void 0&&yn(n)){const[o,a]=Qs(this._automationEvents,s,i,n,this._defaultValue);return Ks(e,o,a,n)}return this._defaultValue}}const Pi=r=>({cancelTime:r,type:"cancelAndHold"}),Vi=r=>({cancelTime:r,type:"cancelScheduledValues"}),Fi=(r,e)=>({endTime:e,type:"exponentialRampToValue",value:r}),Li=(r,e)=>({endTime:e,type:"linearRampToValue",value:r}),Bi=(r,e,t)=>({startTime:e,target:r,timeConstant:t,type:"setTarget"}),Ui=()=>new DOMException("","AbortError"),qi=r=>(e,t,[n,s,i],o)=>{r(e[s],[t,n,i],a=>a[0]===t&&a[1]===n,o)},Wi=r=>(e,t,n)=>{const s=[];for(let i=0;i<n.numberOfInputs;i+=1)s.push(new Set);r.set(e,{activeInputs:s,outputs:new Set,passiveInputs:new WeakMap,renderer:t})},Gi=r=>(e,t)=>{r.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})},Ot=new WeakSet,br=new WeakMap,hs=new WeakMap,wr=new WeakMap,ds=new WeakMap,xn=new WeakMap,Tr=new WeakMap,ts=new WeakMap,ns=new WeakMap,ss=new WeakMap,Sr={construct(){return Sr}},ji=r=>{try{const e=new Proxy(r,Sr);new e}catch{return!1}return!0},er=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,tr=(r,e)=>{const t=[];let n=r.replace(/^[\s]+/,""),s=n.match(er);for(;s!==null;){const i=s[1].slice(1,-1),o=s[0].replace(/([\s]+)?;?$/,"").replace(i,new URL(i,e).toString());t.push(o),n=n.slice(s[0].length).replace(/^[\s]+/,""),s=n.match(er)}return[t.join(";"),n]},nr=r=>{if(r!==void 0&&!Array.isArray(r))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},sr=r=>{if(!ji(r))throw new TypeError("The given value for processorCtor should be a constructor.");if(r.prototype===null||typeof r.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},Hi=(r,e,t,n,s,i,o,a,c,l,u,h,f)=>{let p=0;return(d,m,_={credentials:"omit"})=>{const y=u.get(d);if(y!==void 0&&y.has(m))return Promise.resolve();const S=l.get(d);if(S!==void 0){const g=S.get(m);if(g!==void 0)return g}const E=i(d),C=E.audioWorklet===void 0?s(m).then(([g,b])=>{const[w,v]=tr(g,b),I=`${w};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${v}
})})(window,'_AWGS')`;return t(I)}).then(()=>{const g=f._AWGS.pop();if(g===void 0)throw new SyntaxError;n(E.currentTime,E.sampleRate,()=>g(class{},void 0,(b,w)=>{if(b.trim()==="")throw e();const v=ns.get(E);if(v!==void 0){if(v.has(b))throw e();sr(w),nr(w.parameterDescriptors),v.set(b,w)}else sr(w),nr(w.parameterDescriptors),ns.set(E,new Map([[b,w]]))},E.sampleRate,void 0,void 0))}):Promise.all([s(m),Promise.resolve(r(h,h))]).then(([[g,b],w])=>{const v=p+1;p=v;const[I,M]=tr(g,b),R=`${I};((AudioWorkletProcessor,registerProcessor)=>{${M}
})(${w?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${w?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${w?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${v}',class extends AudioWorkletProcessor{process(){return !1}})`,L=new Blob([R],{type:"application/javascript; charset=utf-8"}),P=URL.createObjectURL(L);return E.audioWorklet.addModule(P,_).then(()=>{if(a(E))return E;const V=o(E);return V.audioWorklet.addModule(P,_).then(()=>V)}).then(V=>{if(c===null)throw new SyntaxError;try{new c(V,`__sac${v}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(P))});return S===void 0?l.set(d,new Map([[m,C]])):S.set(m,C),C.then(()=>{const g=u.get(d);g===void 0?u.set(d,new Set([m])):g.add(m)}).finally(()=>{const g=l.get(d);g!==void 0&&g.delete(m)}),C}},Ue=(r,e)=>{const t=r.get(e);if(t===void 0)throw new Error("A value with the given key could not be found.");return t},On=(r,e)=>{const t=Array.from(r).filter(e);if(t.length>1)throw Error("More than one element was found.");if(t.length===0)throw Error("No element was found.");const[n]=t;return r.delete(n),n},Er=(r,e,t,n)=>{const s=Ue(r,e),i=On(s,o=>o[0]===t&&o[1]===n);return s.size===0&&r.delete(e),i},Qt=r=>Ue(Tr,r),kt=r=>{if(Ot.has(r))throw new Error("The AudioNode is already stored.");Ot.add(r),Qt(r).forEach(e=>e(!0))},Nr=r=>"port"in r,Jt=r=>{if(!Ot.has(r))throw new Error("The AudioNode is not stored.");Ot.delete(r),Qt(r).forEach(e=>e(!1))},rs=(r,e)=>{!Nr(r)&&e.every(t=>t.size===0)&&Jt(r)},zi=(r,e,t,n,s,i,o,a,c,l,u,h,f)=>{const p=new WeakMap;return(d,m,_,y,S)=>{const{activeInputs:E,passiveInputs:C}=i(m),{outputs:g}=i(d),b=a(d),w=v=>{const I=c(m),M=c(d);if(v){const A=Er(C,d,_,y);r(E,d,A,!1),!S&&!h(d)&&t(M,I,_,y),f(m)&&kt(m)}else{const A=n(E,d,_,y);e(C,y,A,!1),!S&&!h(d)&&s(M,I,_,y);const N=o(m);if(N===0)u(m)&&rs(m,E);else{const D=p.get(m);D!==void 0&&clearTimeout(D),p.set(m,setTimeout(()=>{u(m)&&rs(m,E)},N*1e3))}}};return l(g,[m,_,y],v=>v[0]===m&&v[1]===_&&v[2]===y,!0)?(b.add(w),u(d)?r(E,d,[_,y,w],!0):e(C,y,[d,_,w],!0),!0):!1}},Yi=r=>(e,t,[n,s,i],o)=>{const a=e.get(n);a===void 0?e.set(n,new Set([[s,t,i]])):r(a,[s,t,i],c=>c[0]===s&&c[1]===t,o)},$i=r=>(e,t)=>{const n=r(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});t.connect(n).connect(e.destination);const s=()=>{t.removeEventListener("ended",s),t.disconnect(n),n.disconnect()};t.addEventListener("ended",s)},Zi=r=>(e,t)=>{r(e).add(t)},Xi={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},Qi=(r,e,t,n,s,i)=>class extends r{constructor(a,c){const l=s(a),u={...Xi,...c},h=n(l,u),f=i(l)?e():null;super(a,!1,h,f),this._nativeAnalyserNode=h}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,t()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,t()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},ve=(r,e)=>r.context===e,Ji=(r,e,t)=>()=>{const n=new WeakMap,s=async(i,o)=>{let a=e(i);if(!ve(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=r(o,l)}return n.set(o,a),await t(i,o,a),a};return{render(i,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(i,o)}}},bn=r=>{try{r.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},He=()=>new DOMException("","IndexSizeError"),fs=r=>{r.getChannelData=(e=>t=>{try{return e.call(r,t)}catch(n){throw n.code===12?He():n}})(r.getChannelData)},Ki={numberOfChannels:1},eo=(r,e,t,n,s,i,o,a)=>{let c=null;return class Cr{constructor(u){if(s===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:h,numberOfChannels:f,sampleRate:p}={...Ki,...u};c===null&&(c=new s(1,1,44100));const d=n!==null&&e(i,i)?new n({length:h,numberOfChannels:f,sampleRate:p}):c.createBuffer(f,h,p);if(d.numberOfChannels===0)throw t();return typeof d.copyFromChannel!="function"?(o(d),fs(d)):e(bn,()=>bn(d))||a(d),r.add(d),d}static[Symbol.hasInstance](u){return u!==null&&typeof u=="object"&&Object.getPrototypeOf(u)===Cr.prototype||r.has(u)}}},Me=-34028234663852886e22,we=34028234663852886e22,Ze=r=>Ot.has(r),to={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},no=(r,e,t,n,s,i,o,a)=>class extends r{constructor(l,u){const h=i(l),f={...to,...u},p=s(h,f),d=o(h),m=d?e():null;super(l,!1,p,m),this._audioBufferSourceNodeRenderer=m,this._isBufferNullified=!1,this._isBufferSet=f.buffer!==null,this._nativeAudioBufferSourceNode=p,this._onended=null,this._playbackRate=t(this,d,p.playbackRate,we,Me)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const u=typeof l=="function"?a(this,l):null;this._nativeAudioBufferSourceNode.onended=u;const h=this._nativeAudioBufferSourceNode.onended;this._onended=h!==null&&h===u?l:h}get playbackRate(){return this._playbackRate}start(l=0,u=0,h){if(this._nativeAudioBufferSourceNode.start(l,u,h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=h===void 0?[l,u]:[l,u,h]),this.context.state!=="closed"){kt(this);const f=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",f),Ze(this)&&Jt(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",f)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},so=(r,e,t,n,s)=>()=>{const i=new WeakMap;let o=null,a=null;const c=async(l,u)=>{let h=t(l);const f=ve(h,u);if(!f){const p={buffer:h.buffer,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,loop:h.loop,loopEnd:h.loopEnd,loopStart:h.loopStart,playbackRate:h.playbackRate.value};h=e(u,p),o!==null&&h.start(...o),a!==null&&h.stop(a)}return i.set(u,h),f?await r(u,l.playbackRate,h.playbackRate):await n(u,l.playbackRate,h.playbackRate),await s(l,u,h),h};return{set start(l){o=l},set stop(l){a=l},render(l,u){const h=i.get(u);return h!==void 0?Promise.resolve(h):c(l,u)}}},ro=r=>"playbackRate"in r,io=r=>"frequency"in r&&"gain"in r,oo=r=>"offset"in r,ao=r=>!("frequency"in r)&&"gain"in r,co=r=>"detune"in r&&"frequency"in r&&!("gain"in r),lo=r=>"pan"in r,Te=r=>Ue(br,r),Kt=r=>Ue(wr,r),is=(r,e)=>{const{activeInputs:t}=Te(r);t.forEach(s=>s.forEach(([i])=>{e.includes(r)||is(i,[...e,r])}));const n=ro(r)?[r.playbackRate]:Nr(r)?Array.from(r.parameters.values()):io(r)?[r.Q,r.detune,r.frequency,r.gain]:oo(r)?[r.offset]:ao(r)?[r.gain]:co(r)?[r.detune,r.frequency]:lo(r)?[r.pan]:[];for(const s of n){const i=Kt(s);i!==void 0&&i.activeInputs.forEach(([o])=>is(o,e))}Ze(r)&&Jt(r)},Ar=r=>{is(r.destination,[])},uo=r=>r===void 0||typeof r=="number"||typeof r=="string"&&(r==="balanced"||r==="interactive"||r==="playback"),ho=(r,e,t,n,s,i,o,a,c)=>class extends r{constructor(u={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let h;try{h=new c(u)}catch(d){throw d.code===12&&d.message==="sampleRate is not in range"?t():d}if(h===null)throw n();if(!uo(u.latencyHint))throw new TypeError(`The provided value '${u.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(u.sampleRate!==void 0&&h.sampleRate!==u.sampleRate)throw t();super(h,2);const{latencyHint:f}=u,{sampleRate:p}=h;if(this._baseLatency=typeof h.baseLatency=="number"?h.baseLatency:f==="balanced"?512/p:f==="interactive"||f===void 0?256/p:f==="playback"?1024/p:Math.max(2,Math.min(128,Math.round(f*p/128)))*128/p,this._nativeAudioContext=h,c.name==="webkitAudioContext"?(this._nativeGainNode=h.createGain(),this._nativeOscillatorNode=h.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(h.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,h.state==="running"){this._state="suspended";const d=()=>{this._state==="suspended"&&(this._state=null),h.removeEventListener("statechange",d)};h.addEventListener("statechange",d)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw e()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),Ar(this)}))}createMediaElementSource(u){return new s(this,{mediaElement:u})}createMediaStreamDestination(){return new i(this)}createMediaStreamSource(u){return new o(this,{mediaStream:u})}createMediaStreamTrackSource(u){return new a(this,{mediaStreamTrack:u})}resume(){return this._state==="suspended"?new Promise((u,h)=>{const f=()=>{this._nativeAudioContext.removeEventListener("statechange",f),this._nativeAudioContext.state==="running"?u():this.resume().then(u,h)};this._nativeAudioContext.addEventListener("statechange",f)}):this._nativeAudioContext.resume().catch(u=>{throw u===void 0||u.code===15?e():u})}suspend(){return this._nativeAudioContext.suspend().catch(u=>{throw u===void 0?e():u})}},fo=(r,e,t,n,s,i,o,a)=>class extends r{constructor(l,u){const h=i(l),f=o(h),p=s(h,u,f),d=f?e(a):null;super(l,!1,p,d),this._isNodeOfNativeOfflineAudioContext=f,this._nativeAudioDestinationNode=p}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw t();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},po=r=>{const e=new WeakMap,t=async(n,s)=>{const i=s.destination;return e.set(s,i),await r(n,s,i),i};return{render(n,s){const i=e.get(s);return i!==void 0?Promise.resolve(i):t(n,s)}}},mo=(r,e,t,n,s,i,o,a)=>(c,l)=>{const u=l.listener,h=()=>{const g=new Float32Array(1),b=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),w=o(l);let v=!1,I=[0,0,-1,0,1,0],M=[0,0,0];const A=()=>{if(v)return;v=!0;const L=n(l,256,9,0);L.onaudioprocess=({inputBuffer:P})=>{const V=[i(P,g,0),i(P,g,1),i(P,g,2),i(P,g,3),i(P,g,4),i(P,g,5)];V.some((B,G)=>B!==I[G])&&(u.setOrientation(...V),I=V);const H=[i(P,g,6),i(P,g,7),i(P,g,8)];H.some((B,G)=>B!==M[G])&&(u.setPosition(...H),M=H)},b.connect(L)},N=L=>P=>{P!==I[L]&&(I[L]=P,u.setOrientation(...I))},D=L=>P=>{P!==M[L]&&(M[L]=P,u.setPosition(...M))},R=(L,P,V)=>{const H=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:P});H.connect(b,0,L),H.start(),Object.defineProperty(H.offset,"defaultValue",{get(){return P}});const B=r({context:c},w,H.offset,we,Me);return a(B,"value",G=>()=>G.call(B),G=>W=>{try{G.call(B,W)}catch(X){if(X.code!==9)throw X}A(),w&&V(W)}),B.cancelAndHoldAtTime=(G=>w?()=>{throw s()}:(...W)=>{const X=G.apply(B,W);return A(),X})(B.cancelAndHoldAtTime),B.cancelScheduledValues=(G=>w?()=>{throw s()}:(...W)=>{const X=G.apply(B,W);return A(),X})(B.cancelScheduledValues),B.exponentialRampToValueAtTime=(G=>w?()=>{throw s()}:(...W)=>{const X=G.apply(B,W);return A(),X})(B.exponentialRampToValueAtTime),B.linearRampToValueAtTime=(G=>w?()=>{throw s()}:(...W)=>{const X=G.apply(B,W);return A(),X})(B.linearRampToValueAtTime),B.setTargetAtTime=(G=>w?()=>{throw s()}:(...W)=>{const X=G.apply(B,W);return A(),X})(B.setTargetAtTime),B.setValueAtTime=(G=>w?()=>{throw s()}:(...W)=>{const X=G.apply(B,W);return A(),X})(B.setValueAtTime),B.setValueCurveAtTime=(G=>w?()=>{throw s()}:(...W)=>{const X=G.apply(B,W);return A(),X})(B.setValueCurveAtTime),B};return{forwardX:R(0,0,N(0)),forwardY:R(1,0,N(1)),forwardZ:R(2,-1,N(2)),positionX:R(6,0,D(0)),positionY:R(7,0,D(1)),positionZ:R(8,0,D(2)),upX:R(3,0,N(3)),upY:R(4,1,N(4)),upZ:R(5,0,N(5))}},{forwardX:f,forwardY:p,forwardZ:d,positionX:m,positionY:_,positionZ:y,upX:S,upY:E,upZ:C}=u.forwardX===void 0?h():u;return{get forwardX(){return f},get forwardY(){return p},get forwardZ(){return d},get positionX(){return m},get positionY(){return _},get positionZ(){return y},get upX(){return S},get upY(){return E},get upZ(){return C}}},wn=r=>"context"in r,en=r=>wn(r[0]),bt=(r,e,t,n)=>{for(const s of r)if(t(s)){if(n)return!1;throw Error("The set contains at least one similar element.")}return r.add(e),!0},rr=(r,e,[t,n],s)=>{bt(r,[e,t,n],i=>i[0]===e&&i[1]===t,s)},ir=(r,[e,t,n],s)=>{const i=r.get(e);i===void 0?r.set(e,new Set([[t,n]])):bt(i,[t,n],o=>o[0]===t,s)},Lt=r=>"inputs"in r,Tn=(r,e,t,n)=>{if(Lt(e)){const s=e.inputs[n];return r.connect(s,t,0),[s,t,0]}return r.connect(e,t,n),[e,t,n]},Mr=(r,e,t)=>{for(const n of r)if(n[0]===e&&n[1]===t)return r.delete(n),n;return null},_o=(r,e,t)=>On(r,n=>n[0]===e&&n[1]===t),Ir=(r,e)=>{if(!Qt(r).delete(e))throw new Error("Missing the expected event listener.")},xr=(r,e,t)=>{const n=Ue(r,e),s=On(n,i=>i[0]===t);return n.size===0&&r.delete(e),s},Sn=(r,e,t,n)=>{Lt(e)?r.disconnect(e.inputs[n],t,0):r.disconnect(e,t,n)},ee=r=>Ue(hs,r),$t=r=>Ue(ds,r),gt=r=>ts.has(r),_n=r=>!Ot.has(r),or=(r,e)=>new Promise(t=>{if(e!==null)t(!0);else{const n=r.createScriptProcessor(256,1,1),s=r.createGain(),i=r.createBuffer(1,2,44100),o=i.getChannelData(0);o[0]=1,o[1]=1;const a=r.createBufferSource();a.buffer=i,a.loop=!0,a.connect(n).connect(r.destination),a.connect(s),a.disconnect(s),n.onaudioprocess=c=>{const l=c.inputBuffer.getChannelData(0);Array.prototype.some.call(l,u=>u===1)?t(!0):t(!1),a.stop(),n.onaudioprocess=null,a.disconnect(n),n.disconnect(r.destination)},a.start()}}),Xn=(r,e)=>{const t=new Map;for(const n of r)for(const s of n){const i=t.get(s);t.set(s,i===void 0?1:i+1)}t.forEach((n,s)=>e(s,n))},En=r=>"context"in r,go=r=>{const e=new Map;r.connect=(t=>(n,s=0,i=0)=>{const o=En(n)?t(n,s,i):t(n,s),a=e.get(n);return a===void 0?e.set(n,[{input:i,output:s}]):a.every(c=>c.input!==i||c.output!==s)&&a.push({input:i,output:s}),o})(r.connect.bind(r)),r.disconnect=(t=>(n,s,i)=>{if(t.apply(r),n===void 0)e.clear();else if(typeof n=="number")for(const[o,a]of e){const c=a.filter(l=>l.output!==n);c.length===0?e.delete(o):e.set(o,c)}else if(e.has(n))if(s===void 0)e.delete(n);else{const o=e.get(n);if(o!==void 0){const a=o.filter(c=>c.output!==s&&(c.input!==i||i===void 0));a.length===0?e.delete(n):e.set(n,a)}}for(const[o,a]of e)a.forEach(c=>{En(o)?r.connect(o,c.output,c.input):r.connect(o,c.output)})})(r.disconnect)},yo=(r,e,t,n)=>{const{activeInputs:s,passiveInputs:i}=Kt(e),{outputs:o}=Te(r),a=Qt(r),c=l=>{const u=ee(r),h=$t(e);if(l){const f=xr(i,r,t);rr(s,r,f,!1),!n&&!gt(r)&&u.connect(h,t)}else{const f=_o(s,r,t);ir(i,f,!1),!n&&!gt(r)&&u.disconnect(h,t)}};return bt(o,[e,t],l=>l[0]===e&&l[1]===t,!0)?(a.add(c),Ze(r)?rr(s,r,[t,c],!0):ir(i,[r,t,c],!0),!0):!1},vo=(r,e,t,n)=>{const{activeInputs:s,passiveInputs:i}=Te(e),o=Mr(s[n],r,t);return o===null?[Er(i,r,t,n)[2],!1]:[o[2],!0]},bo=(r,e,t)=>{const{activeInputs:n,passiveInputs:s}=Kt(e),i=Mr(n,r,t);return i===null?[xr(s,r,t)[1],!1]:[i[2],!0]},ps=(r,e,t,n,s)=>{const[i,o]=vo(r,t,n,s);if(i!==null&&(Ir(r,i),o&&!e&&!gt(r)&&Sn(ee(r),ee(t),n,s)),Ze(t)){const{activeInputs:a}=Te(t);rs(t,a)}},ms=(r,e,t,n)=>{const[s,i]=bo(r,t,n);s!==null&&(Ir(r,s),i&&!e&&!gt(r)&&ee(r).disconnect($t(t),n))},wo=(r,e)=>{const t=Te(r),n=[];for(const s of t.outputs)en(s)?ps(r,e,...s):ms(r,e,...s),n.push(s[0]);return t.outputs.clear(),n},To=(r,e,t)=>{const n=Te(r),s=[];for(const i of n.outputs)i[1]===t&&(en(i)?ps(r,e,...i):ms(r,e,...i),s.push(i[0]),n.outputs.delete(i));return s},So=(r,e,t,n,s)=>{const i=Te(r);return Array.from(i.outputs).filter(o=>o[0]===t&&(n===void 0||o[1]===n)&&(s===void 0||o[2]===s)).map(o=>(en(o)?ps(r,e,...o):ms(r,e,...o),i.outputs.delete(o),o[0]))},Eo=(r,e,t,n,s,i,o,a,c,l,u,h,f,p,d,m)=>class extends l{constructor(y,S,E,C){super(E),this._context=y,this._nativeAudioNode=E;const g=u(y);h(g)&&t(or,()=>or(g,m))!==!0&&go(E),hs.set(this,E),Tr.set(this,new Set),y.state!=="closed"&&S&&kt(this),r(this,C,E)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(y){this._nativeAudioNode.channelCount=y}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(y){this._nativeAudioNode.channelCountMode=y}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(y){this._nativeAudioNode.channelInterpretation=y}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(y,S=0,E=0){if(S<0||S>=this._nativeAudioNode.numberOfOutputs)throw s();const C=u(this._context),g=d(C);if(f(y)||p(y))throw i();if(wn(y)){const v=ee(y);try{const M=Tn(this._nativeAudioNode,v,S,E),A=_n(this);(g||A)&&this._nativeAudioNode.disconnect(...M),this.context.state!=="closed"&&!A&&_n(y)&&kt(y)}catch(M){throw M.code===12?i():M}if(e(this,y,S,E,g)){const M=c([this],y);Xn(M,n(g))}return y}const b=$t(y);if(b.name==="playbackRate"&&b.maxValue===1024)throw o();try{this._nativeAudioNode.connect(b,S),(g||_n(this))&&this._nativeAudioNode.disconnect(b,S)}catch(v){throw v.code===12?i():v}if(yo(this,y,S,g)){const v=c([this],y);Xn(v,n(g))}}disconnect(y,S,E){let C;const g=u(this._context),b=d(g);if(y===void 0)C=wo(this,b);else if(typeof y=="number"){if(y<0||y>=this.numberOfOutputs)throw s();C=To(this,b,y)}else{if(S!==void 0&&(S<0||S>=this.numberOfOutputs)||wn(y)&&E!==void 0&&(E<0||E>=y.numberOfInputs))throw s();if(C=So(this,b,y,S,E),C.length===0)throw i()}for(const w of C){const v=c([this],w);Xn(v,a)}}},No=(r,e,t,n,s,i,o,a,c,l,u,h,f)=>(p,d,m,_=null,y=null)=>{const S=m.value,E=new Di(S),C=d?n(E):null,g={get defaultValue(){return S},get maxValue(){return _===null?m.maxValue:_},get minValue(){return y===null?m.minValue:y},get value(){return m.value},set value(b){m.value=b,g.setValueAtTime(b,p.context.currentTime)},cancelAndHoldAtTime(b){if(typeof m.cancelAndHoldAtTime=="function")C===null&&E.flush(p.context.currentTime),E.add(s(b)),m.cancelAndHoldAtTime(b);else{const w=Array.from(E).pop();C===null&&E.flush(p.context.currentTime),E.add(s(b));const v=Array.from(E).pop();m.cancelScheduledValues(b),w!==v&&v!==void 0&&(v.type==="exponentialRampToValue"?m.exponentialRampToValueAtTime(v.value,v.endTime):v.type==="linearRampToValue"?m.linearRampToValueAtTime(v.value,v.endTime):v.type==="setValue"?m.setValueAtTime(v.value,v.startTime):v.type==="setValueCurve"&&m.setValueCurveAtTime(v.values,v.startTime,v.duration))}return g},cancelScheduledValues(b){return C===null&&E.flush(p.context.currentTime),E.add(i(b)),m.cancelScheduledValues(b),g},exponentialRampToValueAtTime(b,w){if(b===0)throw new RangeError;if(!Number.isFinite(w)||w<0)throw new RangeError;const v=p.context.currentTime;return C===null&&E.flush(v),Array.from(E).length===0&&(E.add(l(S,v)),m.setValueAtTime(S,v)),E.add(o(b,w)),m.exponentialRampToValueAtTime(b,w),g},linearRampToValueAtTime(b,w){const v=p.context.currentTime;return C===null&&E.flush(v),Array.from(E).length===0&&(E.add(l(S,v)),m.setValueAtTime(S,v)),E.add(a(b,w)),m.linearRampToValueAtTime(b,w),g},setTargetAtTime(b,w,v){return C===null&&E.flush(p.context.currentTime),E.add(c(b,w,v)),m.setTargetAtTime(b,w,v),g},setValueAtTime(b,w){return C===null&&E.flush(p.context.currentTime),E.add(l(b,w)),m.setValueAtTime(b,w),g},setValueCurveAtTime(b,w,v){const I=b instanceof Float32Array?b:new Float32Array(b);if(h!==null&&h.name==="webkitAudioContext"){const M=w+v,A=p.context.sampleRate,N=Math.ceil(w*A),D=Math.floor(M*A),R=D-N,L=new Float32Array(R);for(let V=0;V<R;V+=1){const H=(I.length-1)/v*((N+V)/A-w),B=Math.floor(H),G=Math.ceil(H);L[V]=B===G?I[B]:(1-(H-B))*I[B]+(1-(G-H))*I[G]}C===null&&E.flush(p.context.currentTime),E.add(u(L,w,v)),m.setValueCurveAtTime(L,w,v);const P=D/A;P<M&&f(g,L[L.length-1],P),f(g,I[I.length-1],M)}else C===null&&E.flush(p.context.currentTime),E.add(u(I,w,v)),m.setValueCurveAtTime(I,w,v);return g}};return t.set(g,m),e.set(g,p),r(g,C),g},Co=r=>({replay(e){for(const t of r)if(t.type==="exponentialRampToValue"){const{endTime:n,value:s}=t;e.exponentialRampToValueAtTime(s,n)}else if(t.type==="linearRampToValue"){const{endTime:n,value:s}=t;e.linearRampToValueAtTime(s,n)}else if(t.type==="setTarget"){const{startTime:n,target:s,timeConstant:i}=t;e.setTargetAtTime(s,n,i)}else if(t.type==="setValue"){const{startTime:n,value:s}=t;e.setValueAtTime(s,n)}else if(t.type==="setValueCurve"){const{duration:n,startTime:s,values:i}=t;e.setValueCurveAtTime(i,s,n)}else throw new Error("Can't apply an unknown automation.")}});class Or{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e,t=null){return this._map.forEach((n,s)=>e.call(t,n,s,this))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const Ao={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},Mo=(r,e,t,n,s,i,o,a,c,l,u,h,f,p)=>class extends e{constructor(m,_,y){var S;const E=a(m),C=c(E),g=u({...Ao,...y});f(g);const b=ns.get(E),w=b==null?void 0:b.get(_),v=C||E.state!=="closed"?E:(S=o(E))!==null&&S!==void 0?S:E,I=s(v,C?null:m.baseLatency,l,_,w,g),M=C?n(_,g,w):null;super(m,!0,I,M);const A=[];I.parameters.forEach((D,R)=>{const L=t(this,C,D);A.push([R,L])}),this._nativeAudioWorkletNode=I,this._onprocessorerror=null,this._parameters=new Or(A),C&&r(E,this);const{activeInputs:N}=i(this);h(I,N)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(m){const _=typeof m=="function"?p(this,m):null;this._nativeAudioWorkletNode.onprocessorerror=_;const y=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=y!==null&&y===_?m:y}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function Nn(r,e,t,n,s){if(typeof r.copyFromChannel=="function")e[t].byteLength===0&&(e[t]=new Float32Array(128)),r.copyFromChannel(e[t],n,s);else{const i=r.getChannelData(n);if(e[t].byteLength===0)e[t]=i.slice(s,s+128);else{const o=new Float32Array(i.buffer,s*Float32Array.BYTES_PER_ELEMENT,128);e[t].set(o)}}}const kr=(r,e,t,n,s)=>{typeof r.copyToChannel=="function"?e[t].byteLength!==0&&r.copyToChannel(e[t],n,s):e[t].byteLength!==0&&r.getChannelData(n).set(e[t],s)},Cn=(r,e)=>{const t=[];for(let n=0;n<r;n+=1){const s=[],i=typeof e=="number"?e:e[n];for(let o=0;o<i;o+=1)s.push(new Float32Array(128));t.push(s)}return t},Io=(r,e)=>{const t=Ue(ss,r),n=ee(e);return Ue(t,n)},xo=async(r,e,t,n,s,i,o)=>{const a=e===null?Math.ceil(r.context.length/128)*128:e.length,c=n.channelCount*n.numberOfInputs,l=s.reduce((_,y)=>_+y,0),u=l===0?null:t.createBuffer(l,a,t.sampleRate);if(i===void 0)throw new Error("Missing the processor constructor.");const h=Te(r),f=await Io(t,r),p=Cn(n.numberOfInputs,n.channelCount),d=Cn(n.numberOfOutputs,s),m=Array.from(r.parameters.keys()).reduce((_,y)=>({..._,[y]:new Float32Array(128)}),{});for(let _=0;_<a;_+=128){if(n.numberOfInputs>0&&e!==null)for(let y=0;y<n.numberOfInputs;y+=1)for(let S=0;S<n.channelCount;S+=1)Nn(e,p[y],S,S,_);i.parameterDescriptors!==void 0&&e!==null&&i.parameterDescriptors.forEach(({name:y},S)=>{Nn(e,m,y,c+S,_)});for(let y=0;y<n.numberOfInputs;y+=1)for(let S=0;S<s[y];S+=1)d[y][S].byteLength===0&&(d[y][S]=new Float32Array(128));try{const y=p.map((E,C)=>h.activeInputs[C].size===0?[]:E),S=o(_/t.sampleRate,t.sampleRate,()=>f.process(y,d,m));if(u!==null)for(let E=0,C=0;E<n.numberOfOutputs;E+=1){for(let g=0;g<s[E];g+=1)kr(u,d[E],g,C+g,_);C+=s[E]}if(!S)break}catch(y){r.dispatchEvent(new ErrorEvent("processorerror",{colno:y.colno,filename:y.filename,lineno:y.lineno,message:y.message}));break}}return u},Oo=(r,e,t,n,s,i,o,a,c,l,u,h,f,p,d,m)=>(_,y,S)=>{const E=new WeakMap;let C=null;const g=async(b,w)=>{let v=u(b),I=null;const M=ve(v,w),A=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(h===null){const N=A.reduce((P,V)=>P+V,0),D=s(w,{channelCount:Math.max(1,N),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,N)}),R=[];for(let P=0;P<b.numberOfOutputs;P+=1)R.push(n(w,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:A[P]}));const L=o(w,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});L.connect=e.bind(null,R),L.disconnect=c.bind(null,R),I=[D,R,L]}else M||(v=new h(w,_));if(E.set(w,I===null?v:I[2]),I!==null){if(C===null){if(S===void 0)throw new Error("Missing the processor constructor.");if(f===null)throw new Error("Missing the native OfflineAudioContext constructor.");const V=b.channelCount*b.numberOfInputs,H=S.parameterDescriptors===void 0?0:S.parameterDescriptors.length,B=V+H;C=xo(b,B===0?null:await(async()=>{const W=new f(B,Math.ceil(b.context.length/128)*128,w.sampleRate),X=[],Ce=[];for(let te=0;te<y.numberOfInputs;te+=1)X.push(o(W,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),Ce.push(s(W,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const Ae=await Promise.all(Array.from(b.parameters.values()).map(async te=>{const be=i(W,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:te.value});return await p(W,te,be.offset),be})),Y=n(W,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,V+H)});for(let te=0;te<y.numberOfInputs;te+=1){X[te].connect(Ce[te]);for(let be=0;be<y.channelCount;be+=1)Ce[te].connect(Y,be,te*y.channelCount+be)}for(const[te,be]of Ae.entries())be.connect(Y,0,V+te),be.start(0);return Y.connect(W.destination),await Promise.all(X.map(te=>d(b,W,te))),m(W)})(),w,y,A,S,l)}const N=await C,D=t(w,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[R,L,P]=I;N!==null&&(D.buffer=N,D.start(0)),D.connect(R);for(let V=0,H=0;V<b.numberOfOutputs;V+=1){const B=L[V];for(let G=0;G<A[V];G+=1)R.connect(B,H+G,G);H+=A[V]}return P}if(M)for(const[N,D]of b.parameters.entries())await r(w,D,v.parameters.get(N));else for(const[N,D]of b.parameters.entries())await p(w,D,v.parameters.get(N));return await d(b,w,v),v};return{render(b,w){a(w,b);const v=E.get(w);return v!==void 0?Promise.resolve(v):g(b,w)}}},ko=(r,e,t,n,s,i,o,a,c,l,u,h,f,p,d,m,_,y,S,E)=>class extends d{constructor(g,b){super(g,b),this._nativeContext=g,this._audioWorklet=r===void 0?void 0:{addModule:(w,v)=>r(this,w,v)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new s(this)}createBuffer(g,b,w){return new t({length:b,numberOfChannels:g,sampleRate:w})}createBufferSource(){return new n(this)}createChannelMerger(g=6){return new i(this,{numberOfInputs:g})}createChannelSplitter(g=6){return new o(this,{numberOfOutputs:g})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(g=1){return new u(this,{maxDelayTime:g})}createDynamicsCompressor(){return new h(this)}createGain(){return new f(this)}createIIRFilter(g,b){return new p(this,{feedback:b,feedforward:g})}createOscillator(){return new m(this)}createPanner(){return new _(this)}createPeriodicWave(g,b,w={disableNormalization:!1}){return new y(this,{...w,imag:b,real:g})}createStereoPanner(){return new S(this)}createWaveShaper(){return new E(this)}decodeAudioData(g,b,w){return l(this._nativeContext,g).then(v=>(typeof b=="function"&&b(v),v),v=>{throw typeof w=="function"&&w(v),v})}},Ro={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},Do=(r,e,t,n,s,i,o,a)=>class extends r{constructor(l,u){const h=i(l),f={...Ro,...u},p=s(h,f),d=o(h),m=d?t():null;super(l,!1,p,m),this._Q=e(this,d,p.Q,we,Me),this._detune=e(this,d,p.detune,1200*Math.log2(we),-1200*Math.log2(we)),this._frequency=e(this,d,p.frequency,l.sampleRate/2,0),this._gain=e(this,d,p.gain,40*Math.log10(we),Me),this._nativeBiquadFilterNode=p,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,u,h){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,u,h)}catch(f){throw f.code===11?n():f}if(l.length!==u.length||u.length!==h.length)throw n()}},Po=(r,e,t,n,s)=>()=>{const i=new WeakMap,o=async(a,c)=>{let l=t(a);const u=ve(l,c);if(!u){const h={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=e(c,h)}return i.set(c,l),u?(await r(c,a.Q,l.Q),await r(c,a.detune,l.detune),await r(c,a.frequency,l.frequency),await r(c,a.gain,l.gain)):(await n(c,a.Q,l.Q),await n(c,a.detune,l.detune),await n(c,a.frequency,l.frequency),await n(c,a.gain,l.gain)),await s(a,c,l),l};return{render(a,c){const l=i.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},Vo=(r,e)=>(t,n)=>{const s=e.get(t);if(s!==void 0)return s;const i=r.get(t);if(i!==void 0)return i;try{const o=n();return o instanceof Promise?(r.set(t,o),o.catch(()=>!1).then(a=>(r.delete(t),e.set(t,a),a))):(e.set(t,o),o)}catch{return e.set(t,!1),!1}},Fo={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},Lo=(r,e,t,n,s)=>class extends r{constructor(o,a){const c=n(o),l={...Fo,...a},u=t(c,l),h=s(c)?e():null;super(o,!1,u,h)}},Bo=(r,e,t)=>()=>{const n=new WeakMap,s=async(i,o)=>{let a=e(i);if(!ve(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=r(o,l)}return n.set(o,a),await t(i,o,a),a};return{render(i,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(i,o)}}},Uo={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},qo=(r,e,t,n,s,i)=>class extends r{constructor(a,c){const l=n(a),u=i({...Uo,...c}),h=t(l,u),f=s(l)?e():null;super(a,!1,h,f)}},Wo=(r,e,t)=>()=>{const n=new WeakMap,s=async(i,o)=>{let a=e(i);if(!ve(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=r(o,l)}return n.set(o,a),await t(i,o,a),a};return{render(i,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(i,o)}}},Go=r=>(e,t,n)=>r(t,e,n),jo=r=>(e,t,n=0,s=0)=>{const i=e[n];if(i===void 0)throw r();return En(t)?i.connect(t,0,s):i.connect(t,0)},Ho=r=>(e,t)=>{const n=r(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),s=e.createBuffer(1,2,44100);return n.buffer=s,n.loop=!0,n.connect(t),n.start(),()=>{n.stop(),n.disconnect(t)}},zo={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},Yo=(r,e,t,n,s,i,o)=>class extends r{constructor(c,l){const u=s(c),h={...zo,...l},f=n(u,h),p=i(u),d=p?t():null;super(c,!1,f,d),this._constantSourceNodeRenderer=d,this._nativeConstantSourceNode=f,this._offset=e(this,p,f.offset,we,Me),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=l;const u=this._nativeConstantSourceNode.onended;this._onended=u!==null&&u===l?c:u}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){kt(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),Ze(this)&&Jt(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},$o=(r,e,t,n,s)=>()=>{const i=new WeakMap;let o=null,a=null;const c=async(l,u)=>{let h=t(l);const f=ve(h,u);if(!f){const p={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,offset:h.offset.value};h=e(u,p),o!==null&&h.start(o),a!==null&&h.stop(a)}return i.set(u,h),f?await r(u,l.offset,h.offset):await n(u,l.offset,h.offset),await s(l,u,h),h};return{set start(l){o=l},set stop(l){a=l},render(l,u){const h=i.get(u);return h!==void 0?Promise.resolve(h):c(l,u)}}},Zo=r=>e=>(r[0]=e,r[0]),Xo={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Qo=(r,e,t,n,s,i)=>class extends r{constructor(a,c){const l=n(a),u={...Xo,...c},h=t(l,u),p=s(l)?e():null;super(a,!1,h,p),this._isBufferNullified=!1,this._nativeConvolverNode=h,u.buffer!==null&&i(this,u.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,i(this,0)}else this._isBufferNullified=!1,i(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},Jo=(r,e,t)=>()=>{const n=new WeakMap,s=async(i,o)=>{let a=e(i);if(!ve(a,o)){const l={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=r(o,l)}return n.set(o,a),Lt(a)?await t(i,o,a.inputs[0]):await t(i,o,a),a};return{render(i,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(i,o)}}},Ko=(r,e)=>(t,n,s)=>{if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(t,n,s)}catch(i){throw i.name==="SyntaxError"?r():i}},ea=()=>new DOMException("","DataCloneError"),ar=r=>{const{port1:e,port2:t}=new MessageChannel;return new Promise(n=>{const s=()=>{t.onmessage=null,e.close(),t.close(),n()};t.onmessage=()=>s();try{e.postMessage(r,[r])}catch{}finally{s()}})},ta=(r,e,t,n,s,i,o,a,c,l,u)=>(h,f)=>{const p=o(h)?h:i(h);if(s.has(f)){const d=t();return Promise.reject(d)}try{s.add(f)}catch{}return e(c,()=>c(p))?p.decodeAudioData(f).then(d=>(ar(f).catch(()=>{}),e(a,()=>a(d))||u(d),r.add(d),d)):new Promise((d,m)=>{const _=async()=>{try{await ar(f)}catch{}},y=S=>{m(S),_()};try{p.decodeAudioData(f,S=>{typeof S.copyFromChannel!="function"&&(l(S),fs(S)),r.add(S),_().then(()=>d(S))},S=>{y(S===null?n():S)})}catch(S){y(S)}})},na=(r,e,t,n,s,i,o,a)=>(c,l)=>{const u=e.get(c);if(u===void 0)throw new Error("Missing the expected cycle count.");const h=i(c.context),f=a(h);if(u===l){if(e.delete(c),!f&&o(c)){const p=n(c),{outputs:d}=t(c);for(const m of d)if(en(m)){const _=n(m[0]);r(p,_,m[1],m[2])}else{const _=s(m[0]);p.connect(_,m[1])}}}else e.set(c,u-l)},sa={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},ra=(r,e,t,n,s,i,o)=>class extends r{constructor(c,l){const u=s(c),h={...sa,...l},f=n(u,h),p=i(u),d=p?t(h.maxDelayTime):null;super(c,!1,f,d),this._delayTime=e(this,p,f.delayTime),o(this,h.maxDelayTime)}get delayTime(){return this._delayTime}},ia=(r,e,t,n,s)=>i=>{const o=new WeakMap,a=async(c,l)=>{let u=t(c);const h=ve(u,l);if(!h){const f={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,delayTime:u.delayTime.value,maxDelayTime:i};u=e(l,f)}return o.set(l,u),h?await r(l,c.delayTime,u.delayTime):await n(l,c.delayTime,u.delayTime),await s(c,l,u),u};return{render(c,l){const u=o.get(l);return u!==void 0?Promise.resolve(u):a(c,l)}}},oa=r=>(e,t,n,s)=>r(e[s],i=>i[0]===t&&i[1]===n),aa=r=>(e,t)=>{r(e).delete(t)},ca=r=>"delayTime"in r,la=(r,e,t)=>function n(s,i){const o=wn(i)?i:t(r,i);if(ca(o))return[];if(s[0]===o)return[s];if(s.includes(o))return[];const{outputs:a}=e(o);return Array.from(a).map(c=>n([...s,o],c[0])).reduce((c,l)=>c.concat(l),[])},dn=(r,e,t)=>{const n=e[t];if(n===void 0)throw r();return n},ua=r=>(e,t=void 0,n=void 0,s=0)=>t===void 0?e.forEach(i=>i.disconnect()):typeof t=="number"?dn(r,e,t).disconnect():En(t)?n===void 0?e.forEach(i=>i.disconnect(t)):s===void 0?dn(r,e,n).disconnect(t,0):dn(r,e,n).disconnect(t,0,s):n===void 0?e.forEach(i=>i.disconnect(t)):dn(r,e,n).disconnect(t,0),ha={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},da=(r,e,t,n,s,i,o,a)=>class extends r{constructor(l,u){const h=i(l),f={...ha,...u},p=n(h,f),d=o(h),m=d?t():null;super(l,!1,p,m),this._attack=e(this,d,p.attack),this._knee=e(this,d,p.knee),this._nativeDynamicsCompressorNode=p,this._ratio=e(this,d,p.ratio),this._release=e(this,d,p.release),this._threshold=e(this,d,p.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const u=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=u,s()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const u=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=u,s()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},fa=(r,e,t,n,s)=>()=>{const i=new WeakMap,o=async(a,c)=>{let l=t(a);const u=ve(l,c);if(!u){const h={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=e(c,h)}return i.set(c,l),u?(await r(c,a.attack,l.attack),await r(c,a.knee,l.knee),await r(c,a.ratio,l.ratio),await r(c,a.release,l.release),await r(c,a.threshold,l.threshold)):(await n(c,a.attack,l.attack),await n(c,a.knee,l.knee),await n(c,a.ratio,l.ratio),await n(c,a.release,l.release),await n(c,a.threshold,l.threshold)),await s(a,c,l),l};return{render(a,c){const l=i.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},pa=()=>new DOMException("","EncodingError"),ma=r=>e=>new Promise((t,n)=>{if(r===null){n(new SyntaxError);return}const s=r.document.head;if(s===null)n(new SyntaxError);else{const i=r.document.createElement("script"),o=new Blob([e],{type:"application/javascript"}),a=URL.createObjectURL(o),c=r.onerror,l=()=>{r.onerror=c,URL.revokeObjectURL(a)};r.onerror=(u,h,f,p,d)=>{if(h===a||h===r.location.href&&f===1&&p===1)return l(),n(d),!1;if(c!==null)return c(u,h,f,p,d)},i.onerror=()=>{l(),n(new SyntaxError)},i.onload=()=>{l(),t()},i.src=a,i.type="module",s.appendChild(i)}}),_a=r=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(t,n,s){if(n!==null){let i=this._listeners.get(n);i===void 0&&(i=r(this,n),typeof n=="function"&&this._listeners.set(n,i)),this._nativeEventTarget.addEventListener(t,i,s)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,n,s){const i=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(t,i===void 0?null:i,s)}},ga=r=>(e,t,n)=>{Object.defineProperties(r,{currentFrame:{configurable:!0,get(){return Math.round(e*t)}},currentTime:{configurable:!0,get(){return e}}});try{return n()}finally{r!==null&&(delete r.currentFrame,delete r.currentTime)}},ya=r=>async e=>{try{const t=await fetch(e);if(t.ok)return[await t.text(),t.url]}catch{}throw r()},va={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},ba=(r,e,t,n,s,i)=>class extends r{constructor(a,c){const l=s(a),u={...va,...c},h=n(l,u),f=i(l),p=f?t():null;super(a,!1,h,p),this._gain=e(this,f,h.gain,we,Me)}get gain(){return this._gain}},wa=(r,e,t,n,s)=>()=>{const i=new WeakMap,o=async(a,c)=>{let l=t(a);const u=ve(l,c);if(!u){const h={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=e(c,h)}return i.set(c,l),u?await r(c,a.gain,l.gain):await n(c,a.gain,l.gain),await s(a,c,l),l};return{render(a,c){const l=i.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},Ta=(r,e)=>t=>e(r,t),Sa=r=>e=>{const t=r(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return t.renderer},Ea=r=>e=>{var t;return(t=r.get(e))!==null&&t!==void 0?t:0},Na=r=>e=>{const t=r(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return t.renderer},Ca=r=>e=>r.get(e),me=()=>new DOMException("","InvalidStateError"),Aa=r=>e=>{const t=r.get(e);if(t===void 0)throw me();return t},Ma=(r,e)=>t=>{let n=r.get(t);if(n!==void 0)return n;if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new e(1,1,44100),r.set(t,n),n},Ia=r=>e=>{const t=r.get(e);if(t===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return t},kn=()=>new DOMException("","InvalidAccessError"),xa=r=>{r.getFrequencyResponse=(e=>(t,n,s)=>{if(t.length!==n.length||n.length!==s.length)throw kn();return e.call(r,t,n,s)})(r.getFrequencyResponse)},Oa={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},ka=(r,e,t,n,s,i)=>class extends r{constructor(a,c){const l=n(a),u=s(l),h={...Oa,...c},f=e(l,u?null:a.baseLatency,h),p=u?t(h.feedback,h.feedforward):null;super(a,!1,f,p),xa(f),this._nativeIIRFilterNode=f,i(this,1)}getFrequencyResponse(a,c,l){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,l)}},Rr=(r,e,t,n,s,i,o,a,c,l,u)=>{const h=l.length;let f=a;for(let p=0;p<h;p+=1){let d=t[0]*l[p];for(let m=1;m<s;m+=1){const _=f-m&c-1;d+=t[m]*i[_],d-=r[m]*o[_]}for(let m=s;m<n;m+=1)d+=t[m]*i[f-m&c-1];for(let m=s;m<e;m+=1)d-=r[m]*o[f-m&c-1];i[f]=l[p],o[f]=d,f=f+1&c-1,u[p]=d}return f},Ra=(r,e,t,n)=>{const s=t instanceof Float64Array?t:new Float64Array(t),i=n instanceof Float64Array?n:new Float64Array(n),o=s.length,a=i.length,c=Math.min(o,a);if(s[0]!==1){for(let d=0;d<o;d+=1)i[d]/=s[0];for(let d=1;d<a;d+=1)s[d]/=s[0]}const l=32,u=new Float32Array(l),h=new Float32Array(l),f=e.createBuffer(r.numberOfChannels,r.length,r.sampleRate),p=r.numberOfChannels;for(let d=0;d<p;d+=1){const m=r.getChannelData(d),_=f.getChannelData(d);u.fill(0),h.fill(0),Rr(s,o,i,a,c,u,h,0,l,m,_)}return f},Da=(r,e,t,n,s)=>(i,o)=>{const a=new WeakMap;let c=null;const l=async(u,h)=>{let f=null,p=e(u);const d=ve(p,h);if(h.createIIRFilter===void 0?f=r(h,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(p=h.createIIRFilter(o,i)),a.set(h,f===null?p:f),f!==null){if(c===null){if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");const _=new t(u.context.destination.channelCount,u.context.length,h.sampleRate);c=(async()=>{await n(u,_,_.destination);const y=await s(_);return Ra(y,h,i,o)})()}const m=await c;return f.buffer=m,f.start(0),f}return await n(u,h,p),p};return{render(u,h){const f=a.get(h);return f!==void 0?Promise.resolve(f):l(u,h)}}},Pa=(r,e,t,n,s,i)=>o=>(a,c)=>{const l=r.get(a);if(l===void 0){if(!o&&i(a)){const u=n(a),{outputs:h}=t(a);for(const f of h)if(en(f)){const p=n(f[0]);e(u,p,f[1],f[2])}else{const p=s(f[0]);u.disconnect(p,f[1])}}r.set(a,c)}else r.set(a,l+c)},Va=(r,e)=>t=>{const n=r.get(t);return e(n)||e(t)},Fa=(r,e)=>t=>r.has(t)||e(t),La=(r,e)=>t=>r.has(t)||e(t),Ba=(r,e)=>t=>{const n=r.get(t);return e(n)||e(t)},Ua=r=>e=>r!==null&&e instanceof r,qa=r=>e=>r!==null&&typeof r.AudioNode=="function"&&e instanceof r.AudioNode,Wa=r=>e=>r!==null&&typeof r.AudioParam=="function"&&e instanceof r.AudioParam,Ga=(r,e)=>t=>r(t)||e(t),ja=r=>e=>r!==null&&e instanceof r,Ha=r=>r!==null&&r.isSecureContext,za=(r,e,t,n)=>class extends r{constructor(i,o){const a=t(i),c=e(a,o);if(n(a))throw TypeError();super(i,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},Ya={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},$a=(r,e,t,n)=>class extends r{constructor(i,o){const a=t(i);if(n(a))throw new TypeError;const c={...Ya,...o},l=e(a,c);super(i,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},Za=(r,e,t,n)=>class extends r{constructor(i,o){const a=t(i),c=e(a,o);if(n(a))throw new TypeError;super(i,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},Xa=(r,e,t)=>class extends r{constructor(s,i){const o=t(s),a=e(o,i);super(s,!0,a,null)}},Qa=(r,e,t,n,s,i)=>class extends t{constructor(a,c){super(a),this._nativeContext=a,xn.set(this,a),n(a)&&s.set(a,new Set),this._destination=new r(this,c),this._listener=e(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?i(this,a):null;this._nativeContext.onstatechange=c;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===c?a:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},Zt=r=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const t=r.decodeAudioData(e.buffer,()=>{});return t===void 0?!1:(t.catch(()=>{}),!0)}catch{}return!1},Ja=(r,e)=>(t,n,s)=>{const i=new Set;return t.connect=(o=>(a,c=0,l=0)=>{const u=i.size===0;if(e(a))return o.call(t,a,c,l),r(i,[a,c,l],h=>h[0]===a&&h[1]===c&&h[2]===l,!0),u&&n(),a;o.call(t,a,c),r(i,[a,c],h=>h[0]===a&&h[1]===c,!0),u&&n()})(t.connect),t.disconnect=(o=>(a,c,l)=>{const u=i.size>0;if(a===void 0)o.apply(t),i.clear();else if(typeof a=="number"){o.call(t,a);for(const f of i)f[1]===a&&i.delete(f)}else{e(a)?o.call(t,a,c,l):o.call(t,a,c);for(const f of i)f[0]===a&&(c===void 0||f[1]===c)&&(l===void 0||f[2]===l)&&i.delete(f)}const h=i.size===0;u&&h&&s()})(t.disconnect),t},se=(r,e,t)=>{const n=e[t];n!==void 0&&n!==r[t]&&(r[t]=n)},pe=(r,e)=>{se(r,e,"channelCount"),se(r,e,"channelCountMode"),se(r,e,"channelInterpretation")},cr=r=>typeof r.getFloatTimeDomainData=="function",Ka=r=>{r.getFloatTimeDomainData=e=>{const t=new Uint8Array(e.length);r.getByteTimeDomainData(t);const n=Math.max(t.length,r.fftSize);for(let s=0;s<n;s+=1)e[s]=(t[s]-128)*.0078125;return e}},ec=(r,e)=>(t,n)=>{const s=t.createAnalyser();if(pe(s,n),!(n.maxDecibels>n.minDecibels))throw e();return se(s,n,"fftSize"),se(s,n,"maxDecibels"),se(s,n,"minDecibels"),se(s,n,"smoothingTimeConstant"),r(cr,()=>cr(s))||Ka(s),s},tc=r=>r===null?null:r.hasOwnProperty("AudioBuffer")?r.AudioBuffer:null,ae=(r,e,t)=>{const n=e[t];n!==void 0&&n!==r[t].value&&(r[t].value=n)},nc=r=>{r.start=(e=>{let t=!1;return(n=0,s=0,i)=>{if(t)throw me();e.call(r,n,s,i),t=!0}})(r.start)},_s=r=>{r.start=(e=>(t=0,n=0,s)=>{if(typeof s=="number"&&s<0||n<0||t<0)throw new RangeError("The parameters can't be negative.");e.call(r,t,n,s)})(r.start)},gs=r=>{r.stop=(e=>(t=0)=>{if(t<0)throw new RangeError("The parameter can't be negative.");e.call(r,t)})(r.stop)},sc=(r,e,t,n,s,i,o,a,c,l,u)=>(h,f)=>{const p=h.createBufferSource();return pe(p,f),ae(p,f,"playbackRate"),se(p,f,"buffer"),se(p,f,"loop"),se(p,f,"loopEnd"),se(p,f,"loopStart"),e(t,()=>t(h))||nc(p),e(n,()=>n(h))||c(p),e(s,()=>s(h))||l(p,h),e(i,()=>i(h))||_s(p),e(o,()=>o(h))||u(p,h),e(a,()=>a(h))||gs(p),r(h,p),p},rc=r=>r===null?null:r.hasOwnProperty("AudioContext")?r.AudioContext:r.hasOwnProperty("webkitAudioContext")?r.webkitAudioContext:null,ic=(r,e)=>(t,n,s)=>{const i=t.destination;if(i.channelCount!==n)try{i.channelCount=n}catch{}s&&i.channelCountMode!=="explicit"&&(i.channelCountMode="explicit"),i.maxChannelCount===0&&Object.defineProperty(i,"maxChannelCount",{value:n});const o=r(t,{channelCount:n,channelCountMode:i.channelCountMode,channelInterpretation:i.channelInterpretation,gain:1});return e(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{i.channelCount=c}catch(l){if(c>i.maxChannelCount)throw l}}),e(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),i.channelCountMode=c}),e(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),i.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>i.maxChannelCount}),o.connect(i),o},oc=r=>r===null?null:r.hasOwnProperty("AudioWorkletNode")?r.AudioWorkletNode:null,ac=r=>{const{port1:e}=new MessageChannel;try{e.postMessage(r)}finally{e.close()}},cc=(r,e,t,n,s)=>(i,o,a,c,l,u)=>{if(a!==null)try{const h=new a(i,c,u),f=new Map;let p=null;if(Object.defineProperties(h,{channelCount:{get:()=>u.channelCount,set:()=>{throw r()}},channelCountMode:{get:()=>"explicit",set:()=>{throw r()}},onprocessorerror:{get:()=>p,set:d=>{typeof p=="function"&&h.removeEventListener("processorerror",p),p=typeof d=="function"?d:null,typeof p=="function"&&h.addEventListener("processorerror",p)}}}),h.addEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const _=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(_!==null){const y=f.get(m[1]);y!==void 0?m[1]=y:(m[1]=S=>{S.type==="error"?(Object.defineProperties(S,{type:{value:"processorerror"}}),_(S)):_(new ErrorEvent(m[0],{...S}))},f.set(_,m[1]))}}return d.call(h,"error",m[1],m[2]),d.call(h,...m)})(h.addEventListener),h.removeEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const _=f.get(m[1]);_!==void 0&&(f.delete(m[1]),m[1]=_)}return d.call(h,"error",m[1],m[2]),d.call(h,m[0],m[1],m[2])})(h.removeEventListener),u.numberOfOutputs!==0){const d=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return h.connect(d).connect(i.destination),s(h,()=>d.disconnect(),()=>d.connect(i.destination))}return h}catch(h){throw h.code===11?n():h}if(l===void 0)throw n();return ac(u),e(i,o,l,u)},Dr=(r,e)=>r===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(r*e))))),lc=r=>new Promise((e,t)=>{const{port1:n,port2:s}=new MessageChannel;n.onmessage=({data:i})=>{n.close(),s.close(),e(i)},n.onmessageerror=({data:i})=>{n.close(),s.close(),t(i)},s.postMessage(r)}),uc=async(r,e)=>{const t=await lc(e);return new r(t)},hc=(r,e,t,n)=>{let s=ss.get(r);s===void 0&&(s=new WeakMap,ss.set(r,s));const i=uc(t,n);return s.set(e,i),i},dc=(r,e,t,n,s,i,o,a,c,l,u,h,f)=>(p,d,m,_)=>{if(_.numberOfInputs===0&&_.numberOfOutputs===0)throw c();const y=Array.isArray(_.outputChannelCount)?_.outputChannelCount:Array.from(_.outputChannelCount);if(y.some(k=>k<1))throw c();if(y.length!==_.numberOfOutputs)throw e();if(_.channelCountMode!=="explicit")throw c();const S=_.channelCount*_.numberOfInputs,E=y.reduce((k,U)=>k+U,0),C=m.parameterDescriptors===void 0?0:m.parameterDescriptors.length;if(S+C>6||E>6)throw c();const g=new MessageChannel,b=[],w=[];for(let k=0;k<_.numberOfInputs;k+=1)b.push(o(p,{channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation,gain:1})),w.push(s(p,{channelCount:_.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:_.channelCount}));const v=[];if(m.parameterDescriptors!==void 0)for(const{defaultValue:k,maxValue:U,minValue:fe,name:re}of m.parameterDescriptors){const Z=i(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:_.parameterData[re]!==void 0?_.parameterData[re]:k===void 0?0:k});Object.defineProperties(Z.offset,{defaultValue:{get:()=>k===void 0?0:k},maxValue:{get:()=>U===void 0?we:U},minValue:{get:()=>fe===void 0?Me:fe}}),v.push(Z)}const I=n(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,S+C)}),M=Dr(d,p.sampleRate),A=a(p,M,S+C,Math.max(1,E)),N=s(p,{channelCount:Math.max(1,E),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,E)}),D=[];for(let k=0;k<_.numberOfOutputs;k+=1)D.push(n(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:y[k]}));for(let k=0;k<_.numberOfInputs;k+=1){b[k].connect(w[k]);for(let U=0;U<_.channelCount;U+=1)w[k].connect(I,U,k*_.channelCount+U)}const R=new Or(m.parameterDescriptors===void 0?[]:m.parameterDescriptors.map(({name:k},U)=>{const fe=v[U];return fe.connect(I,0,S+U),fe.start(0),[k,fe.offset]}));I.connect(A);let L=_.channelInterpretation,P=null;const V=_.numberOfOutputs===0?[A]:D,H={get bufferSize(){return M},get channelCount(){return _.channelCount},set channelCount(k){throw t()},get channelCountMode(){return _.channelCountMode},set channelCountMode(k){throw t()},get channelInterpretation(){return L},set channelInterpretation(k){for(const U of b)U.channelInterpretation=k;L=k},get context(){return A.context},get inputs(){return b},get numberOfInputs(){return _.numberOfInputs},get numberOfOutputs(){return _.numberOfOutputs},get onprocessorerror(){return P},set onprocessorerror(k){typeof P=="function"&&H.removeEventListener("processorerror",P),P=typeof k=="function"?k:null,typeof P=="function"&&H.addEventListener("processorerror",P)},get parameters(){return R},get port(){return g.port2},addEventListener(...k){return A.addEventListener(k[0],k[1],k[2])},connect:r.bind(null,V),disconnect:l.bind(null,V),dispatchEvent(...k){return A.dispatchEvent(k[0])},removeEventListener(...k){return A.removeEventListener(k[0],k[1],k[2])}},B=new Map;g.port1.addEventListener=(k=>(...U)=>{if(U[0]==="message"){const fe=typeof U[1]=="function"?U[1]:typeof U[1]=="object"&&U[1]!==null&&typeof U[1].handleEvent=="function"?U[1].handleEvent:null;if(fe!==null){const re=B.get(U[1]);re!==void 0?U[1]=re:(U[1]=Z=>{u(p.currentTime,p.sampleRate,()=>fe(Z))},B.set(fe,U[1]))}}return k.call(g.port1,U[0],U[1],U[2])})(g.port1.addEventListener),g.port1.removeEventListener=(k=>(...U)=>{if(U[0]==="message"){const fe=B.get(U[1]);fe!==void 0&&(B.delete(U[1]),U[1]=fe)}return k.call(g.port1,U[0],U[1],U[2])})(g.port1.removeEventListener);let G=null;Object.defineProperty(g.port1,"onmessage",{get:()=>G,set:k=>{typeof G=="function"&&g.port1.removeEventListener("message",G),G=typeof k=="function"?k:null,typeof G=="function"&&(g.port1.addEventListener("message",G),g.port1.start())}}),m.prototype.port=g.port1;let W=null;hc(p,H,m,_).then(k=>W=k);const Ce=Cn(_.numberOfInputs,_.channelCount),Ae=Cn(_.numberOfOutputs,y),Y=m.parameterDescriptors===void 0?[]:m.parameterDescriptors.reduce((k,{name:U})=>({...k,[U]:new Float32Array(128)}),{});let te=!0;const be=()=>{_.numberOfOutputs>0&&A.disconnect(N);for(let k=0,U=0;k<_.numberOfOutputs;k+=1){const fe=D[k];for(let re=0;re<y[k];re+=1)N.disconnect(fe,U+re,re);U+=y[k]}},F=new Map;A.onaudioprocess=({inputBuffer:k,outputBuffer:U})=>{if(W!==null){const fe=h(H);for(let re=0;re<M;re+=128){for(let Z=0;Z<_.numberOfInputs;Z+=1)for(let oe=0;oe<_.channelCount;oe+=1)Nn(k,Ce[Z],oe,oe,re);m.parameterDescriptors!==void 0&&m.parameterDescriptors.forEach(({name:Z},oe)=>{Nn(k,Y,Z,S+oe,re)});for(let Z=0;Z<_.numberOfInputs;Z+=1)for(let oe=0;oe<y[Z];oe+=1)Ae[Z][oe].byteLength===0&&(Ae[Z][oe]=new Float32Array(128));try{const Z=Ce.map((Re,et)=>{if(fe[et].size>0)return F.set(et,M/128),Re;const Zn=F.get(et);return Zn===void 0?[]:(Re.every(Ci=>Ci.every(Ai=>Ai===0))&&(Zn===1?F.delete(et):F.set(et,Zn-1)),Re)});te=u(p.currentTime+re/p.sampleRate,p.sampleRate,()=>W.process(Z,Ae,Y));for(let Re=0,et=0;Re<_.numberOfOutputs;Re+=1){for(let Ht=0;Ht<y[Re];Ht+=1)kr(U,Ae[Re],Ht,et+Ht,re);et+=y[Re]}}catch(Z){te=!1,H.dispatchEvent(new ErrorEvent("processorerror",{colno:Z.colno,filename:Z.filename,lineno:Z.lineno,message:Z.message}))}if(!te){for(let Z=0;Z<_.numberOfInputs;Z+=1){b[Z].disconnect(w[Z]);for(let oe=0;oe<_.channelCount;oe+=1)w[re].disconnect(I,oe,Z*_.channelCount+oe)}if(m.parameterDescriptors!==void 0){const Z=m.parameterDescriptors.length;for(let oe=0;oe<Z;oe+=1){const Re=v[oe];Re.disconnect(I,0,S+oe),Re.stop()}}I.disconnect(A),A.onaudioprocess=null,ht?be():Et();break}}}};let ht=!1;const dt=o(p,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),St=()=>A.connect(dt).connect(p.destination),Et=()=>{A.disconnect(dt),dt.disconnect()},Ei=()=>{if(te){Et(),_.numberOfOutputs>0&&A.connect(N);for(let k=0,U=0;k<_.numberOfOutputs;k+=1){const fe=D[k];for(let re=0;re<y[k];re+=1)N.connect(fe,U+re,re);U+=y[k]}}ht=!0},Ni=()=>{te&&(St(),be()),ht=!1};return St(),f(H,Ei,Ni)},Pr=(r,e)=>{const t=r.createBiquadFilter();return pe(t,e),ae(t,e,"Q"),ae(t,e,"detune"),ae(t,e,"frequency"),ae(t,e,"gain"),se(t,e,"type"),t},fc=(r,e)=>(t,n)=>{const s=t.createChannelMerger(n.numberOfInputs);return r!==null&&r.name==="webkitAudioContext"&&e(t,s),pe(s,n),s},pc=r=>{const e=r.numberOfOutputs;Object.defineProperty(r,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw me()}}),Object.defineProperty(r,"channelCountMode",{get:()=>"explicit",set:t=>{if(t!=="explicit")throw me()}}),Object.defineProperty(r,"channelInterpretation",{get:()=>"discrete",set:t=>{if(t!=="discrete")throw me()}})},tn=(r,e)=>{const t=r.createChannelSplitter(e.numberOfOutputs);return pe(t,e),pc(t),t},mc=(r,e,t,n,s)=>(i,o)=>{if(i.createConstantSource===void 0)return t(i,o);const a=i.createConstantSource();return pe(a,o),ae(a,o,"offset"),e(n,()=>n(i))||_s(a),e(s,()=>s(i))||gs(a),r(i,a),a},Bt=(r,e)=>(r.connect=e.connect.bind(e),r.disconnect=e.disconnect.bind(e),r),_c=(r,e,t,n)=>(s,{offset:i,...o})=>{const a=s.createBuffer(1,2,44100),c=e(s,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),l=t(s,{...o,gain:i}),u=a.getChannelData(0);u[0]=1,u[1]=1,c.buffer=a,c.loop=!0;const h={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(d){l.channelCount=d},get channelCountMode(){return l.channelCountMode},set channelCountMode(d){l.channelCountMode=d},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(d){l.channelInterpretation=d},get context(){return l.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get offset(){return l.gain},get onended(){return c.onended},set onended(d){c.onended=d},addEventListener(...d){return c.addEventListener(d[0],d[1],d[2])},dispatchEvent(...d){return c.dispatchEvent(d[0])},removeEventListener(...d){return c.removeEventListener(d[0],d[1],d[2])},start(d=0){c.start.call(c,d)},stop(d=0){c.stop.call(c,d)}},f=()=>c.connect(l),p=()=>c.disconnect(l);return r(s,c),n(Bt(h,l),f,p)},gc=(r,e)=>(t,n)=>{const s=t.createConvolver();if(pe(s,n),n.disableNormalization===s.normalize&&(s.normalize=!n.disableNormalization),se(s,n,"buffer"),n.channelCount>2||(e(s,"channelCount",i=>()=>i.call(s),i=>o=>{if(o>2)throw r();return i.call(s,o)}),n.channelCountMode==="max"))throw r();return e(s,"channelCountMode",i=>()=>i.call(s),i=>o=>{if(o==="max")throw r();return i.call(s,o)}),s},Vr=(r,e)=>{const t=r.createDelay(e.maxDelayTime);return pe(t,e),ae(t,e,"delayTime"),t},yc=r=>(e,t)=>{const n=e.createDynamicsCompressor();if(pe(n,t),t.channelCount>2||t.channelCountMode==="max")throw r();return ae(n,t,"attack"),ae(n,t,"knee"),ae(n,t,"ratio"),ae(n,t,"release"),ae(n,t,"threshold"),n},Ne=(r,e)=>{const t=r.createGain();return pe(t,e),ae(t,e,"gain"),t},vc=r=>(e,t,n)=>{if(e.createIIRFilter===void 0)return r(e,t,n);const s=e.createIIRFilter(n.feedforward,n.feedback);return pe(s,n),s};function bc(r,e){const t=e[0]*e[0]+e[1]*e[1];return[(r[0]*e[0]+r[1]*e[1])/t,(r[1]*e[0]-r[0]*e[1])/t]}function wc(r,e){return[r[0]*e[0]-r[1]*e[1],r[0]*e[1]+r[1]*e[0]]}function lr(r,e){let t=[0,0];for(let n=r.length-1;n>=0;n-=1)t=wc(t,e),t[0]+=r[n];return t}const Tc=(r,e,t,n)=>(s,i,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:l,feedforward:u})=>{const h=Dr(i,s.sampleRate),f=l instanceof Float64Array?l:new Float64Array(l),p=u instanceof Float64Array?u:new Float64Array(u),d=f.length,m=p.length,_=Math.min(d,m);if(d===0||d>20)throw n();if(f[0]===0)throw e();if(m===0||m>20)throw n();if(p[0]===0)throw e();if(f[0]!==1){for(let v=0;v<m;v+=1)p[v]/=f[0];for(let v=1;v<d;v+=1)f[v]/=f[0]}const y=t(s,h,o,o);y.channelCount=o,y.channelCountMode=a,y.channelInterpretation=c;const S=32,E=[],C=[],g=[];for(let v=0;v<o;v+=1){E.push(0);const I=new Float32Array(S),M=new Float32Array(S);I.fill(0),M.fill(0),C.push(I),g.push(M)}y.onaudioprocess=v=>{const I=v.inputBuffer,M=v.outputBuffer,A=I.numberOfChannels;for(let N=0;N<A;N+=1){const D=I.getChannelData(N),R=M.getChannelData(N);E[N]=Rr(f,d,p,m,_,C[N],g[N],E[N],S,D,R)}};const b=s.sampleRate/2;return Bt({get bufferSize(){return h},get channelCount(){return y.channelCount},set channelCount(v){y.channelCount=v},get channelCountMode(){return y.channelCountMode},set channelCountMode(v){y.channelCountMode=v},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(v){y.channelInterpretation=v},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},addEventListener(...v){return y.addEventListener(v[0],v[1],v[2])},dispatchEvent(...v){return y.dispatchEvent(v[0])},getFrequencyResponse(v,I,M){if(v.length!==I.length||I.length!==M.length)throw r();const A=v.length;for(let N=0;N<A;N+=1){const D=-Math.PI*(v[N]/b),R=[Math.cos(D),Math.sin(D)],L=lr(p,R),P=lr(f,R),V=bc(L,P);I[N]=Math.sqrt(V[0]*V[0]+V[1]*V[1]),M[N]=Math.atan2(V[1],V[0])}},removeEventListener(...v){return y.removeEventListener(v[0],v[1],v[2])}},y)},Sc=(r,e)=>r.createMediaElementSource(e.mediaElement),Ec=(r,e)=>{const t=r.createMediaStreamDestination();return pe(t,e),t.numberOfOutputs===1&&Object.defineProperty(t,"numberOfOutputs",{get:()=>0}),t},Nc=(r,{mediaStream:e})=>{const t=e.getAudioTracks();t.sort((i,o)=>i.id<o.id?-1:i.id>o.id?1:0);const n=t.slice(0,1),s=r.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(s,"mediaStream",{value:e}),s},Cc=(r,e)=>(t,{mediaStreamTrack:n})=>{if(typeof t.createMediaStreamTrackSource=="function")return t.createMediaStreamTrackSource(n);const s=new MediaStream([n]),i=t.createMediaStreamSource(s);if(n.kind!=="audio")throw r();if(e(t))throw new TypeError;return i},Ac=r=>r===null?null:r.hasOwnProperty("OfflineAudioContext")?r.OfflineAudioContext:r.hasOwnProperty("webkitOfflineAudioContext")?r.webkitOfflineAudioContext:null,Mc=(r,e,t,n,s,i)=>(o,a)=>{const c=o.createOscillator();return pe(c,a),ae(c,a,"detune"),ae(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):se(c,a,"type"),e(t,()=>t(o))||_s(c),e(n,()=>n(o))||i(c,o),e(s,()=>s(o))||gs(c),r(o,c),c},Ic=r=>(e,t)=>{const n=e.createPanner();return n.orientationX===void 0?r(e,t):(pe(n,t),ae(n,t,"orientationX"),ae(n,t,"orientationY"),ae(n,t,"orientationZ"),ae(n,t,"positionX"),ae(n,t,"positionY"),ae(n,t,"positionZ"),se(n,t,"coneInnerAngle"),se(n,t,"coneOuterAngle"),se(n,t,"coneOuterGain"),se(n,t,"distanceModel"),se(n,t,"maxDistance"),se(n,t,"panningModel"),se(n,t,"refDistance"),se(n,t,"rolloffFactor"),n)},xc=(r,e,t,n,s,i,o,a,c,l)=>(u,{coneInnerAngle:h,coneOuterAngle:f,coneOuterGain:p,distanceModel:d,maxDistance:m,orientationX:_,orientationY:y,orientationZ:S,panningModel:E,positionX:C,positionY:g,positionZ:b,refDistance:w,rolloffFactor:v,...I})=>{const M=u.createPanner();if(I.channelCount>2||I.channelCountMode==="max")throw o();pe(M,I);const A={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},N=t(u,{...A,channelInterpretation:"speakers",numberOfInputs:6}),D=n(u,{...I,gain:1}),R=n(u,{...A,gain:1}),L=n(u,{...A,gain:0}),P=n(u,{...A,gain:0}),V=n(u,{...A,gain:0}),H=n(u,{...A,gain:0}),B=n(u,{...A,gain:0}),G=s(u,256,6,1),W=i(u,{...A,curve:new Float32Array([1,1]),oversample:"none"});let X=[_,y,S],Ce=[C,g,b];const Ae=new Float32Array(1);G.onaudioprocess=({inputBuffer:F})=>{const ht=[c(F,Ae,0),c(F,Ae,1),c(F,Ae,2)];ht.some((St,Et)=>St!==X[Et])&&(M.setOrientation(...ht),X=ht);const dt=[c(F,Ae,3),c(F,Ae,4),c(F,Ae,5)];dt.some((St,Et)=>St!==Ce[Et])&&(M.setPosition(...dt),Ce=dt)},Object.defineProperty(L.gain,"defaultValue",{get:()=>0}),Object.defineProperty(P.gain,"defaultValue",{get:()=>0}),Object.defineProperty(V.gain,"defaultValue",{get:()=>0}),Object.defineProperty(H.gain,"defaultValue",{get:()=>0}),Object.defineProperty(B.gain,"defaultValue",{get:()=>0});const Y={get bufferSize(){},get channelCount(){return M.channelCount},set channelCount(F){if(F>2)throw o();D.channelCount=F,M.channelCount=F},get channelCountMode(){return M.channelCountMode},set channelCountMode(F){if(F==="max")throw o();D.channelCountMode=F,M.channelCountMode=F},get channelInterpretation(){return M.channelInterpretation},set channelInterpretation(F){D.channelInterpretation=F,M.channelInterpretation=F},get coneInnerAngle(){return M.coneInnerAngle},set coneInnerAngle(F){M.coneInnerAngle=F},get coneOuterAngle(){return M.coneOuterAngle},set coneOuterAngle(F){M.coneOuterAngle=F},get coneOuterGain(){return M.coneOuterGain},set coneOuterGain(F){if(F<0||F>1)throw e();M.coneOuterGain=F},get context(){return M.context},get distanceModel(){return M.distanceModel},set distanceModel(F){M.distanceModel=F},get inputs(){return[D]},get maxDistance(){return M.maxDistance},set maxDistance(F){if(F<0)throw new RangeError;M.maxDistance=F},get numberOfInputs(){return M.numberOfInputs},get numberOfOutputs(){return M.numberOfOutputs},get orientationX(){return R.gain},get orientationY(){return L.gain},get orientationZ(){return P.gain},get panningModel(){return M.panningModel},set panningModel(F){M.panningModel=F},get positionX(){return V.gain},get positionY(){return H.gain},get positionZ(){return B.gain},get refDistance(){return M.refDistance},set refDistance(F){if(F<0)throw new RangeError;M.refDistance=F},get rolloffFactor(){return M.rolloffFactor},set rolloffFactor(F){if(F<0)throw new RangeError;M.rolloffFactor=F},addEventListener(...F){return D.addEventListener(F[0],F[1],F[2])},dispatchEvent(...F){return D.dispatchEvent(F[0])},removeEventListener(...F){return D.removeEventListener(F[0],F[1],F[2])}};h!==Y.coneInnerAngle&&(Y.coneInnerAngle=h),f!==Y.coneOuterAngle&&(Y.coneOuterAngle=f),p!==Y.coneOuterGain&&(Y.coneOuterGain=p),d!==Y.distanceModel&&(Y.distanceModel=d),m!==Y.maxDistance&&(Y.maxDistance=m),_!==Y.orientationX.value&&(Y.orientationX.value=_),y!==Y.orientationY.value&&(Y.orientationY.value=y),S!==Y.orientationZ.value&&(Y.orientationZ.value=S),E!==Y.panningModel&&(Y.panningModel=E),C!==Y.positionX.value&&(Y.positionX.value=C),g!==Y.positionY.value&&(Y.positionY.value=g),b!==Y.positionZ.value&&(Y.positionZ.value=b),w!==Y.refDistance&&(Y.refDistance=w),v!==Y.rolloffFactor&&(Y.rolloffFactor=v),(X[0]!==1||X[1]!==0||X[2]!==0)&&M.setOrientation(...X),(Ce[0]!==0||Ce[1]!==0||Ce[2]!==0)&&M.setPosition(...Ce);const te=()=>{D.connect(M),r(D,W,0,0),W.connect(R).connect(N,0,0),W.connect(L).connect(N,0,1),W.connect(P).connect(N,0,2),W.connect(V).connect(N,0,3),W.connect(H).connect(N,0,4),W.connect(B).connect(N,0,5),N.connect(G).connect(u.destination)},be=()=>{D.disconnect(M),a(D,W,0,0),W.disconnect(R),R.disconnect(N),W.disconnect(L),L.disconnect(N),W.disconnect(P),P.disconnect(N),W.disconnect(V),V.disconnect(N),W.disconnect(H),H.disconnect(N),W.disconnect(B),B.disconnect(N),N.disconnect(G),G.disconnect(u.destination)};return l(Bt(Y,M),te,be)},Oc=r=>(e,{disableNormalization:t,imag:n,real:s})=>{const i=n instanceof Float32Array?n:new Float32Array(n),o=s instanceof Float32Array?s:new Float32Array(s),a=e.createPeriodicWave(o,i,{disableNormalization:t});if(Array.from(n).length<2)throw r();return a},nn=(r,e,t,n)=>r.createScriptProcessor(e,t,n),kc=(r,e)=>(t,n)=>{const s=n.channelCountMode;if(s==="clamped-max")throw e();if(t.createStereoPanner===void 0)return r(t,n);const i=t.createStereoPanner();return pe(i,n),ae(i,n,"pan"),Object.defineProperty(i,"channelCountMode",{get:()=>s,set:o=>{if(o!==s)throw e()}}),i},Rc=(r,e,t,n,s,i)=>{const a=new Float32Array([1,1]),c=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},u={...l,oversample:"none"},h=(d,m,_,y)=>{const S=new Float32Array(16385),E=new Float32Array(16385);for(let I=0;I<16385;I+=1){const M=I/16384*c;S[I]=Math.cos(M),E[I]=Math.sin(M)}const C=t(d,{...l,gain:0}),g=n(d,{...u,curve:S}),b=n(d,{...u,curve:a}),w=t(d,{...l,gain:0}),v=n(d,{...u,curve:E});return{connectGraph(){m.connect(C),m.connect(b.inputs===void 0?b:b.inputs[0]),m.connect(w),b.connect(_),_.connect(g.inputs===void 0?g:g.inputs[0]),_.connect(v.inputs===void 0?v:v.inputs[0]),g.connect(C.gain),v.connect(w.gain),C.connect(y,0,0),w.connect(y,0,1)},disconnectGraph(){m.disconnect(C),m.disconnect(b.inputs===void 0?b:b.inputs[0]),m.disconnect(w),b.disconnect(_),_.disconnect(g.inputs===void 0?g:g.inputs[0]),_.disconnect(v.inputs===void 0?v:v.inputs[0]),g.disconnect(C.gain),v.disconnect(w.gain),C.disconnect(y,0,0),w.disconnect(y,0,1)}}},f=(d,m,_,y)=>{const S=new Float32Array(16385),E=new Float32Array(16385),C=new Float32Array(16385),g=new Float32Array(16385),b=Math.floor(16385/2);for(let V=0;V<16385;V+=1)if(V>b){const H=(V-b)/(16384-b)*c;S[V]=Math.cos(H),E[V]=Math.sin(H),C[V]=0,g[V]=1}else{const H=V/(16384-b)*c;S[V]=1,E[V]=0,C[V]=Math.cos(H),g[V]=Math.sin(H)}const w=e(d,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),v=t(d,{...l,gain:0}),I=n(d,{...u,curve:S}),M=t(d,{...l,gain:0}),A=n(d,{...u,curve:E}),N=n(d,{...u,curve:a}),D=t(d,{...l,gain:0}),R=n(d,{...u,curve:C}),L=t(d,{...l,gain:0}),P=n(d,{...u,curve:g});return{connectGraph(){m.connect(w),m.connect(N.inputs===void 0?N:N.inputs[0]),w.connect(v,0),w.connect(M,0),w.connect(D,1),w.connect(L,1),N.connect(_),_.connect(I.inputs===void 0?I:I.inputs[0]),_.connect(A.inputs===void 0?A:A.inputs[0]),_.connect(R.inputs===void 0?R:R.inputs[0]),_.connect(P.inputs===void 0?P:P.inputs[0]),I.connect(v.gain),A.connect(M.gain),R.connect(D.gain),P.connect(L.gain),v.connect(y,0,0),D.connect(y,0,0),M.connect(y,0,1),L.connect(y,0,1)},disconnectGraph(){m.disconnect(w),m.disconnect(N.inputs===void 0?N:N.inputs[0]),w.disconnect(v,0),w.disconnect(M,0),w.disconnect(D,1),w.disconnect(L,1),N.disconnect(_),_.disconnect(I.inputs===void 0?I:I.inputs[0]),_.disconnect(A.inputs===void 0?A:A.inputs[0]),_.disconnect(R.inputs===void 0?R:R.inputs[0]),_.disconnect(P.inputs===void 0?P:P.inputs[0]),I.disconnect(v.gain),A.disconnect(M.gain),R.disconnect(D.gain),P.disconnect(L.gain),v.disconnect(y,0,0),D.disconnect(y,0,0),M.disconnect(y,0,1),L.disconnect(y,0,1)}}},p=(d,m,_,y,S)=>{if(m===1)return h(d,_,y,S);if(m===2)return f(d,_,y,S);throw s()};return(d,{channelCount:m,channelCountMode:_,pan:y,...S})=>{if(_==="max")throw s();const E=r(d,{...S,channelCount:1,channelCountMode:_,numberOfInputs:2}),C=t(d,{...S,channelCount:m,channelCountMode:_,gain:1}),g=t(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:y});let{connectGraph:b,disconnectGraph:w}=p(d,m,C,g,E);Object.defineProperty(g.gain,"defaultValue",{get:()=>0}),Object.defineProperty(g.gain,"maxValue",{get:()=>1}),Object.defineProperty(g.gain,"minValue",{get:()=>-1});const v={get bufferSize(){},get channelCount(){return C.channelCount},set channelCount(N){C.channelCount!==N&&(I&&w(),{connectGraph:b,disconnectGraph:w}=p(d,N,C,g,E),I&&b()),C.channelCount=N},get channelCountMode(){return C.channelCountMode},set channelCountMode(N){if(N==="clamped-max"||N==="max")throw s();C.channelCountMode=N},get channelInterpretation(){return C.channelInterpretation},set channelInterpretation(N){C.channelInterpretation=N},get context(){return C.context},get inputs(){return[C]},get numberOfInputs(){return C.numberOfInputs},get numberOfOutputs(){return C.numberOfOutputs},get pan(){return g.gain},addEventListener(...N){return C.addEventListener(N[0],N[1],N[2])},dispatchEvent(...N){return C.dispatchEvent(N[0])},removeEventListener(...N){return C.removeEventListener(N[0],N[1],N[2])}};let I=!1;const M=()=>{b(),I=!0},A=()=>{w(),I=!1};return i(Bt(v,E),M,A)}},Dc=(r,e,t,n,s,i,o)=>(a,c)=>{const l=a.createWaveShaper();if(i!==null&&i.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return t(a,c);pe(l,c);const u=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(u!==null&&u.length<2)throw e();se(l,{curve:u},"curve"),se(l,c,"oversample");let h=null,f=!1;return o(l,"curve",m=>()=>m.call(l),m=>_=>(m.call(l,_),f&&(n(_)&&h===null?h=r(a,l):!n(_)&&h!==null&&(h(),h=null)),_)),s(l,()=>{f=!0,n(l.curve)&&(h=r(a,l))},()=>{f=!1,h!==null&&(h(),h=null)})},Pc=(r,e,t,n,s)=>(i,{curve:o,oversample:a,...c})=>{const l=i.createWaveShaper(),u=i.createWaveShaper();pe(l,c),pe(u,c);const h=t(i,{...c,gain:1}),f=t(i,{...c,gain:-1}),p=t(i,{...c,gain:1}),d=t(i,{...c,gain:-1});let m=null,_=!1,y=null;const S={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(g){h.channelCount=g,f.channelCount=g,l.channelCount=g,p.channelCount=g,u.channelCount=g,d.channelCount=g},get channelCountMode(){return l.channelCountMode},set channelCountMode(g){h.channelCountMode=g,f.channelCountMode=g,l.channelCountMode=g,p.channelCountMode=g,u.channelCountMode=g,d.channelCountMode=g},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(g){h.channelInterpretation=g,f.channelInterpretation=g,l.channelInterpretation=g,p.channelInterpretation=g,u.channelInterpretation=g,d.channelInterpretation=g},get context(){return l.context},get curve(){return y},set curve(g){if(g!==null&&g.length<2)throw e();if(g===null)l.curve=g,u.curve=g;else{const b=g.length,w=new Float32Array(b+2-b%2),v=new Float32Array(b+2-b%2);w[0]=g[0],v[0]=-g[b-1];const I=Math.ceil((b+1)/2),M=(b+1)/2-1;for(let A=1;A<I;A+=1){const N=A/I*M,D=Math.floor(N),R=Math.ceil(N);w[A]=D===R?g[D]:(1-(N-D))*g[D]+(1-(R-N))*g[R],v[A]=D===R?-g[b-1-D]:-((1-(N-D))*g[b-1-D])-(1-(R-N))*g[b-1-R]}w[I]=b%2===1?g[I-1]:(g[I-2]+g[I-1])/2,l.curve=w,u.curve=v}y=g,_&&(n(y)&&m===null?m=r(i,h):m!==null&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get oversample(){return l.oversample},set oversample(g){l.oversample=g,u.oversample=g},addEventListener(...g){return h.addEventListener(g[0],g[1],g[2])},dispatchEvent(...g){return h.dispatchEvent(g[0])},removeEventListener(...g){return h.removeEventListener(g[0],g[1],g[2])}};o!==null&&(S.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==S.oversample&&(S.oversample=a);const E=()=>{h.connect(l).connect(p),h.connect(f).connect(u).connect(d).connect(p),_=!0,n(y)&&(m=r(i,h))},C=()=>{h.disconnect(l),l.disconnect(p),h.disconnect(f),f.disconnect(u),u.disconnect(d),d.disconnect(p),_=!1,m!==null&&(m(),m=null)};return s(Bt(S,p),E,C)},Se=()=>new DOMException("","NotSupportedError"),Vc={numberOfChannels:1},Fc=(r,e,t,n,s)=>class extends r{constructor(o,a,c){let l;if(typeof o=="number"&&a!==void 0&&c!==void 0)l={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")l=o;else throw new Error("The given parameters are not valid.");const{length:u,numberOfChannels:h,sampleRate:f}={...Vc,...l},p=n(h,u,f);e(Zt,()=>Zt(p))||p.addEventListener("statechange",(()=>{let d=0;const m=_=>{this._state==="running"&&(d>0?(p.removeEventListener("statechange",m),_.stopImmediatePropagation(),this._waitForThePromiseToSettle(_)):d+=1)};return m})()),super(p,h),this._length=u,this._nativeOfflineAudioContext=p,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(t()):(this._state="running",s(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,Ar(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},Lc={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Bc=(r,e,t,n,s,i,o)=>class extends r{constructor(c,l){const u=s(c),h={...Lc,...l},f=t(u,h),p=i(u),d=p?n():null,m=c.sampleRate/2;super(c,!1,f,d),this._detune=e(this,p,f.detune,153600,-153600),this._frequency=e(this,p,f.frequency,m,-m),this._nativeOscillatorNode=f,this._onended=null,this._oscillatorNodeRenderer=d,this._oscillatorNodeRenderer!==null&&h.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=h.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=l;const u=this._nativeOscillatorNode.onended;this._onended=u!==null&&u===l?c:u}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){kt(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),Ze(this)&&Jt(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},Uc=(r,e,t,n,s)=>()=>{const i=new WeakMap;let o=null,a=null,c=null;const l=async(u,h)=>{let f=t(u);const p=ve(f,h);if(!p){const d={channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,detune:f.detune.value,frequency:f.frequency.value,periodicWave:o===null?void 0:o,type:f.type};f=e(h,d),a!==null&&f.start(a),c!==null&&f.stop(c)}return i.set(h,f),p?(await r(h,u.detune,f.detune),await r(h,u.frequency,f.frequency)):(await n(h,u.detune,f.detune),await n(h,u.frequency,f.frequency)),await s(u,h,f),f};return{set periodicWave(u){o=u},set start(u){a=u},set stop(u){c=u},render(u,h){const f=i.get(h);return f!==void 0?Promise.resolve(f):l(u,h)}}},qc={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},Wc=(r,e,t,n,s,i,o)=>class extends r{constructor(c,l){const u=s(c),h={...qc,...l},f=t(u,h),p=i(u),d=p?n():null;super(c,!1,f,d),this._nativePannerNode=f,this._orientationX=e(this,p,f.orientationX,we,Me),this._orientationY=e(this,p,f.orientationY,we,Me),this._orientationZ=e(this,p,f.orientationZ,we,Me),this._positionX=e(this,p,f.positionX,we,Me),this._positionY=e(this,p,f.positionY,we,Me),this._positionZ=e(this,p,f.positionZ,we,Me),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},Gc=(r,e,t,n,s,i,o,a,c,l)=>()=>{const u=new WeakMap;let h=null;const f=async(p,d)=>{let m=null,_=i(p);const y={channelCount:_.channelCount,channelCountMode:_.channelCountMode,channelInterpretation:_.channelInterpretation},S={...y,coneInnerAngle:_.coneInnerAngle,coneOuterAngle:_.coneOuterAngle,coneOuterGain:_.coneOuterGain,distanceModel:_.distanceModel,maxDistance:_.maxDistance,panningModel:_.panningModel,refDistance:_.refDistance,rolloffFactor:_.rolloffFactor},E=ve(_,d);if("bufferSize"in _)m=n(d,{...y,gain:1});else if(!E){const C={...S,orientationX:_.orientationX.value,orientationY:_.orientationY.value,orientationZ:_.orientationZ.value,positionX:_.positionX.value,positionY:_.positionY.value,positionZ:_.positionZ.value};_=s(d,C)}if(u.set(d,m===null?_:m),m!==null){if(h===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const A=new o(6,p.context.length,d.sampleRate),N=e(A,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});N.connect(A.destination),h=(async()=>{const D=await Promise.all([p.orientationX,p.orientationY,p.orientationZ,p.positionX,p.positionY,p.positionZ].map(async(R,L)=>{const P=t(A,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:L===0?1:0});return await a(A,R,P.offset),P}));for(let R=0;R<6;R+=1)D[R].connect(N,0,R),D[R].start(0);return l(A)})()}const C=await h,g=n(d,{...y,gain:1});await c(p,d,g);const b=[];for(let A=0;A<C.numberOfChannels;A+=1)b.push(C.getChannelData(A));let w=[b[0][0],b[1][0],b[2][0]],v=[b[3][0],b[4][0],b[5][0]],I=n(d,{...y,gain:1}),M=s(d,{...S,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:v[0],positionY:v[1],positionZ:v[2]});g.connect(I).connect(M.inputs[0]),M.connect(m);for(let A=128;A<C.length;A+=128){const N=[b[0][A],b[1][A],b[2][A]],D=[b[3][A],b[4][A],b[5][A]];if(N.some((R,L)=>R!==w[L])||D.some((R,L)=>R!==v[L])){w=N,v=D;const R=A/d.sampleRate;I.gain.setValueAtTime(0,R),I=n(d,{...y,gain:0}),M=s(d,{...S,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:v[0],positionY:v[1],positionZ:v[2]}),I.gain.setValueAtTime(1,R),g.connect(I).connect(M.inputs[0]),M.connect(m)}}return m}return E?(await r(d,p.orientationX,_.orientationX),await r(d,p.orientationY,_.orientationY),await r(d,p.orientationZ,_.orientationZ),await r(d,p.positionX,_.positionX),await r(d,p.positionY,_.positionY),await r(d,p.positionZ,_.positionZ)):(await a(d,p.orientationX,_.orientationX),await a(d,p.orientationY,_.orientationY),await a(d,p.orientationZ,_.orientationZ),await a(d,p.positionX,_.positionX),await a(d,p.positionY,_.positionY),await a(d,p.positionZ,_.positionZ)),Lt(_)?await c(p,d,_.inputs[0]):await c(p,d,_),_};return{render(p,d){const m=u.get(d);return m!==void 0?Promise.resolve(m):f(p,d)}}},jc={disableNormalization:!1},Hc=(r,e,t,n)=>class Fr{constructor(i,o){const a=e(i),c=n({...jc,...o}),l=r(a,c);return t.add(l),l}static[Symbol.hasInstance](i){return i!==null&&typeof i=="object"&&Object.getPrototypeOf(i)===Fr.prototype||t.has(i)}},zc=(r,e)=>(t,n,s)=>(r(n).replay(s),e(n,t,s)),Yc=(r,e,t)=>async(n,s,i)=>{const o=r(n);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([l,u])=>{const f=await e(l).render(l,s),p=n.context.destination;!t(l)&&(n!==p||!t(n))&&f.connect(i,u,c)})).reduce((a,c)=>[...a,...c],[]))},$c=(r,e,t)=>async(n,s,i)=>{const o=e(n);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const u=await r(a).render(a,s);t(a)||u.connect(i,c)}))},Zc=(r,e,t,n)=>s=>r(Zt,()=>Zt(s))?Promise.resolve(r(n,n)).then(i=>{if(!i){const o=t(s,512,0,1);s.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>s.currentTime,o.connect(s.destination)}return s.startRendering()}):new Promise(i=>{const o=e(s,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});s.oncomplete=a=>{o.disconnect(),i(a.renderedBuffer)},o.connect(s.destination),s.startRendering()}),Xc=r=>(e,t)=>{r.set(e,t)},Qc=r=>(e,t)=>r.set(e,t),Jc=(r,e,t,n,s,i,o,a)=>(c,l)=>t(c).render(c,l).then(()=>Promise.all(Array.from(n(l)).map(u=>t(u).render(u,l)))).then(()=>s(l)).then(u=>(typeof u.copyFromChannel!="function"?(o(u),fs(u)):e(i,()=>i(u))||a(u),r.add(u),u)),Kc={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},el=(r,e,t,n,s,i)=>class extends r{constructor(a,c){const l=s(a),u={...Kc,...c},h=t(l,u),f=i(l),p=f?n():null;super(a,!1,h,p),this._pan=e(this,f,h.pan)}get pan(){return this._pan}},tl=(r,e,t,n,s)=>()=>{const i=new WeakMap,o=async(a,c)=>{let l=t(a);const u=ve(l,c);if(!u){const h={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=e(c,h)}return i.set(c,l),u?await r(c,a.pan,l.pan):await n(c,a.pan,l.pan),Lt(l)?await s(a,c,l.inputs[0]):await s(a,c,l),l};return{render(a,c){const l=i.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},nl=r=>()=>{if(r===null)return!1;try{new r({length:1,sampleRate:44100})}catch{return!1}return!0},sl=(r,e)=>async()=>{if(r===null)return!0;if(e===null)return!1;const t=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new e(1,128,44100),s=URL.createObjectURL(t);let i=!1,o=!1;try{await n.audioWorklet.addModule(s);const a=new r(n,"a",{numberOfOutputs:0}),c=n.createOscillator();a.port.onmessage=()=>i=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await n.startRendering(),await new Promise(l=>setTimeout(l))}catch{}finally{URL.revokeObjectURL(s)}return i&&!o},rl=(r,e)=>()=>{if(e===null)return Promise.resolve(!1);const t=new e(1,1,44100),n=r(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(s=>{t.oncomplete=()=>{n.disconnect(),s(t.currentTime!==0)},t.startRendering()})},il=()=>new DOMException("","UnknownError"),ol={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},al=(r,e,t,n,s,i,o)=>class extends r{constructor(c,l){const u=s(c),h={...ol,...l},f=t(u,h),d=i(u)?n():null;super(c,!0,f,d),this._isCurveNullified=!1,this._nativeWaveShaperNode=f,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},cl=(r,e,t)=>()=>{const n=new WeakMap,s=async(i,o)=>{let a=e(i);if(!ve(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=r(o,l)}return n.set(o,a),Lt(a)?await t(i,o,a.inputs[0]):await t(i,o,a),a};return{render(i,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(i,o)}}},ll=()=>typeof window>"u"?null:window,ul=(r,e)=>t=>{t.copyFromChannel=(n,s,i=0)=>{const o=r(i),a=r(s);if(a>=t.numberOfChannels)throw e();const c=t.length,l=t.getChannelData(a),u=n.length;for(let h=o<0?-o:0;h+o<c&&h<u;h+=1)n[h]=l[h+o]},t.copyToChannel=(n,s,i=0)=>{const o=r(i),a=r(s);if(a>=t.numberOfChannels)throw e();const c=t.length,l=t.getChannelData(a),u=n.length;for(let h=o<0?-o:0;h+o<c&&h<u;h+=1)l[h+o]=n[h]}},hl=r=>e=>{e.copyFromChannel=(t=>(n,s,i=0)=>{const o=r(i),a=r(s);if(o<e.length)return t.call(e,n,a,o)})(e.copyFromChannel),e.copyToChannel=(t=>(n,s,i=0)=>{const o=r(i),a=r(s);if(o<e.length)return t.call(e,n,a,o)})(e.copyToChannel)},dl=r=>(e,t)=>{const n=t.createBuffer(1,1,44100);e.buffer===null&&(e.buffer=n),r(e,"buffer",s=>()=>{const i=s.call(e);return i===n?null:i},s=>i=>s.call(e,i===null?n:i))},fl=(r,e)=>(t,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw r()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw r()}});const s=t.createBufferSource();e(n,()=>{const a=n.numberOfInputs;for(let c=0;c<a;c+=1)s.connect(n,0,c)},()=>s.disconnect(n))},Lr=(r,e,t)=>r.copyFromChannel===void 0?r.getChannelData(t)[0]:(r.copyFromChannel(e,t),e[0]),Br=r=>{if(r===null)return!1;const e=r.length;return e%2!==0?r[Math.floor(e/2)]!==0:r[e/2-1]+r[e/2]!==0},sn=(r,e,t,n)=>{let s=r;for(;!s.hasOwnProperty(e);)s=Object.getPrototypeOf(s);const{get:i,set:o}=Object.getOwnPropertyDescriptor(s,e);Object.defineProperty(r,e,{get:t(i),set:n(o)})},pl=r=>({...r,outputChannelCount:r.outputChannelCount!==void 0?r.outputChannelCount:r.numberOfInputs===1&&r.numberOfOutputs===1?[r.channelCount]:Array.from({length:r.numberOfOutputs},()=>1)}),ml=r=>({...r,channelCount:r.numberOfOutputs}),_l=r=>{const{imag:e,real:t}=r;return e===void 0?t===void 0?{...r,imag:[0,0],real:[0,0]}:{...r,imag:Array.from(t,()=>0),real:t}:t===void 0?{...r,imag:e,real:Array.from(e,()=>0)}:{...r,imag:e,real:t}},Ur=(r,e,t)=>{try{r.setValueAtTime(e,t)}catch(n){if(n.code!==9)throw n;Ur(r,e,t+1e-7)}},gl=r=>{const e=r.createBufferSource();e.start();try{e.start()}catch{return!0}return!1},yl=r=>{const e=r.createBufferSource(),t=r.createBuffer(1,1,44100);e.buffer=t;try{e.start(0,1)}catch{return!1}return!0},vl=r=>{const e=r.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0},ys=r=>{const e=r.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},qr=r=>{const e=r.createBuffer(1,1,44100),t=r.createBufferSource();t.buffer=e,t.start(),t.stop();try{return t.stop(),!0}catch{return!1}},vs=r=>{const e=r.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},bl=r=>{const{port1:e,port2:t}=new MessageChannel;try{e.postMessage(r)}finally{e.close(),t.close()}},wl=r=>{r.start=(e=>(t=0,n=0,s)=>{const i=r.buffer,o=i===null?n:Math.min(i.duration,n);i!==null&&o>i.duration-.5/r.context.sampleRate?e.call(r,t,0,0):e.call(r,t,o,s)})(r.start)},Wr=(r,e)=>{const t=e.createGain();r.connect(t);const n=(s=>()=>{s.call(r,t),r.removeEventListener("ended",n)})(r.disconnect);r.addEventListener("ended",n),Bt(r,t),r.stop=(s=>{let i=!1;return(o=0)=>{if(i)try{s.call(r,o)}catch{t.gain.setValueAtTime(0,o)}else s.call(r,o),i=!0}})(r.stop)},Ut=(r,e)=>t=>{const n={value:r};return Object.defineProperties(t,{currentTarget:n,target:n}),typeof e=="function"?e.call(r,t):e.handleEvent.call(r,t)},Tl=qi(bt),Sl=Yi(bt),El=oa(On),Gr=new WeakMap,Nl=Ea(Gr),qe=Vo(new Map,new WeakMap),je=ll(),jr=ec(qe,He),bs=Sa(Te),ge=Yc(Te,bs,gt),Cl=Ji(jr,ee,ge),K=Aa(xn),Qe=Ac(je),J=ja(Qe),Hr=new WeakMap,zr=_a(Ut),rn=rc(je),ws=Ua(rn),Ts=qa(je),Yr=Wa(je),Xt=oc(je),le=Eo(Wi(br),zi(Tl,Sl,Tn,El,Sn,Te,Nl,Qt,ee,bt,Ze,gt,_n),qe,Pa(ts,Sn,Te,ee,$t,Ze),He,kn,Se,na(Tn,ts,Te,ee,$t,K,Ze,J),la(Hr,Te,Ue),zr,K,ws,Ts,Yr,J,Xt),Al=Qi(le,Cl,He,jr,K,J),Ss=new WeakSet,ur=tc(je),$r=Zo(new Uint32Array(1)),Es=ul($r,He),Ns=hl($r),Zr=eo(Ss,qe,Se,ur,Qe,nl(ur),Es,Ns),Rn=$i(Ne),Xr=$c(bs,Kt,gt),ze=Go(Xr),qt=sc(Rn,qe,gl,yl,vl,ys,qr,vs,wl,dl(sn),Wr),Ye=zc(Na(Kt),Xr),Ml=so(ze,qt,ee,Ye,ge),We=No(Gi(wr),Hr,ds,Co,Pi,Vi,Fi,Li,Bi,Jn,yr,rn,Ur),Il=no(le,Ml,We,me,qt,K,J,Ut),xl=fo(le,po,He,me,ic(Ne,sn),K,J,ge),Ol=Po(ze,Pr,ee,Ye,ge),wt=Qc(Gr),kl=Do(le,We,Ol,kn,Pr,K,J,wt),ct=Ja(bt,Ts),Rl=fl(me,ct),lt=fc(rn,Rl),Dl=Bo(lt,ee,ge),Pl=Lo(le,Dl,lt,K,J),Vl=Wo(tn,ee,ge),Fl=qo(le,Vl,tn,K,J,ml),Ll=_c(Rn,qt,Ne,ct),Wt=mc(Rn,qe,Ll,ys,vs),Bl=$o(ze,Wt,ee,Ye,ge),Ul=Yo(le,We,Bl,Wt,K,J,Ut),Qr=gc(Se,sn),ql=Jo(Qr,ee,ge),Wl=Qo(le,ql,Qr,K,J,wt),Gl=ia(ze,Vr,ee,Ye,ge),jl=ra(le,We,Gl,Vr,K,J,wt),Jr=yc(Se),Hl=fa(ze,Jr,ee,Ye,ge),zl=da(le,We,Hl,Jr,Se,K,J,wt),Yl=wa(ze,Ne,ee,Ye,ge),$l=ba(le,We,Yl,Ne,K,J),Zl=Tc(kn,me,nn,Se),Dn=Zc(qe,Ne,nn,rl(Ne,Qe)),Xl=Da(qt,ee,Qe,ge,Dn),Ql=vc(Zl),Jl=ka(le,Ql,Xl,K,J,wt),Kl=mo(We,lt,Wt,nn,Se,Lr,J,sn),Kr=new WeakMap,eu=Qa(xl,Kl,zr,J,Kr,Ut),ei=Mc(Rn,qe,ys,qr,vs,Wr),tu=Uc(ze,ei,ee,Ye,ge),nu=Bc(le,We,ei,tu,K,J,Ut),ti=Ho(qt),su=Pc(ti,me,Ne,Br,ct),Pn=Dc(ti,me,su,Br,ct,rn,sn),ru=xc(Tn,me,lt,Ne,nn,Pn,Se,Sn,Lr,ct),ni=Ic(ru),iu=Gc(ze,lt,Wt,Ne,ni,ee,Qe,Ye,ge,Dn),ou=Wc(le,We,ni,iu,K,J,wt),au=Oc(He),cu=Hc(au,K,new WeakSet,_l),lu=Rc(lt,tn,Ne,Pn,Se,ct),si=kc(lu,Se),uu=tl(ze,si,ee,Ye,ge),hu=el(le,We,si,uu,K,J),du=cl(Pn,ee,ge),fu=al(le,me,Pn,du,K,J,wt),ri=Ha(je),Cs=ga(je),ii=new WeakMap,pu=Ma(ii,Qe),mu=ri?Hi(qe,Se,ma(je),Cs,ya(Ui),K,pu,J,Xt,new WeakMap,new WeakMap,sl(Xt,Qe),je):void 0,_u=Ga(ws,J),gu=ta(Ss,qe,ea,pa,new WeakSet,K,_u,bn,Zt,Es,Ns),oi=ko(mu,Al,Zr,Il,kl,Pl,Fl,Ul,Wl,gu,jl,zl,$l,Jl,eu,nu,ou,cu,hu,fu),yu=za(le,Sc,K,J),vu=$a(le,Ec,K,J),bu=Za(le,Nc,K,J),wu=Cc(me,J),Tu=Xa(le,wu,K),Su=ho(oi,me,Se,il,yu,vu,bu,Tu,rn),As=Ia(Kr),Eu=Zi(As),ai=jo(He),Nu=aa(As),ci=ua(He),li=new WeakMap,Cu=Ta(li,Ue),Au=dc(ai,He,me,lt,tn,Wt,Ne,nn,Se,ci,Cs,Cu,ct),Mu=cc(me,Au,Ne,Se,ct),Iu=Oo(ze,ai,qt,lt,tn,Wt,Ne,Nu,ci,Cs,ee,Xt,Qe,Ye,ge,Dn),xu=Ca(ii),Ou=Xc(li),hr=ri?Mo(Eu,le,We,Iu,Mu,Te,xu,K,J,Xt,pl,Ou,bl,Ut):void 0,ku=Ko(Se,Qe),Ru=Jc(Ss,qe,bs,As,Dn,bn,Es,Ns),Du=Fc(oi,qe,me,ku,Ru),Pu=Va(xn,ws),Vu=Fa(hs,Ts),Fu=La(ds,Yr),Lu=Ba(xn,J);function De(r){return r===void 0}function $(r){return r!==void 0}function Bu(r){return typeof r=="function"}function rt(r){return typeof r=="number"}function mt(r){return Object.prototype.toString.call(r)==="[object Object]"&&r.constructor===Object}function Uu(r){return typeof r=="boolean"}function Oe(r){return Array.isArray(r)}function Xe(r){return typeof r=="string"}function fn(r){return Xe(r)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(r)}function q(r,e){if(!r)throw new Error(e)}function it(r,e,t=1/0){if(!(e<=r&&r<=t))throw new RangeError(`Value must be within [${e}, ${t}], got: ${r}`)}function ui(r){!r.isOffline&&r.state!=="running"&&Vn('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let hi=!1,dr=!1;function fr(r){hi=r}function qu(r){De(r)&&hi&&!dr&&(dr=!0,Vn("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let di=console;function Wu(...r){di.log(...r)}function Vn(...r){di.warn(...r)}function Gu(r){return new Su(r)}function ju(r,e,t){return new Du(r,e,t)}const Ie=typeof self=="object"?self:null,Hu=Ie&&(Ie.hasOwnProperty("AudioContext")||Ie.hasOwnProperty("webkitAudioContext"));function zu(r,e,t){return q($(hr),"AudioWorkletNode only works in a secure context (https or localhost)"),new(r instanceof(Ie==null?void 0:Ie.BaseAudioContext)?Ie==null?void 0:Ie.AudioWorkletNode:hr)(r,e,t)}function Ge(r,e,t,n){var s=arguments.length,i=s<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(r,e,t,n);else for(var a=r.length-1;a>=0;a--)(o=r[a])&&(i=(s<3?o(i):s>3?o(e,t,i):o(e,t))||i);return s>3&&i&&Object.defineProperty(e,t,i),i}function de(r,e,t,n){function s(i){return i instanceof t?i:new t(function(o){o(i)})}return new(t||(t=Promise))(function(i,o){function a(u){try{l(n.next(u))}catch(h){o(h)}}function c(u){try{l(n.throw(u))}catch(h){o(h)}}function l(u){u.done?i(u.value):s(u.value).then(a,c)}l((n=n.apply(r,e||[])).next())})}class Yu{constructor(e,t,n,s){this._callback=e,this._type=t,this._minimumUpdateInterval=Math.max(128/(s||44100),.001),this.updateInterval=n,this._createClock()}_createWorker(){const e=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),t=URL.createObjectURL(e),n=new Worker(t);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){var t;this._updateInterval=Math.max(e,this._minimumUpdateInterval),this._type==="worker"&&((t=this._worker)===null||t===void 0||t.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function yt(r){return Fu(r)}function st(r){return Vu(r)}function gn(r){return Lu(r)}function Nt(r){return Pu(r)}function $u(r){return r instanceof Zr}function Zu(r,e){return r==="value"||yt(e)||st(e)||$u(e)}function _t(r,...e){if(!e.length)return r;const t=e.shift();if(mt(r)&&mt(t))for(const n in t)Zu(n,t[n])?r[n]=t[n]:mt(t[n])?(r[n]||Object.assign(r,{[n]:{}}),_t(r[n],t[n])):Object.assign(r,{[n]:t[n]});return _t(r,...e)}function Xu(r,e){return r.length===e.length&&r.every((t,n)=>e[n]===t)}function j(r,e,t=[],n){const s={},i=Array.from(e);if(mt(i[0])&&n&&!Reflect.has(i[0],n)&&(Object.keys(i[0]).some(a=>Reflect.has(r,a))||(_t(s,{[n]:i[0]}),t.splice(t.indexOf(n),1),i.shift())),i.length===1&&mt(i[0]))_t(s,i[0]);else for(let o=0;o<t.length;o++)$(i[o])&&(s[t[o]]=i[o]);return _t(r,s)}function Qu(r){return r.constructor.getDefaults()}function xt(r,e){return De(r)?e:r}function os(r,e){return e.forEach(t=>{Reflect.has(r,t)&&delete r[t]}),r}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2024 Yotam Mann
 */class Je{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...e){(this.debug||Ie&&this.toString()===Ie.TONE_DEBUG_CLASS)&&Wu(this,...e)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}Je.version=gr;const Ms=1e-6;function Rt(r,e){return r>e+Ms}function as(r,e){return Rt(r,e)||Ve(r,e)}function An(r,e){return r+Ms<e}function Ve(r,e){return Math.abs(r-e)<Ms}function Ju(r,e,t){return Math.max(Math.min(r,t),e)}class Pe extends Je{constructor(){super(),this.name="Timeline",this._timeline=[];const e=j(Pe.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(q(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const t=this._timeline[this.length-1];q(as(e.time,t.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const t=this._search(e.time);this._timeline.splice(t+1,0,e)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(e){const t=this._timeline.indexOf(e);return t!==-1&&this._timeline.splice(t,1),this}get(e,t="time"){const n=this._search(e,t);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e,t="time"){const n=this._search(e,t);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(e){const t=this._timeline.length;if(t>0&&this._timeline[t-1].time<e)return this._timeline[t-1];const n=this._search(e);return n-1>=0?this._timeline[n-1]:null}cancel(e){if(this._timeline.length>1){let t=this._search(e);if(t>=0)if(Ve(this._timeline[t].time,e)){for(let n=t;n>=0&&Ve(this._timeline[n].time,e);n--)t=n;this._timeline=this._timeline.slice(0,t)}else this._timeline=this._timeline.slice(0,t+1);else this._timeline=[]}else this._timeline.length===1&&as(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const t=this._search(e);return t>=0&&(this._timeline=this._timeline.slice(t+1)),this}previousEvent(e){const t=this._timeline.indexOf(e);return t>0?this._timeline[t-1]:null}_search(e,t="time"){if(this._timeline.length===0)return-1;let n=0;const s=this._timeline.length;let i=s;if(s>0&&this._timeline[s-1][t]<=e)return s-1;for(;n<i;){let o=Math.floor(n+(i-n)/2);const a=this._timeline[o],c=this._timeline[o+1];if(Ve(a[t],e)){for(let l=o;l<this._timeline.length;l++){const u=this._timeline[l];if(Ve(u[t],e))o=l;else break}return o}else{if(An(a[t],e)&&Rt(c[t],e))return o;Rt(a[t],e)?i=o:n=o+1}}return-1}_iterate(e,t=0,n=this._timeline.length-1){this._timeline.slice(t,n+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,t){const n=this._search(e);return n!==-1&&this._iterate(t,0,n),this}forEachAfter(e,t){const n=this._search(e);return this._iterate(t,n+1),this}forEachBetween(e,t,n){let s=this._search(e),i=this._search(t);return s!==-1&&i!==-1?(this._timeline[s].time!==e&&(s+=1),this._timeline[i].time===t&&(i-=1),this._iterate(n,s,i)):s===-1&&this._iterate(n,0,i),this}forEachFrom(e,t){let n=this._search(e);for(;n>=0&&this._timeline[n].time>=e;)n--;return this._iterate(t,n+1),this}forEachAtTime(e,t){const n=this._search(e);if(n!==-1&&Ve(this._timeline[n].time,e)){let s=n;for(let i=n;i>=0&&Ve(this._timeline[i].time,e);i--)s=i;this._iterate(i=>{t(i)},s,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const fi=[];function Fn(r){fi.push(r)}function Ku(r){fi.forEach(e=>e(r))}const pi=[];function Ln(r){pi.push(r)}function eh(r){pi.forEach(e=>e(r))}class on extends Je{constructor(){super(...arguments),this.name="Emitter"}on(e,t){return e.split(/\W+/).forEach(s=>{De(this._events)&&(this._events={}),this._events.hasOwnProperty(s)||(this._events[s]=[]),this._events[s].push(t)}),this}once(e,t){const n=(...s)=>{t(...s),this.off(e,n)};return this.on(e,n),this}off(e,t){return e.split(/\W+/).forEach(s=>{if(De(this._events)&&(this._events={}),this._events.hasOwnProperty(s))if(De(t))this._events[s]=[];else{const i=this._events[s];for(let o=i.length-1;o>=0;o--)i[o]===t&&i.splice(o,1)}}),this}emit(e,...t){if(this._events&&this._events.hasOwnProperty(e)){const n=this._events[e].slice(0);for(let s=0,i=n.length;s<i;s++)n[s].apply(this,t)}return this}static mixin(e){["on","once","off","emit"].forEach(t=>{const n=Object.getOwnPropertyDescriptor(on.prototype,t);Object.defineProperty(e.prototype,t,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class mi extends on{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class an extends mi{constructor(){var e,t;super(),this.name="Context",this._constants=new Map,this._timeouts=new Pe,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const n=j(an.getDefaults(),arguments,["context"]);n.context?(this._context=n.context,this._latencyHint=((e=arguments[0])===null||e===void 0?void 0:e.latencyHint)||""):(this._context=Gu({latencyHint:n.latencyHint}),this._latencyHint=n.latencyHint),this._ticker=new Yu(this.emit.bind(this,"tick"),n.clockSource,n.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((t=arguments[0])===null||t===void 0)&&t.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=n.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(Ku(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,t,n){return this._context.createBuffer(e,t,n)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,t){return this._context.createIIRFilter(e,t)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,t,n){return this._context.createPeriodicWave(e,t,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){return q(Nt(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(e)}createMediaElementSource(e){return q(Nt(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(e)}createMediaStreamDestination(){return q(Nt(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){q(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){q(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){q(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){q(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,t){return zu(this.rawContext,e,t)}addAudioWorkletModule(e){return de(this,void 0,void 0,function*(){q($(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(e)),yield this._workletPromise})}workletsAreReady(){return de(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get lookAhead(){return this._lookAhead}set lookAhead(e){this._lookAhead=e,this.updateInterval=e?e/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return Nt(this._context)?this._context.resume():Promise.resolve()}close(){return de(this,void 0,void 0,function*(){Nt(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&eh(this)})}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const t=this._context.createBuffer(1,128,this._context.sampleRate),n=t.getChannelData(0);for(let i=0;i<n.length;i++)n[i]=e;const s=this._context.createBufferSource();return s.channelCount=1,s.channelCountMode="explicit",s.buffer=t,s.loop=!0,s.start(0),this._constants.set(e,s),s}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(e=>this._constants[e].disconnect()),this.close(),this}_timeoutLoop(){const e=this.now();this._timeouts.forEachBefore(e,t=>{t.callback(),this._timeouts.remove(t)})}setTimeout(e,t){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:n+t}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach(t=>{t.id===e&&this._timeouts.remove(t)}),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,t){const n=++this._timeoutIds,s=()=>{const i=this.now();this._timeouts.add({callback:()=>{e(),s()},id:n,time:i+t})};return s(),n}}class th extends mi{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,t,n){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,t){return{}}createPanner(){return{}}createPeriodicWave(e,t,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,t){return{}}get rawContext(){return{}}addAudioWorkletModule(e){return de(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(e,t){return 0}clearTimeout(e){return this}setInterval(e,t){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}}function ce(r,e){Oe(e)?e.forEach(t=>ce(r,t)):Object.defineProperty(r,e,{enumerable:!0,writable:!1})}function _i(r,e){Oe(e)?e.forEach(t=>_i(r,t)):Object.defineProperty(r,e,{writable:!0})}const Q=()=>{};class ne extends Je{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Q;const e=j(ne.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,Xe(e.url)?this.load(e.url).catch(e.onerror):e.url&&this.set(e.url)}static getDefaults(){return{onerror:Q,onload:Q,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Le().sampleRate}set(e){return e instanceof ne?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return de(this,void 0,void 0,function*(){const t=ne.load(e).then(n=>{this.set(n),this.onload(this)});ne.downloads.push(t);try{yield t}finally{const n=ne.downloads.indexOf(t);ne.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const t=Oe(e)&&e[0].length>0,n=t?e.length:1,s=t?e[0].length:e.length,i=Le(),o=i.createBuffer(n,s,i.sampleRate),a=!t&&n===1?[e]:e;for(let c=0;c<n;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(e){if(rt(e))this.fromArray(this.toArray(e));else{let t=new Float32Array(this.length);const n=this.numberOfChannels;for(let s=0;s<n;s++){const i=this.toArray(s);for(let o=0;o<i.length;o++)t[o]+=i[o]}t=t.map(s=>s/n),this.fromArray(t)}return this}toArray(e){if(rt(e))return this.getChannelData(e);if(this.numberOfChannels===1)return this.toArray(0);{const t=[];for(let n=0;n<this.numberOfChannels;n++)t[n]=this.getChannelData(n);return t}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e,t=this.duration){q(this.loaded,"Buffer is not loaded");const n=Math.floor(e*this.sampleRate),s=Math.floor(t*this.sampleRate);q(n<s,"The start time must be less than the end time");const i=s-n,o=Le().createBuffer(this.numberOfChannels,i,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(n,s),a);return new ne(o)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return new ne().fromArray(e)}static fromUrl(e){return de(this,void 0,void 0,function*(){return yield new ne().load(e)})}static load(e){return de(this,void 0,void 0,function*(){const t=ne.baseUrl===""||ne.baseUrl.endsWith("/")?ne.baseUrl:ne.baseUrl+"/",n=yield fetch(t+e);if(!n.ok)throw new Error(`could not load url: ${e}`);const s=yield n.arrayBuffer();return yield Le().decodeAudioData(s)})}static supportsType(e){const t=e.split("."),n=t[t.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return de(this,void 0,void 0,function*(){for(yield Promise.resolve();ne.downloads.length;)yield ne.downloads[0]})}}ne.baseUrl="";ne.downloads=[];class Is extends an{constructor(){super({clockSource:"offline",context:gn(arguments[0])?arguments[0]:ju(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:gn(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=gn(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return de(this,void 0,void 0,function*(){let t=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,t++;const n=Math.floor(this.sampleRate/128);e&&t%n===0&&(yield new Promise(s=>setTimeout(s,1)))}})}render(){return de(this,arguments,void 0,function*(e=!0){yield this.workletsAreReady(),yield this._renderClock(e);const t=yield this._context.startRendering();return new ne(t)})}close(){return Promise.resolve()}}const gi=new th;let ft=gi;function Le(){return ft===gi&&Hu&&nh(new an),ft}function nh(r,e=!1){e&&ft.dispose(),Nt(r)?ft=new an(r):gn(r)?ft=new Is(r):ft=r}function sh(){return ft.resume()}if(Ie&&!Ie.TONE_SILENCE_LOGGING){const e=` * Tone.js v${gr} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function rh(r){return Math.pow(10,r/20)}function ih(r){return 20*(Math.log(r)/Math.LN10)}function yi(r){return Math.pow(2,r/12)}let Bn=440;function oh(){return Bn}function ah(r){Bn=r}function pt(r){return Math.round(vi(r))}function vi(r){return 69+12*Math.log2(r/Bn)}function bi(r){return Bn*Math.pow(2,(r-69)/12)}class xs extends Je{constructor(e,t,n){super(),this.defaultUnits="s",this._val=t,this._units=n,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,t)=>{const n=parseInt(e,10),s=t==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*s:this._beatsToUnits(4/n)*s},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const t=parseInt(e,10);return this._beatsToUnits(8/(Math.floor(t)*3))},regexp:/^(\d+)t$/i},tr:{method:(e,t,n)=>{let s=0;return e&&e!=="0"&&(s+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(s+=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(s+=this._beatsToUnits(parseFloat(n)/4)),s},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof xs&&this.fromType(this._val),De(this._val))return this._noArg();if(Xe(this._val)&&De(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(mt(this._val)){let e=0;for(const t in this._val)if($(this._val[t])){const n=this._val[t],s=new this.constructor(this.context,t).valueOf()*n;e+=s}return e}if($(this._units)){const e=this._expressions[this._units],t=this._val.toString().trim().match(e.regexp);return t?e.method.apply(this,t.slice(1)):e.method.call(this,this._val)}else return Xe(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Be extends xs{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const t=new Be(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(t))},regexp:/^@(.+)/}})}quantize(e,t=1){const n=new this.constructor(this.context,e).valueOf(),s=this.valueOf(),a=Math.round(s/n)*n-s;return s+a*t}toNotation(){const e=this.toSeconds(),t=["1m"];for(let i=1;i<9;i++){const o=Math.pow(2,i);t.push(o+"n."),t.push(o+"n"),t.push(o+"t")}t.push("0");let n=t[0],s=new Be(this.context,t[0]).toSeconds();return t.forEach(i=>{const o=new Be(this.context,i).toSeconds();Math.abs(o-e)<Math.abs(s-e)&&(n=i,s=o)}),n}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let t=this.valueOf()/e;t=parseFloat(t.toFixed(4));const n=Math.floor(t/this._getTimeSignature());let s=t%1*4;t=Math.floor(t)%this._getTimeSignature();const i=s.toString();return i.length>3&&(s=parseFloat(parseFloat(i).toFixed(3))),[n,t,s].join(":")}toTicks(){const e=this._beatsToUnits(1);return this.valueOf()/e*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return pt(this.toFrequency())}_now(){return this.context.now()}}class xe extends Be{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return oh()}static set A4(e){ah(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return this.defaultUnits==="midi"?e:xe.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(e,t){const s=ch[e.toLowerCase()]+(parseInt(t,10)+1)*12;return this.defaultUnits==="midi"?s:xe.mtof(s)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,t,n){let s=1;return e&&e!=="0"&&(s*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(s*=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(s*=this._beatsToUnits(parseFloat(n)/4)),s}}})}transpose(e){return new xe(this.context,this.valueOf()*yi(e))}harmonize(e){return e.map(t=>this.transpose(t))}toMidi(){return pt(this.valueOf())}toNote(){const e=this.toFrequency(),t=Math.log2(e/xe.A4);let n=Math.round(12*t)+57;const s=Math.floor(n/12);return s<0&&(n+=-12*s),lh[n%12]+s.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(e*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return bi(e)}static ftom(e){return pt(e)}}const ch={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},lh=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];class zt extends Be{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class Ee extends Je{constructor(){super();const e=j(Ee.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:Le()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return qu(e),new Be(this.context,e).toSeconds()}toFrequency(e){return new xe(this.context,e).toFrequency()}toTicks(e){return new zt(this.context,e).toTicks()}_getPartialProperties(e){const t=this.get();return Object.keys(t).forEach(n=>{De(e[n])&&delete t[n]}),t}get(){const e=Qu(this);return Object.keys(e).forEach(t=>{if(Reflect.has(this,t)){const n=this[t];$(n)&&$(n.value)&&$(n.setValueAtTime)?e[t]=n.value:n instanceof Ee?e[t]=n._getPartialProperties(e[t]):Oe(n)||rt(n)||Xe(n)||Uu(n)?e[t]=n:delete e[t]}}),e}set(e){return Object.keys(e).forEach(t=>{Reflect.has(this,t)&&$(this[t])&&(this[t]&&$(this[t].value)&&$(this[t].setValueAtTime)?this[t].value!==e[t]&&(this[t].value=e[t]):this[t]instanceof Ee?this[t].set(e[t]):this[t]=e[t])}),this}}class Os extends Pe{constructor(e="stopped"){super(),this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const t=this.get(e);return t!==null?t.state:this._initial}setStateAtTime(e,t,n){return it(t,0),this.add(Object.assign({},n,{state:e,time:t})),this}getLastState(e,t){const n=this._search(t);for(let s=n;s>=0;s--){const i=this._timeline[s];if(i.state===e)return i}}getNextState(e,t){const n=this._search(t);if(n!==-1)for(let s=n;s<this._timeline.length;s++){const i=this._timeline[s];if(i.state===e)return i}}}class ie extends Ee{constructor(){const e=j(ie.getDefaults(),arguments,["param","units","convert"]);for(super(e),this.name="Param",this.overridden=!1,this._minOutput=1e-7,q($(e.param)&&(yt(e.param)||e.param instanceof ie),"param must be an AudioParam");!yt(e.param);)e.param=e.param._param;this._swappable=$(e.swappable)?e.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new Pe(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,$(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Ee.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return $(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return $(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(e,t){return this.units===t}_assertRange(e){return $(this.maxValue)&&$(this.minValue)&&it(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?rh(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&this.units==="decibels"?ih(e):e}setValueAtTime(e,t){const n=this.toSeconds(t),s=this._fromType(e);return q(isFinite(s)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(s),this.log(this.units,"setValueAtTime",e,n),this._events.add({time:n,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,n),this}getValueAtTime(e){const t=Math.max(this.toSeconds(e),0),n=this._events.getAfter(t),s=this._events.get(t);let i=this._initialValue;if(s===null)i=this._initialValue;else if(s.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const o=this._events.getBefore(s.time);let a;o===null?a=this._initialValue:a=o.value,s.type==="setTargetAtTime"&&(i=this._exponentialApproach(s.time,a,s.value,s.constant,t))}else if(n===null)i=s.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let o=s.value;if(s.type==="setTargetAtTime"){const a=this._events.getBefore(s.time);a===null?o=this._initialValue:o=a.value}n.type==="linearRampToValueAtTime"?i=this._linearInterpolate(s.time,o,n.time,n.value,t):i=this._exponentialInterpolate(s.time,o,n.time,n.value,t)}else i=s.value;return this._toType(i)}setRampPoint(e){e=this.toSeconds(e);let t=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),this._fromType(t)===0&&(t=this._toType(this._minOutput)),this.setValueAtTime(t,e),this}linearRampToValueAtTime(e,t){const n=this._fromType(e),s=this.toSeconds(t);return q(isFinite(n)&&isFinite(s),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(n),this._events.add({time:s,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",e,s),this._param.linearRampToValueAtTime(n,s),this}exponentialRampToValueAtTime(e,t){let n=this._fromType(e);n=Ve(n,0)?this._minOutput:n,this._assertRange(n);const s=this.toSeconds(t);return q(isFinite(n)&&isFinite(s),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({time:s,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",e,s),this._param.exponentialRampToValueAtTime(n,s),this}exponentialRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(e,n+this.toSeconds(t)),this}linearRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(e,n+this.toSeconds(t)),this}targetRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(e,n,t),this}exponentialApproachValueAtTime(e,t,n){t=this.toSeconds(t),n=this.toSeconds(n);const s=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(e,t,s),this.cancelAndHoldAtTime(t+n*.9),this.linearRampToValueAtTime(e,t+n),this}setTargetAtTime(e,t,n){const s=this._fromType(e);q(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const i=this.toSeconds(t);return this._assertRange(s),q(isFinite(s)&&isFinite(i),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({constant:n,time:i,type:"setTargetAtTime",value:s}),this.log(this.units,"setTargetAtTime",e,i,n),this._param.setTargetAtTime(s,i,n),this}setValueCurveAtTime(e,t,n,s=1){n=this.toSeconds(n),t=this.toSeconds(t);const i=this._fromType(e[0])*s;this.setValueAtTime(this._toType(i),t);const o=n/(e.length-1);for(let a=1;a<e.length;a++){const c=this._fromType(e[a])*s;this.linearRampToValueAtTime(this._toType(c),t+a*o)}return this}cancelScheduledValues(e){const t=this.toSeconds(e);return q(isFinite(t),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(t),this._param.cancelScheduledValues(t),this.log(this.units,"cancelScheduledValues",t),this}cancelAndHoldAtTime(e){const t=this.toSeconds(e),n=this._fromType(this.getValueAtTime(t));q(isFinite(t),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",t,"value="+n);const s=this._events.get(t),i=this._events.getAfter(t);return s&&Ve(s.time,t)?i?(this._param.cancelScheduledValues(i.time),this._events.cancel(i.time)):(this._param.cancelAndHoldAtTime(t),this._events.cancel(t+this.sampleTime)):i&&(this._param.cancelScheduledValues(i.time),this._events.cancel(i.time),i.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),t):i.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),t)),this._events.add({time:t,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,t),this}rampTo(e,t=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(e,t,n):this.linearRampTo(e,t,n),this}apply(e){const t=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(t),t);const n=this._events.get(t);if(n&&n.type==="setTargetAtTime"){const s=this._events.getAfter(n.time),i=s?s.time:t+2,o=(i-t)/10;for(let a=t;a<i;a+=o)e.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,s=>{s.type==="cancelScheduledValues"?e.cancelScheduledValues(s.time):s.type==="setTargetAtTime"?e.setTargetAtTime(s.value,s.time,s.constant):e[s.type](s.value,s.time)}),this}setParam(e){q(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const t=this.input;return t.disconnect(this._param),this.apply(e),this._param=e,t.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,t,n,s,i){return n+(t-n)*Math.exp(-(i-e)/s)}_linearInterpolate(e,t,n,s,i){return t+(s-t)*((i-e)/(n-e))}_exponentialInterpolate(e,t,n,s,i){return t*Math.pow(s/t,(i-e)/(n-e))}}class z extends Ee{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return $(this.input)?yt(this.input)||this.input instanceof ie?1:this.input.numberOfInputs:0}get numberOfOutputs(){return $(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return $(e)&&(e instanceof z||st(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach(n=>{n.channelCount=e.channelCount,n.channelCountMode=e.channelCountMode,n.channelInterpretation=e.channelInterpretation})}_getChannelProperties(){const e=this._getInternalNodes();q(e.length>0,"ToneAudioNode does not have any internal nodes");const t=e[0];return{channelCount:t.channelCount,channelCountMode:t.channelCountMode,channelInterpretation:t.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelInterpretation:e}))}connect(e,t=0,n=0){return Gt(this,e,t,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return Vn("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e,t=0,n=0){return uh(this,e,t,n),this}chain(...e){return cs(this,...e),this}fan(...e){return e.forEach(t=>this.connect(t)),this}dispose(){return super.dispose(),$(this.input)&&(this.input instanceof z?this.input.dispose():st(this.input)&&this.input.disconnect()),$(this.output)&&(this.output instanceof z?this.output.dispose():st(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function cs(...r){const e=r.shift();r.reduce((t,n)=>(t instanceof z?t.connect(n):st(t)&&Gt(t,n),n),e)}function Gt(r,e,t=0,n=0){for(q($(r),"Cannot connect from undefined node"),q($(e),"Cannot connect to undefined node"),(e instanceof z||st(e))&&q(e.numberOfInputs>0,"Cannot connect to node with no inputs"),q(r.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof z||e instanceof ie;)$(e.input)&&(e=e.input);for(;r instanceof z;)$(r.output)&&(r=r.output);yt(e)?r.connect(e,t):r.connect(e,t,n)}function uh(r,e,t=0,n=0){if($(e))for(;e instanceof z;)e=e.input;for(;!st(r);)$(r.output)&&(r=r.output);yt(e)?r.disconnect(e,t):st(e)?r.disconnect(e,t,n):r.disconnect()}class ye extends z{constructor(){const e=j(ye.getDefaults(),arguments,["gain","units"]);super(e),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode,this.gain=new ie({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),ce(this,"gain")}static getDefaults(){return Object.assign(z.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Dt extends z{constructor(e){super(e),this.onended=Q,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new ye({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const n=this.toSeconds(t);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(z.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Q})}_startGain(e,t=1){q(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=e+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,e),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(t,e+n):this._gainNode.gain.exponentialApproachValueAtTime(t,e,n)):this._gainNode.gain.setValueAtTime(t,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){q(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const t=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+t,this._stopTime=Math.max(this._stopTime,this.now()),t>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,t,e):this._gainNode.gain.targetRampTo(0,t,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?t*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Q&&(this.onended(this),this.onended=Q,!this.context.isOffline)){const e=()=>this.dispose();typeof requestIdleCallback<"u"?requestIdleCallback(e):setTimeout(e,10)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),q(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Q,this}}class ks extends Dt{constructor(){const e=j(ks.getDefaults(),arguments,["offset"]);super(e),this.name="ToneConstantSource",this._source=this.context.createConstantSource(),Gt(this._source,this._gainNode),this.offset=new ie({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(Dt.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._source.start(t),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class _e extends z{constructor(){const e=j(_e.getDefaults(),arguments,["value","units"]);super(e),this.name="Signal",this.override=!0,this.output=this._constantSource=new ks({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(z.getDefaults(),{convert:!0,units:"number",value:0})}connect(e,t=0,n=0){return Rs(this,e,t,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,t){return this._param.setValueAtTime(e,t),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,t){return this._param.linearRampToValueAtTime(e,t),this}exponentialRampToValueAtTime(e,t){return this._param.exponentialRampToValueAtTime(e,t),this}exponentialRampTo(e,t,n){return this._param.exponentialRampTo(e,t,n),this}linearRampTo(e,t,n){return this._param.linearRampTo(e,t,n),this}targetRampTo(e,t,n){return this._param.targetRampTo(e,t,n),this}exponentialApproachValueAtTime(e,t,n){return this._param.exponentialApproachValueAtTime(e,t,n),this}setTargetAtTime(e,t,n){return this._param.setTargetAtTime(e,t,n),this}setValueCurveAtTime(e,t,n,s){return this._param.setValueCurveAtTime(e,t,n,s),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,t,n){return this._param.rampTo(e,t,n),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function Rs(r,e,t,n){(e instanceof ie||yt(e)||e instanceof _e&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof _e&&(e.overridden=!0)),Gt(r,e,t,n)}class Ds extends ie{constructor(){const e=j(Ds.getDefaults(),arguments,["value"]);super(e),this.name="TickParam",this._events=new Pe(1/0),this._multiplier=1,this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(ie.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,t,n){t=this.toSeconds(t),this.setRampPoint(t);const s=this._fromType(e),i=this._events.get(t),o=Math.round(Math.max(1/n,1));for(let a=0;a<=o;a++){const c=n*a+t,l=this._exponentialApproach(i.time,i.value,s,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}setValueAtTime(e,t){const n=this.toSeconds(t);super.setValueAtTime(e,t);const s=this._events.get(n),i=this._events.previousEvent(s),o=this._getTicksUntilEvent(i,n);return s.ticks=Math.max(o,0),this}linearRampToValueAtTime(e,t){const n=this.toSeconds(t);super.linearRampToValueAtTime(e,t);const s=this._events.get(n),i=this._events.previousEvent(s),o=this._getTicksUntilEvent(i,n);return s.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(e,t){t=this.toSeconds(t);const n=this._fromType(e),s=this._events.get(t),i=Math.round(Math.max((t-s.time)*10,1)),o=(t-s.time)/i;for(let a=0;a<=i;a++){const c=o*a+s.time,l=this._exponentialInterpolate(s.time,s.value,t,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}_getTicksUntilEvent(e,t){if(e===null)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(De(e.ticks)){const o=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(o,e.time)}const n=this._fromType(this.getValueAtTime(e.time));let s=this._fromType(this.getValueAtTime(t));const i=this._events.get(t);return i&&i.time===t&&i.type==="setValueAtTime"&&(s=this._fromType(this.getValueAtTime(t-this.sampleTime))),.5*(t-e.time)*(n+s)+e.ticks}getTicksAtTime(e){const t=this.toSeconds(e),n=this._events.get(t);return Math.max(this._getTicksUntilEvent(n,t),0)}getDurationOfTicks(e,t){const n=this.toSeconds(t),s=this.getTicksAtTime(t);return this.getTimeOfTick(s+e)-n}getTimeOfTick(e){const t=this._events.get(e,"ticks"),n=this._events.getAfter(e,"ticks");if(t&&t.ticks===e)return t.time;if(t&&n&&n.type==="linearRampToValueAtTime"&&t.value!==n.value){const s=this._fromType(this.getValueAtTime(t.time)),o=(this._fromType(this.getValueAtTime(n.time))-s)/(n.time-t.time),a=Math.sqrt(Math.pow(s,2)-2*o*(t.ticks-e)),c=(-s+a)/o,l=(-s-a)/o;return(c>0?c:l)+t.time}else return t?t.value===0?1/0:t.time+(e-t.ticks)/t.value:e/this._initialValue}ticksToTime(e,t){return this.getDurationOfTicks(e,t)}timeToTicks(e,t){const n=this.toSeconds(t),s=this.toSeconds(e),i=this.getTicksAtTime(n);return this.getTicksAtTime(n+s)-i}_fromType(e){return this.units==="bpm"&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return this.units==="bpm"&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const t=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(t,0)}}class Ps extends _e{constructor(){const e=j(Ps.getDefaults(),arguments,["value"]);super(e),this.name="TickSignal",this.input=this._param=new Ds({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(_e.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,t){return this._param.ticksToTime(e,t)}timeToTicks(e,t){return this._param.timeToTicks(e,t)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,t){return this._param.getDurationOfTicks(e,t)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class Vs extends Ee{constructor(){const e=j(Vs.getDefaults(),arguments,["frequency"]);super(e),this.name="TickSource",this._state=new Os,this._tickOffset=new Pe,this._ticksAtTime=new Pe,this._secondsAtTime=new Pe,this.frequency=new Ps({context:this.context,units:e.units,value:e.frequency}),ce(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Ee.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,t){const n=this.toSeconds(e);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),$(t)&&this.setTicksAtTime(t,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}stop(e){const t=this.toSeconds(e);if(this._state.getValueAtTime(t)==="stopped"){const n=this._state.get(t);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this.setTicksAtTime(0,t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t)),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getTicksAtTime(e){const t=this.toSeconds(e),n=this._state.getLastState("stopped",t),s=this._ticksAtTime.get(t),i={state:"paused",time:t};this._state.add(i);let o=s||n,a=s?s.ticks:0,c=null;return this._state.forEachBetween(o.time,t+this.sampleTime,l=>{let u=o.time;const h=this._tickOffset.get(l.time);h&&h.time>=o.time&&(a=h.ticks,u=h.time),o.state==="started"&&l.state!=="started"&&(a+=this.frequency.getTicksAtTime(l.time)-this.frequency.getTicksAtTime(u),l.time!==i.time&&(c={state:l.state,time:l.time,ticks:a})),o=l}),this._state.remove(i),c&&this._ticksAtTime.add(c),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const t=this.now(),n=this.frequency.timeToTicks(e,t);this.setTicksAtTime(n,t)}getSecondsAtTime(e){e=this.toSeconds(e);const t=this._state.getLastState("stopped",e),n={state:"paused",time:e};this._state.add(n);const s=this._secondsAtTime.get(e);let i=s||t,o=s?s.seconds:0,a=null;return this._state.forEachBetween(i.time,e+this.sampleTime,c=>{let l=i.time;const u=this._tickOffset.get(c.time);u&&u.time>=i.time&&(o=u.seconds,l=u.time),i.state==="started"&&c.state!=="started"&&(o+=c.time-l,c.time!==n.time&&(a={state:c.state,time:c.time,seconds:o})),i=c}),this._state.remove(n),a&&this._secondsAtTime.add(a),o}setTicksAtTime(e,t){return t=this.toSeconds(t),this._tickOffset.cancel(t),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,t),ticks:e,time:t}),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e,t=this.now()){const n=this._tickOffset.get(t),s=this._state.get(t),i=Math.max(n.time,s.time),o=this.frequency.getTicksAtTime(i)+e-n.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(e,t,n){let s=this._state.get(e);this._state.forEachBetween(e,t,o=>{s&&s.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(s.time,e),o.time-this.sampleTime,n),s=o});let i=null;if(s&&s.state==="started"){const o=Math.max(s.time,e),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(s.time),l=a-c;let u=Math.ceil(l)-l;u=Ve(u,1)?0:u;let h=this.frequency.getTimeOfTick(a+u);for(;h<t;){try{n(h,Math.round(this.getTicksAtTime(h)))}catch(f){i=f;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(i)throw i;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class Un extends Ee{constructor(){const e=j(Un.getDefaults(),arguments,["callback","frequency"]);super(e),this.name="Clock",this.callback=Q,this._lastUpdate=0,this._state=new Os("stopped"),this._boundLoop=this._loop.bind(this),this.callback=e.callback,this._tickSource=new Vs({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,ce(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Ee.getDefaults(),{callback:Q,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,t){ui(this.context);const n=this.toSeconds(e);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,t),n<this._lastUpdate&&this.emit("start",n,t)),this}stop(e){const t=this.toSeconds(e);return this.log("stop",t),this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._tickSource.stop(t),t<this._lastUpdate&&this.emit("stop",t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._tickSource.pause(t),t<this._lastUpdate&&this.emit("pause",t)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,t){return this._tickSource.setTicksAtTime(e,t),this}getTimeOfTick(e,t=this.now()){return this._tickSource.getTimeOfTick(e,t)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,t){const n=this.toSeconds(t),s=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(s+e,n)}_loop(){const e=this._lastUpdate,t=this.now();this._lastUpdate=t,this.log("loop",e,t),e!==t&&(this._state.forEachBetween(e,t,n=>{switch(n.state){case"started":const s=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,s);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(e,t,(n,s)=>{this.callback(n,s)}))}getStateAtTime(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}on.mixin(Un);class jt extends z{constructor(){const e=j(jt.getDefaults(),arguments,["volume"]);super(e),this.name="Volume",this.input=this.output=new ye({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,ce(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(z.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Fs extends z{constructor(){const e=j(Fs.getDefaults(),arguments);super(e),this.name="Destination",this.input=new jt({context:this.context}),this.output=new ye({context:this.context}),this.volume=this.input.volume,cs(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(z.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(...e){return this.input.disconnect(),e.unshift(this.input),e.push(this.output),cs(...e),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}Fn(r=>{r.destination=new Fs({context:r})});Ln(r=>{r.destination.dispose()});class hh extends z{constructor(){super(...arguments),this.name="Listener",this.positionX=new ie({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new ie({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new ie({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new ie({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new ie({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new ie({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new ie({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new ie({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new ie({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(z.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}Fn(r=>{r.listener=new hh({context:r})});Ln(r=>{r.listener.dispose()});class Ls extends Je{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=j(Ls.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach(t=>{this._loadingCount++;const n=e.urls[t];this.add(t,n,this._bufferLoaded.bind(this,e.onload),e.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Q,onload:Q,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return q(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,this._loadingCount===0&&e&&e()}get loaded(){return Array.from(this._buffers).every(([e,t])=>t.loaded)}add(e,t,n=Q,s=Q){return Xe(t)?(this.baseUrl&&t.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(e.toString(),new ne(this.baseUrl+t,n,s))):this._buffers.set(e.toString(),new ne(t,n,s)),this}dispose(){return super.dispose(),this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this}}class Mn extends xe{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(e){return pt(super._frequencyToUnits(e))}_ticksToUnits(e){return pt(super._ticksToUnits(e))}_beatsToUnits(e){return pt(super._beatsToUnits(e))}_secondsToUnits(e){return pt(super._secondsToUnits(e))}toMidi(){return this.valueOf()}toFrequency(){return bi(this.toMidi())}transpose(e){return new Mn(this.context,this.toMidi()+e)}}class Mt extends zt{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class dh extends Ee{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Pe,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,t){return this._events.add({callback:e,time:this.toSeconds(t)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;this._events.forEachBefore(e+this.anticipation,t=>{e-t.time<=this.expiration&&t.callback(),this._events.remove(t)}),this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}Fn(r=>{r.draw=new dh({context:r})});Ln(r=>{r.draw.dispose()});class fh extends Je{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(e){q($(e.time),"Events must have a time property"),q($(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let t=new ph(e.time,e.time+e.duration,e);for(this._root===null?this._root=t:this._root.insert(t),this._length++;t!==null;)t.updateHeight(),t.updateMax(),this._rebalance(t),t=t.parent;return this}remove(e){if(this._root!==null){const t=[];this._root.search(e.time,t);for(const n of t)if(n.event===e){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,t=>this.remove(t)),this}_setRoot(e){this._root=e,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(e,t){e.parent!==null?(e.isLeftChild()?e.parent.left=t:e.parent.right=t,this._rebalance(e.parent)):this._setRoot(t)}_removeNode(e){if(e.left===null&&e.right===null)this._replaceNodeInParent(e,null);else if(e.right===null)this._replaceNodeInParent(e,e.left);else if(e.left===null)this._replaceNodeInParent(e,e.right);else{const t=e.getBalance();let n,s=null;if(t>0)if(e.left.right===null)n=e.left,n.right=e.right,s=n;else{for(n=e.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,s=n.parent,n.left=e.left,n.right=e.right)}else if(e.right.left===null)n=e.right,n.left=e.left,s=n;else{for(n=e.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,s=n.parent,n.left=e.left,n.right=e.right)}e.parent!==null?e.isLeftChild()?e.parent.left=n:e.parent.right=n:this._setRoot(n),s&&this._rebalance(s)}e.dispose()}_rotateLeft(e){const t=e.parent,n=e.isLeftChild(),s=e.right;s&&(e.right=s.left,s.left=e),t!==null?n?t.left=s:t.right=s:this._setRoot(s)}_rotateRight(e){const t=e.parent,n=e.isLeftChild(),s=e.left;s&&(e.left=s.right,s.right=e),t!==null?n?t.left=s:t.right=s:this._setRoot(s)}_rebalance(e){const t=e.getBalance();t>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):t<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(this._root!==null){const t=[];if(this._root.search(e,t),t.length>0){let n=t[0];for(let s=1;s<t.length;s++)t[s].low>n.low&&(n=t[s]);return n.event}}return null}forEach(e){if(this._root!==null){const t=[];this._root.traverse(n=>t.push(n)),t.forEach(n=>{n.event&&e(n.event)})}return this}forEachAtTime(e,t){if(this._root!==null){const n=[];this._root.search(e,n),n.forEach(s=>{s.event&&t(s.event)})}return this}forEachFrom(e,t){if(this._root!==null){const n=[];this._root.searchAfter(e,n),n.forEach(s=>{s.event&&t(s.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(e=>e.dispose()),this._root=null,this}}class ph{constructor(e,t,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=e,this.high=t,this.max=this.high}insert(e){e.low<=this.low?this.left===null?this.left=e:this.left.insert(e):this.right===null?this.right=e:this.right.insert(e)}search(e,t){e>this.max||(this.left!==null&&this.left.search(e,t),this.low<=e&&this.high>e&&t.push(this),!(this.low>e)&&this.right!==null&&this.right.search(e,t))}searchAfter(e,t){this.low>=e&&(t.push(this),this.left!==null&&this.left.searchAfter(e,t)),this.right!==null&&this.right.searchAfter(e,t)}traverse(e){e(this),this.left!==null&&this.left.traverse(e),this.right!==null&&this.right.traverse(e)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return this.left!==null&&this.right!==null?e=this.left.height-this.right.height:this.left!==null?e=this.left.height+1:this.right!==null&&(e=-(this.right.height+1)),e}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class mh extends Je{constructor(e){super(),this.name="TimelineValue",this._timeline=new Pe({memory:10}),this._initialValue=e}set(e,t){return this._timeline.add({value:e,time:t}),this}get(e){const t=this._timeline.get(e);return t?t.value:this._initialValue}}class Pt extends z{constructor(){super(j(Pt.getDefaults(),arguments,["context"]))}connect(e,t=0,n=0){return Rs(this,e,t,n),this}}class cn extends Pt{constructor(){const e=j(cn.getDefaults(),arguments,["mapping","length"]);super(e),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper,Oe(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):Bu(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(_e.getDefaults(),{length:1024})}setMap(e,t=1024){const n=new Float32Array(t);for(let s=0,i=t;s<i;s++){const o=s/(i-1)*2-1;n[s]=e(o,s)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){const t=["none","2x","4x"].some(n=>n.includes(e));q(t,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class Bs extends Pt{constructor(){const e=j(Bs.getDefaults(),arguments,["value"]);super(e),this.name="Pow",this._exponentScaler=this.input=this.output=new cn({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(Pt.getDefaults(),{value:1})}_expFunc(e){return t=>Math.pow(Math.abs(t),e)}get value(){return this._exponent}set value(e){this._exponent=e,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class ot{constructor(e,t){this.id=ot._eventId++,this._remainderTime=0;const n=Object.assign(ot.getDefaults(),t);this.transport=e,this.callback=n.callback,this._once=n.once,this.time=Math.floor(n.time),this._remainderTime=n.time-this.time}static getDefaults(){return{callback:Q,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(e){if(this.callback){const t=this.transport.bpm.getDurationOfTicks(1,e);this.callback(e+this._remainderTime*t),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}ot._eventId=0;class Us extends ot{constructor(e,t){super(e,t),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(Us.getDefaults(),t);this.duration=n.duration,this._interval=n.interval,this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},ot.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvent(){return An(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new Mt(this.context,this._nextTick).toSeconds()):-1}_createEvents(e){An(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Mt(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const t=this.transport.getTicksAtTime(e);Rt(t,this.time)&&(this._nextTick=this.floatTime+Math.ceil((t-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class qn extends Ee{constructor(){const e=j(qn.getDefaults(),arguments);super(e),this.name="Transport",this._loop=new mh(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Pe,this._repeatedEvents=new fh,this._syncedSignals=[],this._swingAmount=0,this._ppq=e.ppq,this._clock=new Un({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),ce(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(Ee.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,t){if(this._loop.get(e)&&t>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),t=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&t%this._ppq!==0&&t%(this._swingTicks*2)!==0){const n=t%(this._swingTicks*2)/(this._swingTicks*2),s=Math.sin(n*Math.PI)*this._swingAmount;e+=new Mt(this.context,this._swingTicks*2/3).toSeconds()*s}fr(!0),this._timeline.forEachAtTime(t,n=>n.invoke(e)),fr(!1)}schedule(e,t){const n=new ot(this,{callback:e,time:new zt(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(e,t,n,s=1/0){const i=new Us(this,{callback:e,duration:new Be(this.context,s).toTicks(),interval:new Be(this.context,t).toTicks(),time:new zt(this.context,n).toTicks()});return this._addEvent(i,this._repeatedEvents)}scheduleOnce(e,t){const n=new ot(this,{callback:e,once:!0,time:new zt(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const t=this._scheduledEvents[e.toString()];t.timeline.remove(t.event),t.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,t){return this._scheduledEvents[e.id.toString()]={event:e,timeline:t},t.add(e),e.id}cancel(e=0){const t=this.toTicks(e);return this._timeline.forEachFrom(t,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(t,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(e,t)=>{t=new Mt(this.context,t).toSeconds(),this.emit("start",e,t)}),this._clock.on("stop",e=>{this.emit("stop",e)}),this._clock.on("pause",e=>{this.emit("pause",e)})}get state(){return this._clock.getStateAtTime(this.now())}start(e,t){this.context.resume();let n;return $(t)&&(n=this.toTicks(t)),this._clock.start(e,n),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),this._clock.getStateAtTime(e)!=="started"?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){Oe(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new Be(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new Be(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new Mt(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),t=this._clock.getTicksAtTime(e);return new Mt(this.context,t).toBarsBeatsSixteenths()}set position(e){const t=this.toTicks(e);this.ticks=t}get seconds(){return this._clock.seconds}set seconds(e){const t=this.now(),n=this._clock.frequency.timeToTicks(e,t);this.ticks=n}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const t=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(t),s=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,t),i=t+s;this.emit("stop",i),this._clock.setTicksAtTime(e,i),this.emit("start",i,this._clock.getSecondsAtTime(i))}else this.emit("ticks",t),this._clock.setTicksAtTime(e,t)}}getTicksAtTime(e){return this._clock.getTicksAtTime(e)}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),this.state!=="started")return 0;{const t=this.now(),n=this.getTicksAtTime(t),s=e-n%e;return this._clock.nextTickTime(s,t)}}syncSignal(e,t){const n=this.now();let s=this.bpm,i=1/(60/s.getValueAtTime(n)/this.PPQ),o=[];if(e.units==="time"){const c=.015625/i,l=new ye(c),u=new Bs(-1),h=new ye(c);s.chain(l,u,h),s=h,i=1/i,o=[l,u,h]}t||(e.getValueAtTime(n)!==0?t=e.getValueAtTime(n)/i:t=0);const a=new ye(t);return s.connect(a),a.connect(e._param),o.push(a),this._syncedSignals.push({initial:e.value,nodes:o,signal:e}),e.value=0,this}unsyncSignal(e){for(let t=this._syncedSignals.length-1;t>=0;t--){const n=this._syncedSignals[t];n.signal===e&&(n.nodes.forEach(s=>s.dispose()),n.signal.value=n.initial,this._syncedSignals.splice(t,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),_i(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}on.mixin(qn);Fn(r=>{r.transport=new qn({context:r})});Ln(r=>{r.transport.dispose()});class ke extends z{constructor(e){super(e),this.input=void 0,this._state=new Os("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Q,this._syncedStop=Q,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new jt({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,ce(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(z.getDefaults(),{mute:!1,onstop:Q,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,t,n){let s=De(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(s=this._clampToCurrentTime(s),!this._synced&&this._state.getValueAtTime(s)==="started")q(Rt(s,this._state.get(s).time),"Start time must be strictly greater than previous start time"),this._state.cancel(s),this._state.setStateAtTime("started",s),this.log("restart",s),this.restart(s,t,n);else if(this.log("start",s),this._state.setStateAtTime("started",s),this._synced){const i=this._state.get(s);i&&(i.offset=this.toSeconds(xt(t,0)),i.duration=n?this.toSeconds(n):void 0);const o=this.context.transport.schedule(a=>{this._start(a,t,n)},s);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>s&&this._syncedStart(this.now(),this.context.transport.seconds)}else ui(this.context),this._start(s,t,n);return this}stop(e){let t=De(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(t=this._clampToCurrentTime(t),this._state.getValueAtTime(t)==="started"||$(this._state.getNextState("started",t))){if(this.log("stop",t),!this._synced)this._stop(t);else{const n=this.context.transport.schedule(this._stop.bind(this),t);this._scheduled.push(n)}this._state.cancel(t),this._state.setStateAtTime("stopped",t)}return this}restart(e,t,n){return e=this.toSeconds(e),this._state.getValueAtTime(e)==="started"&&(this._state.cancel(e),this._restart(e,t,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,t)=>{if(Rt(t,0)){const n=this._state.get(t);if(n&&n.state==="started"&&n.time!==t){const s=t-this.toSeconds(n.time);let i;n.duration&&(i=this.toSeconds(n.duration)-s),this._start(e,this.toSeconds(n.offset)+s,i)}}},this._syncedStop=e=>{const t=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));this._state.getValueAtTime(t)==="started"&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(e=>this.context.transport.clear(e)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Q,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class Wn extends Dt{constructor(){const e=j(Wn.getDefaults(),arguments,["url","onload"]);super(e),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1,Gt(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new ie({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new ne(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Dt.getDefaults(),{url:new ne,loop:!1,loopEnd:0,loopStart:0,onload:Q,onerror:Q,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,t,n,s=1){q(this.buffer.loaded,"buffer is either not set or not loaded");const i=this.toSeconds(e);this._startGain(i,s),this.loop?t=xt(t,this.loopStart):t=xt(t,0);let o=Math.max(this.toSeconds(t),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),l=a-c;as(o,a)&&(o=(o-c)%l+c),Ve(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,An(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(i,o)),$(n)){let a=this.toSeconds(n);a=Math.max(a,0),this.stop(i+a)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}function Tt(r,e){return de(this,void 0,void 0,function*(){const t=e/r.context.sampleRate,n=new Is(1,t,r.context.sampleRate);return new r.constructor(Object.assign(r.get(),{frequency:2/t,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class qs extends Dt{constructor(){const e=j(qs.getDefaults(),arguments,["frequency","type"]);super(e),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator],Gt(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new ie({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new ie({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),ce(this,["frequency","detune"])}static getDefaults(){return Object.assign(Dt.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._oscillator.start(t),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class he extends ke{constructor(){const e=j(he.getDefaults(),arguments,["frequency","type"]);super(e),this.name="Oscillator",this._oscillator=null,this.frequency=new _e({context:this.context,units:"frequency",value:e.frequency}),ce(this,"frequency"),this.detune=new _e({context:this.context,units:"cents",value:e.detune}),ce(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&e.type!=="custom"&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(ke.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const t=this.toSeconds(e),n=new qs({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(t)}_stop(e){const t=this.toSeconds(e);this._oscillator&&this._oscillator.stop(t)}_restart(e){const t=this.toSeconds(e);return this.log("restart",t),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(t),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return he._periodicWaveCache.find(t=>t.phase===this._phase&&Xu(t.partials,this._partials));{const e=he._periodicWaveCache.find(t=>t.type===this._type&&t.phase===this._phase);return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const t=["sine","square","sawtooth","triangle"].indexOf(e)!==-1;if(this._phase===0&&t)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=e);else{const n=this._getCachedPeriodicWave();if($(n)){const{partials:s,wave:i}=n;this._wave=i,this._partials=s,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[s,i]=this._getRealImaginary(e,this._phase),o=this.context.createPeriodicWave(s,i);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),he._periodicWaveCache.push({imag:i,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:s,type:this._type,wave:this._wave}),he._periodicWaveCache.length>100&&he._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&this._type!=="custom"&&e!=="custom"?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){it(e,0);let t=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(t=n[1]),this._type!=="custom")e===0?this.type=t:this.type=t+e.toString();else{const s=new Float32Array(e);this._partials.forEach((i,o)=>s[o]=i),this._partials=Array.from(s),this.type=this._type}}_getRealImaginary(e,t){let s=2048;const i=new Float32Array(s),o=new Float32Array(s);let a=1;if(e==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,s=a,this._partials.length===0)return[i,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),e=c[1],a=Math.max(a,2),s=a):this._partialCount=0,this._partials=[]}for(let c=1;c<s;++c){const l=2/(c*Math.PI);let u;switch(e){case"sine":u=c<=a?1:0,this._partials[c-1]=u;break;case"square":u=c&1?2*l:0,this._partials[c-1]=u;break;case"sawtooth":u=l*(c&1?1:-1),this._partials[c-1]=u;break;case"triangle":c&1?u=2*(l*l)*(c-1>>1&1?-1:1):u=0,this._partials[c-1]=u;break;case"custom":u=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}u!==0?(i[c]=-u*Math.sin(t*c),o[c]=u*Math.cos(t*c)):(i[c]=0,o[c]=0)}return[i,o]}_inverseFFT(e,t,n){let s=0;const i=e.length;for(let o=0;o<i;o++)s+=e[o]*Math.cos(o*n)+t[o]*Math.sin(o*n);return s}getInitialValue(){const[e,t]=this._getRealImaginary(this._type,0);let n=0;const s=Math.PI*2,i=32;for(let o=0;o<i;o++)n=Math.max(this._inverseFFT(e,t,o/i*s),n);return Ju(-this._inverseFFT(e,t,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(){return de(this,arguments,void 0,function*(e=1024){return Tt(this,e)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}he._periodicWaveCache=[];class _h extends Pt{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new cn({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Vt extends _e{constructor(){const e=j(Vt.getDefaults(),arguments,["value"]);super(e),this.name="Multiply",this.override=!1,this._mult=this.input=this.output=new ye({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(_e.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Gn extends ke{constructor(){const e=j(Gn.getDefaults(),arguments,["frequency","type","modulationType"]);super(e),this.name="AMOscillator",this._modulationScale=new _h({context:this.context}),this._modulationNode=new ye({context:this.context}),this._carrier=new he({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new he({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Vt({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),ce(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(he.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(){return de(this,arguments,void 0,function*(e=1024){return Tt(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class jn extends ke{constructor(){const e=j(jn.getDefaults(),arguments,["frequency","type","modulationType"]);super(e),this.name="FMOscillator",this._modulationNode=new ye({context:this.context,gain:0}),this._carrier=new he({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new _e({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new he({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new Vt({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new Vt({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),ce(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(he.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(){return de(this,arguments,void 0,function*(e=1024){return Tt(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class ln extends ke{constructor(){const e=j(ln.getDefaults(),arguments,["frequency","width"]);super(e),this.name="PulseOscillator",this._widthGate=new ye({context:this.context,gain:0}),this._thresh=new cn({context:this.context,mapping:t=>t<=0?-1:1}),this.width=new _e({context:this.context,units:"audioRange",value:e.width}),this._triangle=new he({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),ce(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(ke.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(){return de(this,arguments,void 0,function*(e=1024){return Tt(this,e)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class Hn extends ke{constructor(){const e=j(Hn.getDefaults(),arguments,["frequency","type","spread"]);super(e),this.name="FatOscillator",this._oscillators=[],this.frequency=new _e({context:this.context,units:"frequency",value:e.frequency}),this.detune=new _e({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,ce(this,["frequency","detune"])}static getDefaults(){return Object.assign(he.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach(t=>t.start(e))}_stop(e){e=this.toSeconds(e),this._forEach(t=>t.stop(e))}_restart(e){this._forEach(t=>t.restart(e))}_forEach(e){for(let t=0;t<this._oscillators.length;t++)e(this._oscillators[t],t)}get type(){return this._type}set type(e){this._type=e,this._forEach(t=>t.type=e)}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const t=-e/2,n=e/(this._oscillators.length-1);this._forEach((s,i)=>s.detune.value=t+n*i)}}get count(){return this._oscillators.length}set count(e){if(it(e,1),this._oscillators.length!==e){this._forEach(t=>t.dispose()),this._oscillators=[];for(let t=0;t<e;t++){const n=new he({context:this.context,volume:-6-e*1.1,type:this._type,phase:this._phase+t/e*360,partialCount:this._partialCount,onstop:t===0?()=>this.onstop(this):Q});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[t]=n}this.spread=this._spread,this.state==="started"&&this._forEach(t=>t.start())}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach((t,n)=>t.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach(t=>t.baseType=e),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach(t=>t.partials=e))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach(t=>t.partialCount=e),this._type=this._oscillators[0].type}asArray(){return de(this,arguments,void 0,function*(e=1024){return Tt(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(e=>e.dispose()),this}}class zn extends ke{constructor(){const e=j(zn.getDefaults(),arguments,["frequency","modulationFrequency"]);super(e),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new Vt({context:this.context,value:2}),this._pulse=new ln({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new he({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),ce(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(ke.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(){return de(this,arguments,void 0,function*(e=1024){return Tt(this,e)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const pr={am:Gn,fat:Hn,fm:jn,oscillator:he,pulse:ln,pwm:zn};class In extends ke{constructor(){const e=j(In.getDefaults(),arguments,["frequency","type"]);super(e),this.name="OmniOscillator",this.frequency=new _e({context:this.context,units:"frequency",value:e.frequency}),this.detune=new _e({context:this.context,units:"cents",value:e.detune}),ce(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(he.getDefaults(),jn.getDefaults(),Gn.getDefaults(),Hn.getDefaults(),ln.getDefaults(),zn.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some(t=>this._sourceType===t)&&(e=this._sourceType),e+this._oscillator.type}set type(e){e.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):e==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):e==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const t=pr[e],n=this.now();if(this._oscillator){const s=this._oscillator;s.stop(n),this.context.setTimeout(()=>s.dispose(),this.blockTime)}this._oscillator=new t({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let t="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(t=this._oscillator.type),e==="fm"?this.type="fm"+t:e==="am"?this.type="am"+t:e==="fat"?this.type="fat"+t:e==="oscillator"?this.type=t:e==="pulse"?this.type="pulse":e==="pwm"&&(this.type="pwm")}_getOscType(e,t){return e instanceof pr[t]}get baseType(){return this._oscillator.baseType}set baseType(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&e!=="pulse"&&e!=="pwm"&&(this._oscillator.baseType=e)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(e){this._getOscType(this._oscillator,"fat")&&rt(e)&&(this._oscillator.count=e)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(e){this._getOscType(this._oscillator,"fat")&&rt(e)&&(this._oscillator.spread=e)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Xe(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(){return de(this,arguments,void 0,function*(e=1024){return Tt(this,e)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}function wi(r,e=1/0){const t=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(i){it(i,r,e),t.set(this,i)}})}}function Ke(r,e=1/0){const t=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(i){it(this.toSeconds(i),r,e),t.set(this,i)}})}}class Yn extends ke{constructor(){const e=j(Yn.getDefaults(),arguments,["url","onload"]);super(e),this.name="Player",this._activeSources=new Set,this._buffer=new ne({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(ke.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Q,onerror:Q,playbackRate:1,reverse:!1})}load(e){return de(this,void 0,void 0,function*(){return yield this._buffer.load(e),this._onload(),this})}_onload(e=Q){e(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,t,n){return super.start(e,t,n),this}_start(e,t,n){this._loop?t=xt(t,this._loopStart):t=xt(t,0);const s=this.toSeconds(t),i=n;n=xt(n,Math.max(this._buffer.duration-s,0));let o=this.toSeconds(n);o=o/this._playbackRate,e=this.toSeconds(e);const a=new Wn({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(e+o),this._state.setStateAtTime("stopped",e+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&De(i)?a.start(e,s):a.start(e,s,o-this.toSeconds(this.fadeOut))}_stop(e){const t=this.toSeconds(e);this._activeSources.forEach(n=>n.stop(t))}restart(e,t,n){return super.restart(e,t,n),this}_restart(e,t,n){var s;(s=[...this._activeSources].pop())===null||s===void 0||s.stop(e),this._start(e,t,n)}seek(e,t){const n=this.toSeconds(t);if(this._state.getValueAtTime(n)==="started"){const s=this.toSeconds(e);this._stop(n),this._start(n,s)}return this}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&it(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopStart=e})}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&it(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopEnd=e})}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach(t=>{t.loop=e}),e)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const t=this.now(),n=this._state.getNextState("stopped",t);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(s=>s.cancelStop())),this._activeSources.forEach(s=>{s.playbackRate.setValueAtTime(e,t)})}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(e=>e.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}Ge([Ke(0)],Yn.prototype,"fadeIn",void 0);Ge([Ke(0)],Yn.prototype,"fadeOut",void 0);class ut extends z{constructor(){const e=j(ut.getDefaults(),arguments,["attack","decay","sustain","release"]);super(e),this.name="Envelope",this._sig=new _e({context:this.context,value:0}),this.output=this._sig,this.input=void 0,this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(z.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,t){if(Xe(e))return e;{let n;for(n in pn)if(pn[n][t]===e)return n;return e}}_setCurve(e,t,n){if(Xe(n)&&Reflect.has(pn,n)){const s=pn[n];mt(s)?e!=="_decayCurve"&&(this[e]=s[t]):this[e]=s}else if(Oe(n)&&e!=="_decayCurve")this[e]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(e){this._setCurve("_decayCurve","Out",e)}triggerAttack(e,t=1){this.log("triggerAttack",e,t),e=this.toSeconds(e);let s=this.toSeconds(this.attack);const i=this.toSeconds(this.decay),o=this.getValueAtTime(e);if(o>0){const a=1/s;s=(1-o)/a}if(s<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(t,e);else if(this._attackCurve==="linear")this._sig.linearRampTo(t,s,e);else if(this._attackCurve==="exponential")this._sig.targetRampTo(t,s,e);else{this._sig.cancelAndHoldAtTime(e);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,e,s,t)}if(i&&this.sustain<1){const a=t*this.sustain,c=e+s;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,i+c):this._sig.exponentialApproachValueAtTime(a,c,i)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const t=this.getValueAtTime(e);if(t>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,e):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,e):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,e):(q(Oe(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,n,t))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,t,n=1){return t=this.toSeconds(t),this.triggerAttack(t,n),this.triggerRelease(t+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e,t=0,n=0){return Rs(this,e,t,n),this}asArray(){return de(this,arguments,void 0,function*(e=1024){const t=e/this.context.sampleRate,n=new Is(1,t,this.context.sampleRate),s=this.toSeconds(this.attack)+this.toSeconds(this.decay),i=s+this.toSeconds(this.release),o=i*.1,a=i+o,c=new this.constructor(Object.assign(this.get(),{attack:t*this.toSeconds(this.attack)/a,decay:t*this.toSeconds(this.decay)/a,release:t*this.toSeconds(this.release)/a,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(t*(s+o)/a,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}Ge([Ke(0)],ut.prototype,"attack",void 0);Ge([Ke(0)],ut.prototype,"decay",void 0);Ge([wi(0,1)],ut.prototype,"sustain",void 0);Ge([Ke(0)],ut.prototype,"release",void 0);const pn=(()=>{let e,t;const n=[];for(e=0;e<128;e++)n[e]=Math.sin(e/127*(Math.PI/2));const s=[],i=6.4;for(e=0;e<127;e++){t=e/127;const f=Math.sin(t*(Math.PI*2)*i-Math.PI/2)+1;s[e]=f/10+t*.83}s[127]=1;const o=[],a=5;for(e=0;e<128;e++)o[e]=Math.ceil(e/127*a)/a;const c=[];for(e=0;e<128;e++)t=e/127,c[e]=.5*(1-Math.cos(Math.PI*t));const l=[];for(e=0;e<128;e++){t=e/127;const f=Math.pow(t,3)*4+.2,p=Math.cos(f*Math.PI*2*t);l[e]=Math.abs(p*(1-t))}function u(f){const p=new Array(f.length);for(let d=0;d<f.length;d++)p[d]=1-f[d];return p}function h(f){return f.slice(0).reverse()}return{bounce:{In:u(l),Out:l},cosine:{In:n,Out:h(n)},exponential:"exponential",linear:"linear",ripple:{In:s,Out:u(s)},sine:{In:c,Out:u(c)},step:{In:o,Out:u(o)}}})();class at extends z{constructor(){const e=j(at.getDefaults(),arguments);super(e),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=t=>this._original_triggerRelease(t),this._volume=this.output=new jt({context:this.context,volume:e.volume}),this.volume=this._volume.volume,ce(this,"volume")}static getDefaults(){return Object.assign(z.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,t){const n=this["_original_"+e]=this[e];this[e]=(...s)=>{const i=s[t],o=this.context.transport.schedule(a=>{s[t]=a,n.apply(this,s)},i);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(e=>this.context.transport.clear(e)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(e,t,n,s){const i=this.toSeconds(n),o=this.toSeconds(t);return this.triggerAttack(e,i,s),this.triggerRelease(i+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class vt extends at{constructor(){const e=j(vt.getDefaults(),arguments);super(e),this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(at.getDefaults(),{detune:0,onsilence:Q,portamento:0})}triggerAttack(e,t,n=1){this.log("triggerAttack",e,t,n);const s=this.toSeconds(t);return this._triggerEnvelopeAttack(s,n),this.setNote(e,s),this}triggerRelease(e){this.log("triggerRelease",e);const t=this.toSeconds(e);return this._triggerEnvelopeRelease(t),this}setNote(e,t){const n=this.toSeconds(t),s=e instanceof xe?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const i=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(s,i,n)}else this.frequency.setValueAtTime(s,n);return this}}Ge([Ke(0)],vt.prototype,"portamento",void 0);class Ws extends ut{constructor(){super(j(Ws.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new ye({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Ft extends vt{constructor(){const e=j(Ft.getDefaults(),arguments);super(e),this.name="Synth",this.oscillator=new In(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new Ws(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),ce(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(vt.getDefaults(),{envelope:Object.assign(os(ut.getDefaults(),Object.keys(z.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(os(In.getDefaults(),[...Object.keys(ke.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,t){if(this.envelope.triggerAttack(e,t),this.oscillator.start(e),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+n+s)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class $n extends Ft{constructor(){const e=j($n.getDefaults(),arguments);super(e),this.name="MembraneSynth",this.portamento=0,this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,ce(this,["oscillator","envelope"])}static getDefaults(){return _t(vt.getDefaults(),Ft.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,t){const n=this.toSeconds(t),s=this.toFrequency(e instanceof xe?e.toFrequency():e),i=s*this.octaves;return this.oscillator.frequency.setValueAtTime(i,n),this.oscillator.frequency.exponentialRampToValueAtTime(s,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}Ge([wi(0)],$n.prototype,"octaves",void 0);Ge([Ke(0)],$n.prototype,"pitchDecay",void 0);const Ti=new Set;function Gs(r){Ti.add(r)}function Si(r,e){const t=`registerProcessor("${r}", ${e})`;Ti.add(t)}const gh=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;Gs(gh);const yh=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;Gs(yh);const vh=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;Gs(vh);const bh="feedback-comb-filter",wh=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;Si(bh,wh);class js extends at{constructor(){const e=j(js.getDefaults(),arguments,["voice","options"]);super(e),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=s=>this.releaseAll(s),q(!rt(e.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const t=e.voice.getDefaults();this.options=Object.assign(t,e.options),this.voice=e.voice,this.maxPolyphony=e.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const n=this._voices.indexOf(this._dummyVoice);this._voices.splice(n,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(at.getDefaults(),{maxPolyphony:32,options:{},voice:Ft})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(e){this._availableVoices.push(e);const t=this._activeVoices.findIndex(n=>n.voice===e);this._activeVoices.splice(t,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const e=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return q(e instanceof vt,"Voice must extend Monophonic class"),e.connect(this.output),this._voices.push(e),e}else Vn("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const e=this._availableVoices.shift(),t=this._voices.indexOf(e);this._voices.splice(t,1),this.context.isOffline||e.dispose()}}_triggerAttack(e,t,n){e.forEach(s=>{const i=new Mn(this.context,s).toMidi(),o=this._getNextAvailableVoice();o&&(o.triggerAttack(s,t,n),this._activeVoices.push({midi:i,voice:o,released:!1}),this.log("triggerAttack",s,t))})}_triggerRelease(e,t){e.forEach(n=>{const s=new Mn(this.context,n).toMidi(),i=this._activeVoices.find(({midi:o,released:a})=>o===s&&!a);i&&(i.voice.triggerRelease(t),i.released=!0,this.log("triggerRelease",n,t))})}_scheduleEvent(e,t,n,s){q(!this.disposed,"Synth was already disposed"),n<=this.now()?e==="attack"?this._triggerAttack(t,n,s):this._triggerRelease(t,n):this.context.setTimeout(()=>{this.disposed||this._scheduleEvent(e,t,n,s)},n-this.now())}triggerAttack(e,t,n){Array.isArray(e)||(e=[e]);const s=this.toSeconds(t);return this._scheduleEvent("attack",e,s,n),this}triggerRelease(e,t){Array.isArray(e)||(e=[e]);const n=this.toSeconds(t);return this._scheduleEvent("release",e,n),this}triggerAttackRelease(e,t,n,s){const i=this.toSeconds(n);if(this.triggerAttack(e,i,s),Oe(t)){q(Oe(e),"If the duration is an array, the notes must also be an array"),e=e;for(let o=0;o<e.length;o++){const a=t[Math.min(o,t.length-1)],c=this.toSeconds(a);q(c>0,"The duration must be greater than 0"),this.triggerRelease(e[o],i+c)}}else{const o=this.toSeconds(t);q(o>0,"The duration must be greater than 0"),this.triggerRelease(e,i+o)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}set(e){const t=os(e,["onsilence","context"]);return this.options=_t(this.options,t),this._voices.forEach(n=>n.set(t)),this._dummyVoice.set(t),this}get(){return this._dummyVoice.get()}releaseAll(e){const t=this.toSeconds(e);return this._activeVoices.forEach(({voice:n})=>{n.triggerRelease(t)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(e=>e.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class un extends at{constructor(){const e=j(un.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");super(e),this.name="Sampler",this._activeSources=new Map;const t={};Object.keys(e.urls).forEach(n=>{const s=parseInt(n,10);if(q(fn(n)||rt(s)&&isFinite(s),`url key is neither a note or midi pitch: ${n}`),fn(n)){const i=new xe(this.context,n).toMidi();t[i]=e.urls[n]}else rt(s)&&isFinite(s)&&(t[s]=e.urls[s])}),this._buffers=new Ls({urls:t,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(at.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Q,onerror:Q,release:.1,urls:{}})}_findClosest(e){let n=0;for(;n<96;){if(this._buffers.has(e+n))return-n;if(this._buffers.has(e-n))return n;n++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,t,n=1){return this.log("triggerAttack",e,t,n),Array.isArray(e)||(e=[e]),e.forEach(s=>{const i=vi(new xe(this.context,s).toFrequency()),o=Math.round(i),a=i-o,c=this._findClosest(o),l=o-c,u=this._buffers.get(l),h=yi(c+a),f=new Wn({url:u,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:h}).connect(this.output);f.start(t,0,u.duration/h,n),Oe(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(f),f.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const p=this._activeSources.get(o),d=p.indexOf(f);d!==-1&&p.splice(d,1)}}}),this}triggerRelease(e,t){return this.log("triggerRelease",e,t),Array.isArray(e)||(e=[e]),e.forEach(n=>{const s=new xe(this.context,n).toMidi();if(this._activeSources.has(s)&&this._activeSources.get(s).length){const i=this._activeSources.get(s);t=this.toSeconds(t),i.forEach(o=>{o.stop(t)}),this._activeSources.set(s,[])}}),this}releaseAll(e){const t=this.toSeconds(e);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(t)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,t,n,s=1){const i=this.toSeconds(n);return this.triggerAttack(e,i,s),Oe(t)?(q(Oe(e),"notes must be an array when duration is array"),e.forEach((o,a)=>{const c=t[Math.min(a,t.length-1)];this.triggerRelease(o,i+this.toSeconds(c))})):this.triggerRelease(e,i+this.toSeconds(t)),this}add(e,t,n){if(q(fn(e)||isFinite(e),`note must be a pitch or midi: ${e}`),fn(e)){const s=new xe(this.context,e).toMidi();this._buffers.add(s,t,n)}else this._buffers.add(e,t,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(e=>{e.forEach(t=>t.dispose())}),this._activeSources.clear(),this}}Ge([Ke(0)],un.prototype,"attack",void 0);Ge([Ke(0)],un.prototype,"release",void 0);class Hs extends z{constructor(){const e=j(Hs.getDefaults(),arguments,["pan"]);super(e),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner,this.pan=new ie({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",ce(this,"pan")}static getDefaults(){return Object.assign(z.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const Th="bit-crusher",Sh=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;Si(Th,Sh);class ue extends z{constructor(){const e=j(ue.getDefaults(),arguments,["solo"]);super(e),this.name="Solo",this.input=this.output=new ye({context:this.context}),ue._allSolos.has(this.context)||ue._allSolos.set(this.context,new Set),ue._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(z.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),ue._allSolos.get(this.context).forEach(t=>t._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){ue._soloed.has(this.context)||ue._soloed.set(this.context,new Set),ue._soloed.get(this.context).add(this)}_removeSolo(){ue._soloed.has(this.context)&&ue._soloed.get(this.context).delete(this)}_isSoloed(){return ue._soloed.has(this.context)&&ue._soloed.get(this.context).has(this)}_noSolos(){return!ue._soloed.has(this.context)||ue._soloed.has(this.context)&&ue._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),ue._allSolos.get(this.context).delete(this),this._removeSolo(),this}}ue._allSolos=new Map;ue._soloed=new Map;class zs extends z{constructor(){const e=j(zs.getDefaults(),arguments,["pan","volume"]);super(e),this.name="PanVol",this._panner=this.input=new Hs({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new jt({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,ce(this,["pan","volume"])}static getDefaults(){return Object.assign(z.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class It extends z{constructor(){const e=j(It.getDefaults(),arguments,["volume","pan"]);super(e),this.name="Channel",this._solo=this.input=new ue({solo:e.solo,context:this.context}),this._panVol=this.output=new zs({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),ce(this,["pan","volume"])}static getDefaults(){return Object.assign(z.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return It.buses.has(e)||It.buses.set(e,new ye({context:this.context})),It.buses.get(e)}send(e,t=0){const n=this._getBus(e),s=new ye({context:this.context,units:"decibels",gain:t});return this.connect(s),s.connect(n),s}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}It.buses=new Map;Le().transport;Le().destination;Le().destination;Le().listener;Le().draw;Le();const mr={"A#":"Bb","C#":"Db","D#":"Eb","F#":"Gb","G#":"Ab"},ls=r=>{if(r.length===2)return r;const e=r[0]+r[1],t=r[r.length-1];console.log(e);for(const n in mr)if(e===n)return mr[n]+t;return r},Eh=(r=0,e=7,t=".mp3")=>{const n={},s=["A","A#","B","C","C#","D","D#","E","F","F#","G","G#"];for(let a=0;a<=7;a++)for(const c of s){const l=ls(c+a);n[l]=l+t}return n};window.addEventListener("click",()=>sh());const Nh=new js(Ft).toDestination(),Ch="acoustic_bass-mp3",Yt=new un({urls:Eh(),release:1,baseUrl:`https://gleitz.github.io/midi-js-soundfonts/FluidR3_GM/${Ch}/`,onload:()=>{console.log("Sampler ready!",Yt)}}).toDestination();window.midiano={synth:Nh,piano:Yt};const mn={};O.enable(r=>{if(r){console.log("WebMidi не доступен:",r);return}const e=O.inputs[0];e==null||e.addListener("noteon",async t=>{const n=t.note.name+(t.note.accidental||"")+t.note.octave,s=ls(n);mn[s]=Date.now(),Yt.triggerAttack(s,void 0,t.velocity),console.log(`Нота: ${s}, velocity: ${t.velocity}`)}),e==null||e.addListener("noteoff",t=>{const n=t.note.name+(t.note.accidental||"")+t.note.octave,s=ls(n);if(!mn[s])return;const i=Date.now()-mn[s];Yt.release=Math.min(i*.7,3),Yt.triggerRelease(s),delete mn[s]})});
